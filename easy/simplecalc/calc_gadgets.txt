Gadgets information
============================================================
0x000000000041fd6f : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041fdd9 : adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004b8778 : adc al, 0 ; add byte ptr [rax], al ; add al, 0x58 ; add byte ptr [rax], al ; push rax ; ret 0xfff7
0x00000000004b8760 : adc al, 0 ; add byte ptr [rax], al ; in al, dx ; push rdi ; add byte ptr [rax], al ; ret 0xfff7
0x00000000004bf2d8 : adc al, 0 ; add byte ptr [rax], al ; ret
0x00000000004bf308 : adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret
0x00000000004263f5 : adc al, 0x13 ; jmp rdx
0x00000000004249e5 : adc al, 0x16 ; sub eax, edx ; ret
0x00000000004379b8 : adc al, 0x18 ; add byte ptr [rax], al ; ret
0x000000000048fbf8 : adc al, 0x1a ; call 0x4228d9
0x000000000043563a : adc al, 0x24 ; add rsp, 0x18 ; mov eax, edx ; ret
0x00000000004349ed : adc al, 0x24 ; add rsp, 0x18 ; mov rax, rdx ; ret
0x000000000048f9ca : adc al, 0x24 ; mov edi, 1 ; call rax
0x0000000000411a3d : adc al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004315b0 : adc al, 0x48 ; lea eax, dword ptr [rdi + 0x14] ; ret
0x0000000000416762 : adc al, 0x77 ; sub ecx, dword ptr [rcx - 0x7d] ; ret
0x0000000000454eab : adc al, 0x83 ; ret 0x8308
0x0000000000434d63 : adc al, 0x89 ; ret 0xdaf7
0x0000000000468408 : adc al, 0x8a ; add eax, dword ptr [rsi + rdx] ; ret
0x000000000046272e : adc al, 0x8a ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000421200 : adc al, 0x91 ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000041f92e : adc al, 0x91 ; sub eax, edx ; ret
0x00000000004263f1 : adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000417bb7 : adc al, 0xa ; jmp r10
0x0000000000424b53 : adc al, 0xa ; sub eax, edx ; ret
0x000000000044855c : adc al, 0xc5 ; sal byte ptr [rdi + 0x4a], 0 ; jmp rdx
0x000000000044bdb1 : adc al, 0xc5 ; sar byte ptr [rax + 0x4a], 0 ; jmp rdx
0x00000000004477fe : adc al, 0xc5 ; sar byte ptr [rbp + 0x4a], 0 ; jmp rdx
0x000000000044bb55 : adc al, 0xc5 ; sar byte ptr [rbx + 0x4a], 0 ; jmp rdx
0x000000000044bc8d : adc al, 0xc5 ; sar byte ptr [rcx + 0x4a], 0 ; jmp rdx
0x000000000044bba3 : adc al, 0xc5 ; sar byte ptr [rdx + 0x4a], 0 ; jmp rdx
0x00000000004bf98c : adc al, 0xca ; add byte ptr [rax], al ; add byte ptr [rdi], al ; std ; call rsp
0x000000000047e645 : adc al, 0xcd ; add al, bpl ; ret 0xf837
0x0000000000401c39 : adc al, 0xdd ; ror byte ptr [rsi], 1 ; insb byte ptr [rdi], dx ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000419091 : adc al, 0xe ; sub eax, edx ; ret
0x0000000000404f9a : adc al, 0xe9 ; clc ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000048fd4c : adc al, 0xf7 ; add rsp, 8 ; ret
0x0000000000497175 : adc al, 0xf9 ; call rax
0x0000000000438fd2 : adc al, al ; sub byte ptr [rax], al ; test eax, eax ; je 0x438fe8 ; ret
0x00000000004b222c : adc al, bh ; cld ; call rax
0x000000000041ff17 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041ff81 : adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000045a22e : adc al, byte ptr [rbx - 0x110f43] ; call qword ptr [rax]
0x0000000000447d7a : adc al, byte ptr [rbx - 0x54f43] ; call qword ptr [rax]
0x0000000000404a58 : adc al, byte ptr [rsi + 0x49] ; add cl, ch ; ret 0xfff1
0x0000000000473a92 : adc al, ch ; mov byte ptr [rdi + 1], ch ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000473790 : adc al, ch ; mov dh, byte ptr [rdx + 1] ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000406e87 : adc al, ch ; ret
0x000000000048ce38 : adc al, ch ; ret 0xfe7b
0x00000000004b2278 : adc bh, 0xfc ; call rax
0x00000000004b3c7c : adc bh, byte ptr [rsi] ; cmc ; jmp qword ptr [rdx]
0x00000000004b2225 : adc bh, ch ; jmp rax
0x00000000004970cd : adc bh, cl ; jmp rax
0x000000000041d3b5 : adc bl, ch ; call 0xffffffffc4125d0a
0x0000000000419e35 : adc bl, ch ; call 0xffffffffc43a278a
0x0000000000475402 : adc bl, ch ; jno 0x475458 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000041cd85 : adc bl, dh ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x0000000000430ee6 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000430f57 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000430eb7 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000430ee5 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000471520 : adc byte ptr [r11 + 0x5d], r11b ; pop r12 ; ret
0x0000000000461dc1 : adc byte ptr [r15], cl ; xchg eax, ebx ; ret 0x3948
0x000000000040ae73 : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3948
0x0000000000467b98 : adc byte ptr [r8 + r9*4 + 0x63], al ; adc cl, byte ptr [rax + 1] ; ret
0x000000000046eeae : adc byte ptr [r8 - 0x77], r9b ; ret 0x18e8
0x000000000046f3e3 : adc byte ptr [r8 - 0x77], r9b ; ret 0xe3e8
0x0000000000445e79 : adc byte ptr [rax + 0x39], cl ; ret
0x00000000004135dc : adc byte ptr [rax + 0x39], cl ; ret 0x840f
0x00000000004704f0 : adc byte ptr [rax + 0x48004704], ah ; mov dword ptr [rax + 8], edx ; ret
0x000000000040b944 : adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000475a2e : adc byte ptr [rax + 1], cl ; ret
0x0000000000467b99 : adc byte ptr [rax + rcx*4 + 0x63], al ; adc cl, byte ptr [rax + 1] ; ret
0x0000000000468405 : adc byte ptr [rax - 0x73], cl ; adc al, 0x8a ; add eax, dword ptr [rsi + rdx] ; ret
0x0000000000422944 : adc byte ptr [rax - 0x73], cl ; jg 0x422961 ; jne 0x422938 ; ret
0x0000000000468404 : adc byte ptr [rax - 0x73], r9b ; adc al, 0x8a ; add eax, dword ptr [rsi + rdx] ; ret
0x00000000004904ea : adc byte ptr [rax - 0x75], cl ; jne 0x4904f5 ; call r14
0x0000000000489ac6 : adc byte ptr [rax - 0x75], cl ; or cl, byte ptr [rax - 0x7d] ; ret 0xf08
0x0000000000422d5a : adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x00000000004615b7 : adc byte ptr [rax - 0x77], cl ; jo 0x4615d5 ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000461577 : adc byte ptr [rax - 0x77], cl ; push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000048cc88 : adc byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x000000000046157b : adc byte ptr [rax - 0x77], cl ; ret
0x000000000046eeaf : adc byte ptr [rax - 0x77], cl ; ret 0x18e8
0x00000000004144aa : adc byte ptr [rax - 0x77], cl ; ret 0x8d48
0x000000000046f3e4 : adc byte ptr [rax - 0x77], cl ; ret 0xe3e8
0x000000000042dc57 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x000000000042dc93 : adc byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x85 ; ret
0x0000000000401667 : adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000410773 : adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000416643 : adc byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000004231c6 : adc byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x00000000004933a7 : adc byte ptr [rax - 0x7f], cl ; jmp qword ptr [rax]
0x00000000004932f7 : adc byte ptr [rax - 0x7f], cl ; jmp rax
0x000000000040ce24 : adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004217cc : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000420121 : adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000459fc3 : adc byte ptr [rax], al ; add byte ptr [rax], al ; jmp rdx
0x0000000000455a22 : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr fs:[rdx], eax ; jmp 0x451ca1
0x0000000000433bb0 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000414005 : adc byte ptr [rbp + 0x31], al ; in al, -0x18 ; ret 0xffcb
0x000000000046b4a1 : adc byte ptr [rbp + 0x31], al ; ror byte ptr [rcx - 0x77], cl ; ret
0x000000000041ceb8 : adc byte ptr [rbp - 0x1b], dh ; mov rax, rdi ; ret
0x0000000000422948 : adc byte ptr [rbp - 0x1b], dh ; ret
0x0000000000447d81 : adc byte ptr [rbp - 0x6bf001bf], cl ; ret 0xd284
0x0000000000435b47 : adc byte ptr [rbp - 0x7b], cl ; test byte ptr [rdi], 0x84 ; ret 0
0x0000000000464559 : adc byte ptr [rbp - 0xc0d8a2e], al ; ret
0x0000000000496e78 : adc byte ptr [rbp - 8], dh ; jmp qword ptr [rax]
0x0000000000437c63 : adc byte ptr [rbx + 0x5d], bl ; and eax, 0xc ; pop r12 ; ret
0x000000000045f83c : adc byte ptr [rbx + 0x5d], bl ; mov rax, r12 ; pop r12 ; ret
0x00000000004145cb : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000405aa3 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004bfebb : adc byte ptr [rbx + 0xa4a0202], al ; ret
0x00000000004bc8b3 : adc byte ptr [rbx + 0xa530202], al ; ret
0x00000000004bc8e3 : adc byte ptr [rbx + 0xa5f0202], al ; ret
0x000000000040f1b2 : adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000047e877 : adc byte ptr [rbx - 0x3f7a8fb9], cl ; js 0x47e891 ; ret
0x00000000004bf740 : adc byte ptr [rbx], al ; std ; jmp rsp
0x00000000004974b8 : adc byte ptr [rbx], bh ; stc ; call qword ptr [rax + 0x10fff93a]
0x00000000004b1d31 : adc byte ptr [rbx], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rax]
0x0000000000474fd9 : adc byte ptr [rcx + 0x29], cl ; ret
0x000000000045f472 : adc byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000406619 : adc byte ptr [rcx + rcx*4 - 0x29], cl ; call 0x4228d6
0x00000000004974b0 : adc byte ptr [rcx + rdi*8], bh ; call qword ptr [rax + 0x10fff93b]
0x0000000000497120 : adc byte ptr [rcx + rdi*8], cl ; call rax
0x00000000004487e3 : adc byte ptr [rcx - 0x73], al ; dec byte ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x0000000000492897 : adc byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x0000000000419113 : adc byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000481cc7 : adc byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x0000000000434054 : adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004974c8 : adc byte ptr [rcx], bh ; stc ; call qword ptr [rax + 0x10fff938]
0x00000000004b9980 : adc byte ptr [rcx], ch ; clc ; call qword ptr [rax]
0x000000000040f1b5 : adc byte ptr [rcx], ch ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000048e922 : adc byte ptr [rdi + rcx + 0x44], cl ; ret
0x000000000043413f : adc byte ptr [rdi + rdx*8 + 0x48], dh ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000004b226c : adc byte ptr [rdi], 0xfd ; jmp rax
0x00000000004317c3 : adc byte ptr [rdi], cl ; test edx, esi ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000048513b : adc byte ptr [rdi], cl ; xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000483c3f : adc byte ptr [rdi], cl ; xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x0000000000484e3f : adc byte ptr [rdi], cl ; xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000048453f : adc byte ptr [rdi], cl ; xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000048483f : adc byte ptr [rdi], cl ; xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000483f37 : adc byte ptr [rdi], cl ; xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004841e4 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000484de4 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004850e4 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004847e4 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004844e4 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x0000000000483edc : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000482f6d : adc byte ptr [rdi], cl ; xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000482d8d : adc byte ptr [rdi], cl ; xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000483765 : adc byte ptr [rdi], cl ; xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000482685 : adc byte ptr [rdi], cl ; xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000483585 : adc byte ptr [rdi], cl ; xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000040ae74 : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x000000000044583d : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3949
0x0000000000497158 : adc byte ptr [rdi], dl ; stc ; call qword ptr [rax]
0x0000000000461f9e : adc byte ptr [rdi], r9b ; xchg eax, ebx ; ret 0x3948
0x000000000044583c : adc byte ptr [rdi], r9b ; xchg eax, ebx ; ret 0x3949
0x00000000004268e9 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000408313 : adc byte ptr [rdx + rdx*8 + 0x394ce875], al ; ret
0x0000000000434d6b : adc byte ptr [rdx], al ; cmove eax, edx ; jmp 0x434d2f
0x00000000004974c0 : adc byte ptr [rdx], bh ; stc ; call qword ptr [rax + 0x10fff939]
0x000000000042584b : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000497154 : adc byte ptr [rip + 0x1710fff9], dl ; stc ; call qword ptr [rax]
0x00000000004256fa : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret
0x0000000000424cf5 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000417d05 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000041d83b : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x00000000004bb7a0 : adc byte ptr [rsi - 6], cl ; jmp rsi
0x00000000004746d7 : adc byte ptr [rsi], al ; ret
0x00000000004b6969 : adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret
0x000000000048ca0f : adc byte ptr [rsp - 4], al ; ret
0x000000000048ca55 : adc byte ptr [rsp - 8], al ; ret
0x00000000004841e7 : adc byte ptr es:[rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004b2221 : adc ch, bh ; inc dword ptr [rax] ; adc bh, ch ; jmp rax
0x00000000004970a9 : adc cl, bh ; call qword ptr [rax]
0x00000000004970c9 : adc cl, bh ; inc dword ptr [rax] ; adc bh, cl ; jmp rax
0x00000000004970e9 : adc cl, bh ; jmp rax
0x0000000000467b9d : adc cl, byte ptr [rax + 1] ; ret
0x00000000004758c4 : adc cl, byte ptr [rax + 1] ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x0000000000419e25 : adc cl, byte ptr [rax - 1] ; ret 0x2288
0x000000000043f7e3 : adc cl, byte ptr [rbp - 0x77] ; ret
0x000000000041bd88 : adc cl, ch ; ret 0xfffd
0x000000000041ce24 : adc dh, bh ; ret
0x00000000004143c0 : adc dword ptr [rax + 0x29], ecx ; ret 0x3948
0x000000000041b8db : adc dword ptr [rax + 0x39], ecx ; ret
0x000000000041115e : adc dword ptr [rax - 0x77], ecx ; ret 0x8348
0x0000000000472dba : adc dword ptr [rax - 0x7d], ecx ; ret 0x4808
0x00000000004217cb : adc dword ptr [rax], 0x83480000 ; ret 0x4910
0x00000000004200b7 : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004216cf : adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000410644 : adc dword ptr [rbx], ebp ; add byte ptr [rax + 0x39], cl ; ret 0xb76
0x00000000004b9506 : adc dword ptr [rip + 0xd1cfff8], ebx ; xor ebx, dword ptr [rax + rdi*8] ; jmp qword ptr [rdx]
0x00000000004431bb : adc dword ptr [rip - 0xc6f0003], esp ; ret
0x00000000004200b6 : adc dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000497155 : adc eax, 0x1710fff9 ; stc ; call qword ptr [rax]
0x00000000004970d5 : adc eax, 0x17d0fff9 ; stc ; call rax
0x0000000000438ff7 : adc eax, 0x287f9c ; pop rbx ; ret
0x000000000046e45d : adc eax, 0x4000003 ; add rsp, 8 ; ret
0x000000000046e399 : adc eax, 0x4000003 ; xor eax, eax ; ret
0x00000000004a8bd0 : adc eax, 0x45b2 ; add byte ptr [rax], al ; add dh, bl ; ret 0x45
0x0000000000400d08 : adc eax, 0x5b000001 ; pop rbp ; pop r12 ; ret
0x000000000045347b : adc eax, 0x83480000 ; ret
0x000000000041fc41 : adc eax, 0x83480000 ; ret 0xe910
0x0000000000410b48 : adc eax, 0x8948002b ; ret 0x8948
0x0000000000463b6a : adc eax, 0xe180d188 ; pcmpeqb mm3, qword ptr [rsi] ; ret
0x0000000000453d52 : adc eax, dword ptr [eax] ; add byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret
0x0000000000453d53 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret
0x000000000042152e : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004824a9 : adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000483edf : adc eax, dword ptr cs:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000476489 : adc eax, eax ; ret
0x00000000004765c6 : adc eax, edx ; pop rbp ; pop rbx ; ret
0x0000000000400e0e : adc ebp, dword ptr [rax + rax] ; pop r12 ; ret
0x00000000004aee85 : adc ebp, dword ptr [rbx] ; fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x000000000047142c : adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040994d : adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004bd411 : adc ebx, edi ; call rdx
0x0000000000476820 : adc ecx, dword ptr [rax - 0x73] ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000040f15c : adc ecx, dword ptr [rax - 0x77] ; ret 0x8b48
0x0000000000463c5c : adc ecx, dword ptr [rax - 0x7d] ; in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000048acd9 : adc ecx, dword ptr [rax - 0x7d] ; ret
0x00000000004030a3 : adc ecx, dword ptr [rax - 0x7d] ; ret 0x4901
0x00000000004424b4 : adc ecx, dword ptr [rcx + 0x29d231f3] ; ret
0x0000000000490da7 : adc ecx, dword ptr [rcx - 0x77] ; ret
0x00000000004383ab : adc ecx, dword ptr [rdx + 0x9480049] ; ret 0x8948
0x000000000049714d : adc ecx, edi ; inc dword ptr [rax + 0x13] ; stc ; call qword ptr [rax]
0x000000000049716d : adc ecx, edi ; inc dword ptr [rax] ; adc edi, ecx ; call rax
0x000000000048c694 : adc edi, dword ptr [rcx] ; ret 0x840f
0x000000000048c748 : adc edi, dword ptr [rcx] ; ret 0x850f
0x00000000004b2229 : adc edi, ebp ; call qword ptr [rax]
0x0000000000497151 : adc edi, ecx ; call qword ptr [rax]
0x00000000004970d1 : adc edi, ecx ; call rax
0x00000000004b33d4 : adc edi, esi ; hlt ; jmp qword ptr [rdx]
0x00000000004b039e : adc esi, dword ptr [rbp - 0x60001a67] ; mov dh, 0xc7 ; ret 0xe71f
0x000000000040d5e1 : adc esi, esi ; ret 0xf02
0x00000000004840c2 : adc qword ptr [r8], rax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041cd84 : adc r11b, r14b ; movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x0000000000473a91 : adc r8b, bpl ; mov byte ptr [rdi + 1], ch ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000047378f : adc r8b, bpl ; mov dh, byte ptr [rdx + 1] ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000482610 : adc r8b, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004765c5 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x000000000041ce23 : adc sil, r15b ; ret
0x00000000004bd73b : add ah, al ; cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; and byte ptr [rcx], bh ; sti ; call qword ptr [rbx]
0x00000000004bdd3b : add ah, al ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; loopne 0x4bdda8 ; std ; call rcx
0x00000000004bf73b : add ah, al ; mov dword ptr [rax], 0xfd031000 ; jmp rsp
0x00000000004bb93b : add ah, al ; mov dword ptr [rax], eax ; add al, al ; push rdx ; cli ; jmp rbx
0x00000000004bec3b : add ah, al ; mov esp, 0x66800000 ; cld ; call qword ptr [rax]
0x00000000004bc03b : add ah, al ; nop ; add byte ptr [rax], al ; loopne 0x4bc0b5 ; cli ; jmp rdx
0x00000000004aca57 : add ah, al ; ret
0x00000000004bb43b : add ah, al ; test byte ptr [rax], al ; add al, dh ; cli ; call qword ptr [rdx]
0x0000000000433b3e : add ah, bh ; add eax, dword ptr [rax] ; pop rbx ; ret
0x0000000000433b61 : add ah, bh ; add eax, dword ptr [rax] ; ret
0x0000000000433bff : add ah, bh ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x0000000000433b1d : add ah, bh ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000004beb73 : add ah, bh ; mov ebx, 0x2d480000 ; cld ; call qword ptr [rax]
0x00000000004aca97 : add ah, bh ; ret
0x00000000004b3053 : add ah, bl ; add byte ptr [rax], al ; add byte ptr [rbx], bl ; jrcxz 0x4b3057 ; call qword ptr [rax]
0x00000000004b9853 : add ah, bl ; push -0x66a80000 ; std ; jmp qword ptr [rdx]
0x0000000000474a5f : add ah, byte ptr [rax + 0x48006c2b] ; add esp, 0x58 ; ret
0x00000000004b4183 : add ah, ch ; add dword ptr [rax], eax ; add byte ptr [rax + 0x46], bh ; cmc ; call qword ptr [rax]
0x00000000004b8763 : add ah, ch ; push rdi ; add byte ptr [rax], al ; ret 0xfff7
0x00000000004b6063 : add ah, ch ; xor byte ptr [rax], al ; add al, cl ; pushfq ; cmc ; call qword ptr [rsi]
0x00000000004bdc43 : add ah, cl ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; call 0x234bd7be
0x00000000004b8343 : add ah, cl ; push rbx ; add byte ptr [rax], al ; call 0x114b7a8a
0x00000000004bf343 : add ah, cl ; ret
0x00000000004b3d6b : add ah, dh ; or eax, 0x3f400000 ; cmc ; call qword ptr [rax]
0x00000000004bf36b : add ah, dh ; ret
0x00000000004b794b : add ah, dl ; add byte ptr [r8], al ; sbb ch, 0xf5 ; jmp rbx
0x00000000004bea4b : add ah, dl ; mov edx, 0x4f00000 ; cld ; jmp qword ptr [rdx]
0x00000000004bf24b : add ah, dl ; ret 0
0x00000000004b614b : add ah, dl ; xor dword ptr [rax], eax ; add al, dh ; popfq ; cmc ; call qword ptr [rdx]
0x000000000043dd4f : add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x8b49
0x0000000000470598 : add al, 0 ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000469ead : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041984d : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004223ef : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000419871 : add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000490611 : add al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000043652c : add al, 0 ; add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x0000000000463bf3 : add al, 0 ; add byte ptr [rax], al ; ret
0x0000000000473f4b : add al, 0 ; add byte ptr [rcx - 0x73], al ; pop rsi ; dec dword ptr [rax + 0x63] ; ret
0x00000000004657cb : add al, 0 ; add byte ptr [rdi + rcx - 0x49], al ; ret 0x8d42
0x000000000047b5d9 : add al, 0 ; add byte ptr [rdi], cl ; ret 0xc801
0x0000000000433b8d : add al, 0x12 ; pop rbx ; and eax, 0x7ff80000 ; ret
0x000000000046840b : add al, 0x16 ; ret
0x00000000004249e1 : add al, 0x17 ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x0000000000418f4a : add al, 0x17 ; sub eax, ecx ; ret
0x00000000004b4e7c : add al, 0x1f ; add byte ptr [rax], al ; xor byte ptr [rax - 0xb], dh ; jmp rax
0x000000000047ec90 : add al, 0x24 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000043adc9 : add al, 0x24 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000473618 : add al, 0x24 ; add rsp, 0x48 ; jmp r11
0x00000000004796a2 : add al, 0x24 ; call 0x475964
0x000000000043dfbd : add al, 0x24 ; call qword ptr [rbx]
0x000000000043a0e6 : add al, 0x24 ; call rbx
0x00000000004452aa : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004079f1 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000462e0e : add al, 0x31 ; ret
0x0000000000462d0a : add al, 0x37 ; ret
0x000000000040ebef : add al, 0x3a ; ret
0x0000000000433813 : add al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000046e461 : add al, 0x48 ; add esp, 8 ; ret
0x00000000004714c2 : add al, 0x48 ; cmp ecx, dword ptr [rsi + rdi] ; jae 0x47148a ; xor eax, eax ; ret
0x0000000000470e15 : add al, 0x48 ; cmp edx, ecx ; jne 0x470dd1 ; mov eax, dword ptr [rdx] ; ret
0x000000000043141b : add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x0000000000430929 : add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x000000000043093b : add al, 0x48 ; lea eax, dword ptr [rdx + 5] ; ret
0x0000000000461b03 : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x0000000000461a5e : add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000042b45a : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x00000000004618f4 : add al, 0x48 ; mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000042f169 : add al, 0x48 ; mov eax, edi ; ret
0x0000000000462a04 : add al, 0x48 ; xor eax, eax ; ret
0x00000000004b877c : add al, 0x58 ; add byte ptr [rax], al ; push rax ; ret 0xfff7
0x0000000000430937 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x000000000042f177 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x00000000004b997c : add al, 0x6a ; add byte ptr [rax], al ; adc byte ptr [rcx], ch ; clc ; call qword ptr [rax]
0x0000000000413471 : add al, 0x74 ; cmp al, 0x89 ; ret 0xb48b
0x00000000004424b2 : add al, 0x77 ; adc ecx, dword ptr [rcx + 0x29d231f3] ; ret
0x0000000000416945 : add al, 0x77 ; or dword ptr [rcx - 0x7d], ecx ; ret
0x00000000004bb79c : add al, 0x78 ; add byte ptr [rax], al ; adc byte ptr [rsi - 6], cl ; jmp rsi
0x00000000004bae7c : add al, 0x7f ; add byte ptr [rax], al ; jo 0x4baee8 ; stc ; call rdi
0x000000000049208c : add al, 0x81 ; add r9, rax ; jmp r9
0x000000000048e4e5 : add al, 0x81 ; add rcx, rax ; jmp rcx
0x0000000000487855 : add al, 0x81 ; je 0x487835 ; ret
0x000000000041f92b : add al, 0x81 ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x0000000000487851 : add al, 0x81 ; sub eax, dword ptr [rcx + r8*4] ; je 0x487839 ; ret
0x0000000000421203 : add al, 0x81 ; sub eax, edx ; ret
0x0000000000433cba : add al, 0x82 ; sub eax, dword ptr [rdx + rcx*4] ; je 0x433ca8 ; ret
0x000000000041f687 : add al, 0x82 ; sub eax, ecx ; ret
0x00000000004bb27c : add al, 0x83 ; add byte ptr [rax], al ; shr al, 0xf9 ; call rdx
0x000000000048e3e4 : add al, 0x83 ; add rax, r11 ; jmp rax
0x000000000043eee7 : add al, 0x83 ; cli ; add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4806
0x000000000048ef34 : add al, 0x86 ; add r8, r14 ; jmp r8
0x000000000048f441 : add al, 0x87 ; add rax, r15 ; jmp rax
0x0000000000430926 : add al, 0x88 ; add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x000000000042f166 : add al, 0x88 ; add al, 0x48 ; mov eax, edi ; ret
0x0000000000433cbd : add al, 0x8a ; je 0x433ca5 ; ret
0x0000000000464557 : add al, 0x8b ; adc byte ptr [rbp - 0xc0d8a2e], al ; ret
0x000000000045fbab : add al, 0x8b ; cmp byte ptr [rax - 0x77], cl ; ret 0xef83
0x0000000000450f30 : add al, 0x8b ; or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x000000000045fce1 : add al, 0x8b ; xor byte ptr [rax - 0x77], cl ; ret 0xee83
0x0000000000490674 : add al, 0xb8 ; add r8, rax ; jmp r8
0x00000000004794e3 : add al, 0xbe ; ret 0x4ad4
0x00000000004b2a8c : add al, 0xc2 ; std ; inc dword ptr [rdx + rax*8] ; std ; jmp rsp
0x00000000004b2a74 : add al, 0xc2 ; std ; jmp rsp
0x000000000047651d : add al, 0xde ; lea r9, qword ptr [rdx] ; jmp 0x476579
0x000000000048c93d : add al, 0xde ; lea r9, qword ptr [rdx] ; jmp 0x48c999
0x0000000000438027 : add al, 0xe8 ; ret
0x000000000047ee71 : add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041908d : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000046482a : add al, 0xf ; xchg eax, ebp ; ret 0xd7e9
0x0000000000464696 : add al, 0xf ; xchg eax, ebp ; ret 0xf883
0x000000000042b7c3 : add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x0000000000470ff1 : add al, 0xf6 ; ret 0x7402
0x000000000041ce79 : add al, 0xf6 ; ret 0x7408
0x0000000000497251 : add al, 0xf9 ; jmp qword ptr [rax]
0x00000000004bea51 : add al, 0xfc ; jmp qword ptr [rdx]
0x0000000000459b14 : add al, 0xff ; or dh, byte ptr [rbp + 2] ; ret
0x00000000004bcddd : add al, 2 ; in al, 0xa ; ret
0x0000000000425f57 : add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004b6f9e : add al, 3 ; idiv bh ; sbb al, 0xd ; jp 0x4b6f99 ; cmc ; jmp qword ptr [rdx]
0x0000000000451a19 : add al, 6 ; add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x000000000041791d : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000004234d8 : add al, 7 ; ret
0x0000000000424b4f : add al, 8 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00000000004bdd3f : add al, ah ; pop rsi ; std ; call rcx
0x00000000004b87df : add al, ah ; ret 0xfff7
0x00000000004ba2df : add al, ah ; scasd eax, dword ptr [rdi] ; clc ; call qword ptr [rcx]
0x00000000004b921f : add al, al ; push rdi ; call rcx
0x00000000004bb93f : add al, al ; push rdx ; cli ; jmp rbx
0x00000000004ba21f : add al, al ; stosb byte ptr [rdi], al ; clc ; call qword ptr [rcx]
0x000000000047ef25 : add al, al ; sub ebp, dword ptr [rax + rax + 0x48] ; add esp, 8 ; ret
0x00000000004bbb17 : add al, bl ; push rsi ; cli ; call rcx
0x00000000004ba2c7 : add al, bl ; scasd eax, dword ptr [rdi] ; clc ; call qword ptr [rcx]
0x0000000000479291 : add al, bpl ; js 0x47922a ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000471d46 : add al, bpl ; ret
0x000000000047e647 : add al, bpl ; ret 0xf837
0x0000000000484fc2 : add al, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000419e21 : add al, byte ptr [rax + rax*8 - 0xb7ed8c] ; ret 0x2288
0x0000000000406f24 : add al, byte ptr [rax] ; add bl, ch ; or eax, 0x2035b10f ; ret
0x000000000040f545 : add al, byte ptr [rax] ; add bl, dh ; ret
0x000000000043f724 : add al, byte ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret
0x000000000041c433 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x000000000047b2ad : add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x000000000048ff0a : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000004670e7 : add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000405b66 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004199ed : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000420fc1 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000419a11 : add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000490621 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000043699c : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x000000000043670f : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x00000000004365db : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000436553 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000463bd3 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000467774 : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000432dc4 : add al, byte ptr [rax] ; add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x0000000000467d5a : add al, byte ptr [rax] ; add byte ptr [rcx + 0x39], al ; ror dword ptr [rdi], -0x7c ; ret 1
0x000000000048ff17 : add al, byte ptr [rax] ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0xc3 ; nop ; ret
0x00000000004031dc : add al, byte ptr [rax] ; add byte ptr [rdi + 0x6c42a0], bh ; call rax
0x000000000048ece0 : add al, byte ptr [rax] ; movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x0000000000412703 : add al, byte ptr [rax] ; nop dword ptr [rax] ; ret
0x000000000040bfa5 : add al, byte ptr [rax] ; pop rdx ; cdqe ; ret
0x000000000043900a : add al, byte ptr [rax] ; xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x438ffe
0x0000000000437abe : add al, byte ptr [rcx + 0x39] ; ret
0x00000000004b4780 : add al, byte ptr [rcx + 0xa] ; ret
0x000000000046657a : add al, byte ptr [rsi + 0x39480001] ; ret
0x00000000004670e6 : add al, byte ptr ss:[rax] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000466578 : add al, ch ; add al, byte ptr [rsi + 0x39480001] ; ret
0x00000000004beba7 : add al, ch ; cld ; call qword ptr [rax]
0x00000000004bc317 : add al, ch ; jl 0x4bc319 ; call rax
0x0000000000479292 : add al, ch ; js 0x479229 ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000467de6 : add al, ch ; mov ah, 0x76 ; cli ; dec dword ptr [rax - 0x77] ; ret
0x00000000004bec87 : add al, ch ; mov edi, esp ; call qword ptr [rax]
0x000000000044db32 : add al, ch ; pop rax ; ret
0x0000000000416e87 : add al, ch ; ret
0x00000000004096c8 : add al, ch ; ret 0x19d
0x00000000004071c8 : add al, ch ; ret 0x308
0x0000000000401908 : add al, ch ; ret 0x333
0x000000000048a748 : add al, ch ; ret 0xf776
0x000000000047e648 : add al, ch ; ret 0xf837
0x0000000000465388 : add al, ch ; ret 0xfa24
0x00000000004ba2f7 : add al, ch ; scasd eax, dword ptr [rdi] ; clc ; call qword ptr [rcx]
0x0000000000401356 : add al, ch ; xor al, 0x70 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004b7a17 : add al, cl ; loopne 0x4b7a14 ; call rdx
0x00000000004b9207 : add al, cl ; push rdi ; call qword ptr [rax]
0x00000000004b6067 : add al, cl ; pushfq ; cmc ; call qword ptr [rsi]
0x00000000004bea4f : add al, dh ; add al, 0xfc ; jmp qword ptr [rdx]
0x00000000004bb43f : add al, dh ; cli ; call qword ptr [rdx]
0x00000000004b614f : add al, dh ; popfq ; cmc ; call qword ptr [rdx]
0x000000000049519f : add al, dh ; ret
0x00000000004b953f : add al, dh ; xchg eax, edx ; std ; call rsp
0x00000000004bbaaf : add al, dl ; push rsp ; cli ; call rsp
0x00000000004ba2af : add al, dl ; scasd eax, dword ptr [rdi] ; clc ; call qword ptr [rdi]
0x00000000004be8a5 : add bh, ah ; jmp qword ptr [rdx]
0x00000000004aca7f : add bh, ah ; ret
0x00000000004c01b3 : add bh, bh ; inc dword ptr [rcx] ; or ebp, edx ; add dword ptr [rbx], eax ; ret
0x000000000047357f : add bh, bh ; loopne 0x4735e2 ; ret
0x000000000047edf0 : add bh, bh ; loopne 0x47ee53 ; ret
0x0000000000401664 : add bh, bh ; push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x00000000004aca9f : add bh, bh ; ret
0x0000000000402c58 : add bh, bh ; sar dword ptr [rdi + 0x6c30c0], cl ; call rbx
0x000000000040c7ad : add bh, bh ; xchg eax, ecx ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000004aca77 : add bh, bl ; ret
0x00000000004766e4 : add bh, byte ptr [rax + 1] ; ret
0x0000000000434cb3 : add bh, byte ptr [rax - 1] ; ret
0x0000000000433192 : add bh, byte ptr [rcx] ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x000000000046d446 : add bh, dh ; ret 0x804
0x000000000041c724 : add bl, al ; lea rax, qword ptr [rip + 0x15313] ; ret
0x0000000000438fba : add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000464535 : add bl, al ; ret
0x00000000004bc8e6 : add bl, byte ptr [rdi + 0xa] ; ret
0x0000000000434da0 : add bl, ch ; mov byte ptr [rax - 0x39], cl ; ret 0xffc0
0x000000000046980a : add bl, ch ; mov cs, word ptr [rax - 0x7d] ; ret
0x000000000046e001 : add bl, ch ; mov eax, 0x8c48348 ; pop rbx ; pop rbp ; ret
0x0000000000406f26 : add bl, ch ; or eax, 0x2035b10f ; ret
0x000000000043cfb5 : add bl, ch ; ret 0x8b48
0x00000000004bdb6a : add bl, cl ; ret
0x0000000000408c28 : add bl, dh ; ret
0x000000000041343c : add bl, dl ; loopne 0x4133cd ; rol byte ptr [rcx + 0xf], 0x94 ; ret
0x0000000000410aed : add byte ptr [eax], al ; ret
0x00000000004b96e5 : add byte ptr [eax], al ; test al, 0x16 ; clc ; call rdx
0x000000000043adad : add byte ptr [r15 + 0x6c4220], dil ; call rax
0x000000000047ec2f : add byte ptr [r15 + 0x6c4640], r15b ; call rax
0x000000000040037c : add byte ptr [r15], cl ; xchg eax, esp ; ret
0x0000000000433bad : add byte ptr [r8 + 0x10], dil ; pop rbx ; ret
0x0000000000471501 : add byte ptr [r8 + 0x39], r9b ; ret
0x0000000000410b53 : add byte ptr [r8 + 0x39], r9b ; ret 0xd575
0x000000000043887b : add byte ptr [r8 + 0xf], cl ; ret
0x000000000041c37d : add byte ptr [r8 + 0xf], cl ; ret 0x8348
0x0000000000408cc4 : add byte ptr [r8 + 0xf], cl ; ret 0x8948
0x000000000040bad6 : add byte ptr [r8 + 0xf], cl ; ret 0x8b48
0x00000000004383ad : add byte ptr [r8 + 9], cl ; ret 0x8948
0x000000000048b7c9 : add byte ptr [r8 - 0x77], cl ; ret
0x0000000000401d0e : add byte ptr [r8 - 0x7b], cl ; fisttp dword ptr [rax - 0x77] ; ret 0x894c
0x0000000000456a90 : add byte ptr [r8 - 0x7d], r9b ; ret
0x00000000004406e3 : add byte ptr [r8 - 0x7d], r9b ; ret 0x4901
0x0000000000434e59 : add byte ptr [r8], al ; ret
0x00000000004b794d : add byte ptr [r8], al ; sbb ch, 0xf5 ; jmp rbx
0x00000000004b7905 : add byte ptr [r8], al ; test al, 0xdb ; cmc ; call qword ptr [rcx]
0x00000000004a862a : add byte ptr [r8], r8b ; add byte ptr [rax], al ; add byte ptr [rbx], al ; ret 0x45
0x00000000004a8bda : add byte ptr [r8], r8b ; add byte ptr [rax], al ; add byte ptr [rdi], ch ; ret
0x00000000004a8a22 : add byte ptr [r8], r8b ; add byte ptr [rax], al ; add byte ptr [rdx], ch ; ret
0x00000000004a8bd2 : add byte ptr [r8], r8b ; add byte ptr [rax], al ; add dh, bl ; ret 0x45
0x000000000040b93f : add byte ptr [r9 + rcx*4 + 0x6b], cl ; adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000433bae : add byte ptr [rax + 0x10], bh ; pop rbx ; ret
0x00000000004bd40f : add byte ptr [rax + 0x11], ah ; sti ; call rdx
0x000000000040b99f : add byte ptr [rax + 0x29], cl ; ret
0x000000000048e6e5 : add byte ptr [rax + 0x29], cl ; ret 0x2948
0x000000000044edf6 : add byte ptr [rax + 0x29], cl ; ret 0x8349
0x000000000043dd51 : add byte ptr [rax + 0x29], cl ; ret 0x8b49
0x00000000004101e5 : add byte ptr [rax + 0x29], cl ; ret 0x8d49
0x00000000004beb77 : add byte ptr [rax + 0x2d], cl ; cld ; call qword ptr [rax]
0x000000000040ae49 : add byte ptr [rax + 0x39], cl ; fmul dword ptr [rax + 0xf] ; ret
0x0000000000412a9f : add byte ptr [rax + 0x39], cl ; ret
0x0000000000442940 : add byte ptr [rax + 0x39], cl ; ret 0x7b73
0x000000000040b42f : add byte ptr [rax + 0x39], cl ; ret 0x850f
0x0000000000410646 : add byte ptr [rax + 0x39], cl ; ret 0xb76
0x0000000000410b54 : add byte ptr [rax + 0x39], cl ; ret 0xd575
0x0000000000437c30 : add byte ptr [rax + 0x39], cl ; ret 0xda75
0x000000000048a15e : add byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000004bb3af : add byte ptr [rax + 0x3e], al ; cli ; jmp rcx
0x00000000004b3d6f : add byte ptr [rax + 0x3f], al ; cmc ; call qword ptr [rax]
0x00000000004b4187 : add byte ptr [rax + 0x46], bh ; cmc ; call qword ptr [rax]
0x000000000047ec00 : add byte ptr [rax + 0x48006c46], al ; add esp, 8 ; ret
0x00000000004bb9af : add byte ptr [rax + 0x53], al ; cli ; call rcx
0x00000000004bae7f : add byte ptr [rax + 0x5f], dh ; stc ; call rdi
0x00000000004bdda7 : add byte ptr [rax + 0x62], bl ; std ; jmp qword ptr [rdi]
0x000000000048ece1 : add byte ptr [rax + 0x63], cl ; or al, 0x8a ; add rdx, rcx ; jmp rdx
0x000000000047059a : add byte ptr [rax + 0x63], cl ; ret
0x000000000047d166 : add byte ptr [rax + 0x63], cl ; ret 0x8b44
0x0000000000472a03 : add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x0000000000467f5f : add byte ptr [rax + 0x66], bh ; syscall ; ret
0x0000000000467f7f : add byte ptr [rax + 0x68], bh ; syscall ; ret
0x0000000000467f6f : add byte ptr [rax + 0x6b], bh ; syscall ; ret
0x00000000004110e7 : add byte ptr [rax + 0x6c1860], bh ; ret
0x0000000000467f8f : add byte ptr [rax + 0x6c], bh ; syscall ; ret
0x00000000004bde1f : add byte ptr [rax + 0x6c], dh ; sti ; call qword ptr [rax]
0x0000000000419e1f : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax - 1] ; ret 0x2288
0x00000000004313bf : add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000004be12f : add byte ptr [rax + 0x7a], dl ; sti ; jmp rbx
0x00000000004648df : add byte ptr [rax + 0xc9], bh ; syscall ; ret
0x000000000040d003 : add byte ptr [rax + 0xf], al ; mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004728e7 : add byte ptr [rax + 0xf], al ; test dword ptr [rax], eax ; or al, 0 ; add bl, dh ; ret
0x0000000000462c75 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x000000000043887c : add byte ptr [rax + 0xf], cl ; ret
0x000000000041c37e : add byte ptr [rax + 0xf], cl ; ret 0x8348
0x0000000000408cc5 : add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000040bad7 : add byte ptr [rax + 0xf], cl ; ret 0x8b48
0x0000000000466040 : add byte ptr [rax + 0xf], cl ; ret 0x8d48
0x0000000000401b2f : add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret
0x000000000044275f : add byte ptr [rax + 1], bh ; ret
0x000000000041c435 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x0000000000476a2e : add byte ptr [rax + 1], cl ; ret
0x00000000004885b9 : add byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000488fc9 : add byte ptr [rax + 1], cl ; ret 0x894c
0x00000000004769b1 : add byte ptr [rax + 1], cl ; ret 0x8b48
0x0000000000487c27 : add byte ptr [rax + 1], cl ; ret 0x8d48
0x00000000004383ae : add byte ptr [rax + 9], cl ; ret 0x8948
0x00000000004ba98f : add byte ptr [rax + rax], al ; add byte ptr [rdi + rsi*2], ch ; add byte ptr [rax], al ; ret
0x00000000004bf367 : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; hlt ; ret
0x00000000004bf31f : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret
0x00000000004728eb : add byte ptr [rax + rax], cl ; add bl, dh ; ret
0x0000000000414431 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x00000000004145e1 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004bf2d7 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; ret
0x00000000004bf307 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xchg eax, esp ; ret
0x00000000004bd823 : add byte ptr [rax + rbp*4 + 0x3ca80000], ch ; sti ; call rsi
0x00000000004b87db : add byte ptr [rax + rbx*2], ah ; add al, ah ; ret 0xfff7
0x00000000004b877b : add byte ptr [rax + rbx*2], al ; add byte ptr [rax], al ; push rax ; ret 0xfff7
0x00000000004b87f3 : add byte ptr [rax + rbx*2], bh ; add byte ptr [rax], ch ; ret
0x000000000046e460 : add byte ptr [rax + rcx*2], al ; add esp, 8 ; ret
0x00000000004ba813 : add byte ptr [rax + rdi*2 - 0x3b180000], bl ; clc ; call qword ptr [rax]
0x00000000004ba7fb : add byte ptr [rax + rdi*2 - 0x3b200000], al ; clc ; call qword ptr [rbx]
0x00000000004ba82b : add byte ptr [rax + rdi*2 - 0x3b200000], dh ; clc ; call qword ptr [rdx]
0x00000000004bb79b : add byte ptr [rax + rdi*2], al ; add byte ptr [rax], al ; adc byte ptr [rsi - 6], cl ; jmp rsi
0x00000000004bc023 : add byte ptr [rax + rdx*4 + 0x69d80000], ch ; cli ; jmp qword ptr [rax]
0x0000000000464af2 : add byte ptr [rax - 0x178b7f80], 0x89 ; ret 0x8b48
0x000000000040330e : add byte ptr [rax - 0x178b7f80], 0x89 ; ret 0x8b4c
0x00000000004bf30f : add byte ptr [rax - 0x25], ah ; cld ; jmp qword ptr [rax]
0x00000000004bf24f : add byte ptr [rax - 0x28], dl ; cld ; call rbx
0x00000000004784d3 : add byte ptr [rax - 0x39], cl ; ret
0x000000000040ad7f : add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x000000000044ca98 : add byte ptr [rax - 0x39], cl ; ret 0xffe8
0x00000000004349e0 : add byte ptr [rax - 0x39], cl ; ret 0xffff
0x0000000000463bdf : add byte ptr [rax - 0x39], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x0000000000463bbf : add byte ptr [rax - 0x39], cl ; rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x0000000000463c1f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x0000000000463bcf : add byte ptr [rax - 0x39], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x0000000000463c0f : add byte ptr [rax - 0x39], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x000000000044283d : add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x00000000004771f4 : add byte ptr [rax - 0x48], cl ; ret 0xffff
0x00000000004b9857 : add byte ptr [rax - 0x67], bl ; std ; jmp qword ptr [rdx]
0x00000000004b5f07 : add byte ptr [rax - 0x6a], cl ; cmc ; jmp qword ptr [rax]
0x000000000048e2ef : add byte ptr [rax - 0x73], cl ; je 0x48e320 ; cmp byte ptr [rax - 0x7d], cl ; ret
0x0000000000435ccf : add byte ptr [rax - 0x73], cl ; push rbx ; or byte ptr [rax - 0x7d], cl ; ret
0x0000000000448559 : add byte ptr [rax - 0x75], cl ; adc al, 0xc5 ; sal byte ptr [rdi + 0x4a], 0 ; jmp rdx
0x000000000044bdae : add byte ptr [rax - 0x75], cl ; adc al, 0xc5 ; sar byte ptr [rax + 0x4a], 0 ; jmp rdx
0x00000000004477fb : add byte ptr [rax - 0x75], cl ; adc al, 0xc5 ; sar byte ptr [rbp + 0x4a], 0 ; jmp rdx
0x000000000044bb52 : add byte ptr [rax - 0x75], cl ; adc al, 0xc5 ; sar byte ptr [rbx + 0x4a], 0 ; jmp rdx
0x000000000044bc8a : add byte ptr [rax - 0x75], cl ; adc al, 0xc5 ; sar byte ptr [rcx + 0x4a], 0 ; jmp rdx
0x000000000044bba0 : add byte ptr [rax - 0x75], cl ; adc al, 0xc5 ; sar byte ptr [rdx + 0x4a], 0 ; jmp rdx
0x000000000041076f : add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000046643f : add byte ptr [rax - 0x75], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x000000000044286f : add byte ptr [rax - 0x75], cl ; add eax, 0x2819f9 ; ret
0x000000000043a26f : add byte ptr [rax - 0x75], cl ; add eax, 0x28add1 ; ret
0x000000000040f47f : add byte ptr [rax - 0x75], cl ; add eax, 0x2b1c19 ; ret
0x00000000004b5ad7 : add byte ptr [rax - 0x75], cl ; cmc ; call qword ptr [rdi]
0x000000000040e2f6 : add byte ptr [rax - 0x75], cl ; jmp rax
0x000000000043a208 : add byte ptr [rax - 0x75], cl ; jnp 0x43a22a ; call rax
0x0000000000462826 : add byte ptr [rax - 0x75], cl ; js 0x462871 ; jmp 0x4627f6
0x000000000046d686 : add byte ptr [rax - 0x75], cl ; mov r9b, r13b ; ret
0x0000000000460bef : add byte ptr [rax - 0x75], cl ; mov rax, qword ptr [rax + 0x4c] ; ret
0x0000000000471152 : add byte ptr [rax - 0x75], cl ; or byte ptr [rax - 0x7d], cl ; ret
0x0000000000413287 : add byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0x7404
0x000000000040fcb7 : add byte ptr [rax - 0x75], cl ; push rbx ; or byte ptr [rax + 0x29], cl ; ret 0x148
0x0000000000427d1f : add byte ptr [rax - 0x75], cl ; push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000043dfba : add byte ptr [rax - 0x77], cl ; add al, 0x24 ; call qword ptr [rbx]
0x000000000040f4af : add byte ptr [rax - 0x77], cl ; clc ; ret
0x000000000047634c : add byte ptr [rax - 0x77], cl ; dec byte ptr [rax - 0x77] ; ret 0x8948
0x0000000000464527 : add byte ptr [rax - 0x77], cl ; enter 0x31c3, -0x40 ; nop ; ret
0x0000000000408db7 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000048ff0c : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000004154a1 : add byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x000000000040ddb2 : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x000000000040df32 : add byte ptr [rax - 0x77], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x0000000000408c21 : add byte ptr [rax - 0x77], cl ; mov al, byte ptr [rax + 1] ; add byte ptr [rax], al ; ret
0x0000000000492467 : add byte ptr [rax - 0x77], cl ; out 0x41, eax ; call rsp
0x00000000004369ab : add byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x00000000004155b7 : add byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x0000000000403420 : add byte ptr [rax - 0x77], cl ; ret
0x0000000000473395 : add byte ptr [rax - 0x77], cl ; ret 0x2b49
0x000000000047ea5c : add byte ptr [rax - 0x77], cl ; ret 0x38b
0x0000000000490f44 : add byte ptr [rax - 0x77], cl ; ret 0x3948
0x0000000000413b5c : add byte ptr [rax - 0x77], cl ; ret 0x58b
0x000000000043465c : add byte ptr [rax - 0x77], cl ; ret 0x6b8
0x00000000004053ef : add byte ptr [rax - 0x77], cl ; ret 0x8348
0x0000000000410b4a : add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004093ff : add byte ptr [rax - 0x77], cl ; ret 0x8949
0x0000000000444e4f : add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x00000000004100d1 : add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000045a49b : add byte ptr [rax - 0x77], cl ; ret 0xb848
0x000000000041c300 : add byte ptr [rax - 0x77], cl ; ret 0xc031
0x000000000044f5df : add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000458701 : add byte ptr [rax - 0x77], cl ; ret 0xf6e8
0x000000000040c7b3 : add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x0000000000453d55 : add byte ptr [rax - 0x77], cl ; ror byte ptr [rax - 0x7d], 1 ; ret
0x00000000004414d1 : add byte ptr [rax - 0x77], cl ; ror dword ptr [rax - 0x77], 1 ; fimul word ptr [rax - 0x77] ; ret 0x8948
0x0000000000491c33 : add byte ptr [rax - 0x77], cl ; sub byte ptr [r11 - 0x17], bl ; ret 0xb6e3
0x00000000004629ff : add byte ptr [rax - 0x7b], cl ; div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x0000000000401d0f : add byte ptr [rax - 0x7b], cl ; fisttp dword ptr [rax - 0x77] ; ret 0x894c
0x000000000046231a : add byte ptr [rax - 0x7b], cl ; push qword ptr [rsi + rsi*4 - 0xa] ; ret 0x7508
0x0000000000409427 : add byte ptr [rax - 0x7b], cl ; ror byte ptr [rcx - 0x77], 4 ; and al, 0x74 ; ret 0x8b4c
0x0000000000476fce : add byte ptr [rax - 0x7c], al ; test byte ptr [rdi], 0x84 ; ret 0x15
0x00000000004154c9 : add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000048d806 : add byte ptr [rax - 0x7d], cl ; call qword ptr [rcx]
0x0000000000401db1 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000413e09 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x0000000000449a86 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x840f
0x00000000004497b7 : add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x0000000000409522 : add byte ptr [rax - 0x7d], cl ; in al, dx ; xor byte ptr [rcx - 0x77], cl ; ret 0xb941
0x0000000000401c3e : add byte ptr [rax - 0x7d], cl ; ret
0x000000000041354f : add byte ptr [rax - 0x7d], cl ; ret 0x110
0x000000000043328f : add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000043d407 : add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x0000000000438a13 : add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000462226 : add byte ptr [rax - 0x7d], cl ; ret 0x4804
0x0000000000472d27 : add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000000000493cff : add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000004406e4 : add byte ptr [rax - 0x7d], cl ; ret 0x4901
0x000000000046735f : add byte ptr [rax - 0x7d], cl ; ret 0x4909
0x000000000041910f : add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043fb1f : add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x000000000041018c : add byte ptr [rax - 0x7d], cl ; ret 0x4d07
0x000000000041c62f : add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x000000000041c5bf : add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x000000000047df97 : add byte ptr [rax - 0x7d], cl ; ret 0x8001
0x000000000046d12f : add byte ptr [rax - 0x7d], cl ; ret 0x8304
0x000000000043be3c : add byte ptr [rax - 0x7d], cl ; ret 0x8801
0x000000000041bbe2 : add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000041faa3 : add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004557f7 : add byte ptr [rax - 0x7d], cl ; ret 0xeb08
0x0000000000419133 : add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000451517 : add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000461dec : add byte ptr [rax - 0x7d], cl ; ret 0xf301
0x0000000000424a8f : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x00000000004423ce : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x0000000000443917 : add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x83 ; ret 0x8301
0x000000000049219a : add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x4c ; mov dword ptr [rbx], eax ; pop rbx ; ret
0x000000000047b197 : add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x4801
0x00000000004bc3df : add byte ptr [rax - 0x7f], ah ; cli ; jmp qword ptr [rdx]
0x00000000004071c1 : add byte ptr [rax - 0x7f], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x308
0x0000000000428fab : add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004619d7 : add byte ptr [rax - 1], bh ; pop rbx ; ret
0x000000000040f42f : add byte ptr [rax - 1], bh ; ret
0x000000000040f82e : add byte ptr [rax - 1], dil ; ret
0x00000000004071c5 : add byte ptr [rax], 0 ; add al, ch ; ret 0x308
0x0000000000488fc6 : add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; ret 0x894c
0x000000000040c7b0 : add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x000000000042b7cb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000474c8b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x000000000043733b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000041037b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x000000000042347b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000424f71 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000408a60 : add byte ptr [rax], 0 ; add cl, ch ; ret
0x00000000004176c7 : add byte ptr [rax], 0 ; add cl, ch ; ret 0xffdf
0x0000000000403492 : add byte ptr [rax], 0 ; add cl, ch ; ret 0xffed
0x00000000004bd73f : add byte ptr [rax], ah ; cmp ebx, edi ; call qword ptr [rbx]
0x0000000000494e97 : add byte ptr [rax], ah ; ret 0x40
0x00000000004bad1f : add byte ptr [rax], ah ; stc ; call qword ptr [rsi]
0x00000000004bf2d6 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; ret
0x00000000004bf306 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret
0x00000000004bf98a : add byte ptr [rax], al ; adc al, 0xca ; add byte ptr [rax], al ; add byte ptr [rdi], al ; std ; call rsp
0x00000000004bf73e : add byte ptr [rax], al ; adc byte ptr [rbx], al ; std ; jmp rsp
0x00000000004b997e : add byte ptr [rax], al ; adc byte ptr [rcx], ch ; clc ; call qword ptr [rax]
0x00000000004bb79e : add byte ptr [rax], al ; adc byte ptr [rsi - 6], cl ; jmp rsi
0x00000000004aca55 : add byte ptr [rax], al ; add ah, al ; ret
0x00000000004aca95 : add byte ptr [rax], al ; add ah, bh ; ret
0x00000000004b8761 : add byte ptr [rax], al ; add ah, ch ; push rdi ; add byte ptr [rax], al ; ret 0xfff7
0x00000000004bf341 : add byte ptr [rax], al ; add ah, cl ; ret
0x00000000004bf369 : add byte ptr [rax], al ; add ah, dh ; ret
0x00000000004bf249 : add byte ptr [rax], al ; add ah, dl ; ret 0
0x00000000004b4e7a : add byte ptr [rax], al ; add al, 0x1f ; add byte ptr [rax], al ; xor byte ptr [rax - 0xb], dh ; jmp rax
0x000000000046e45f : add byte ptr [rax], al ; add al, 0x48 ; add esp, 8 ; ret
0x00000000004b877a : add byte ptr [rax], al ; add al, 0x58 ; add byte ptr [rax], al ; push rax ; ret 0xfff7
0x00000000004b997a : add byte ptr [rax], al ; add al, 0x6a ; add byte ptr [rax], al ; adc byte ptr [rcx], ch ; clc ; call qword ptr [rax]
0x00000000004bb79a : add byte ptr [rax], al ; add al, 0x78 ; add byte ptr [rax], al ; adc byte ptr [rsi - 6], cl ; jmp rsi
0x00000000004bae7a : add byte ptr [rax], al ; add al, 0x7f ; add byte ptr [rax], al ; jo 0x4baeea ; stc ; call rdi
0x00000000004bb27a : add byte ptr [rax], al ; add al, 0x83 ; add byte ptr [rax], al ; shr al, 0xf9 ; call rdx
0x00000000004096c6 : add byte ptr [rax], al ; add al, ch ; ret 0x19d
0x00000000004071c6 : add byte ptr [rax], al ; add al, ch ; ret 0x308
0x0000000000401906 : add byte ptr [rax], al ; add al, ch ; ret 0x333
0x0000000000465386 : add byte ptr [rax], al ; add al, ch ; ret 0xfa24
0x0000000000401354 : add byte ptr [rax], al ; add al, ch ; xor al, 0x70 ; add byte ptr [rax], al ; pop rbp ; ret
0x000000000049519d : add byte ptr [rax], al ; add al, dh ; ret
0x00000000004aca7d : add byte ptr [rax], al ; add bh, ah ; ret
0x00000000004aca9d : add byte ptr [rax], al ; add bh, bh ; ret
0x00000000004aca75 : add byte ptr [rax], al ; add bh, bl ; ret
0x0000000000464533 : add byte ptr [rax], al ; add bl, al ; ret
0x0000000000434d9e : add byte ptr [rax], al ; add bl, ch ; mov byte ptr [rax - 0x39], cl ; ret 0xffc0
0x000000000043cfb3 : add byte ptr [rax], al ; add bl, ch ; ret 0x8b48
0x000000000040e94e : add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004714ed : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000048e6e3 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x2948
0x000000000044edf4 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8349
0x00000000004101e3 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x8d49
0x000000000040ae47 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; fmul dword ptr [rax + 0xf] ; ret
0x000000000043de01 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000040b42d : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x00000000004313bd : add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x0000000000401b2d : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret
0x000000000044275d : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x0000000000476a2c : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x00000000004885b7 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8948
0x0000000000488fc7 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x894c
0x00000000004bf365 : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; hlt ; ret
0x00000000004bf2d5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; ret
0x00000000004bf305 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; xchg eax, esp ; ret
0x00000000004b87d9 : add byte ptr [rax], al ; add byte ptr [rax + rbx*2], ah ; add al, ah ; ret 0xfff7
0x00000000004b8779 : add byte ptr [rax], al ; add byte ptr [rax + rbx*2], al ; add byte ptr [rax], al ; push rax ; ret 0xfff7
0x00000000004b87f1 : add byte ptr [rax], al ; add byte ptr [rax + rbx*2], bh ; add byte ptr [rax], ch ; ret
0x000000000044fef5 : add byte ptr [rax], al ; add byte ptr [rax - 0x39], cl ; ret 0xffe8
0x000000000044283b : add byte ptr [rax], al ; add byte ptr [rax - 0x3f], cl ; ret 0x4811
0x000000000041076d : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; adc byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000040e2f4 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jmp rax
0x0000000000462824 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; js 0x462873 ; jmp 0x4627f8
0x0000000000413285 : add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0x7404
0x000000000043dfb8 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; add al, 0x24 ; call qword ptr [rbx]
0x000000000040f4ad : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000492465 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out 0x41, eax ; call rsp
0x00000000004369a9 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; out dx, eax ; call rbx
0x0000000000408c61 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000473393 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2b49
0x0000000000490f42 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x3948
0x0000000000489c27 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x000000000041c2fe : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x00000000004586ff : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xf6e8
0x000000000040c7b1 : add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x00000000004160df : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043328d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000043a0fc : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000047c1ed : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000000000493cfd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x00000000004210f7 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043fb1d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x000000000041c62d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x000000000041c5bd : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x0000000000421161 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004557f5 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb08
0x000000000045175d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000424a8d : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x0000000000443915 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx], 0x83 ; ret 0x8301
0x000000000047da85 : add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ror byte ptr [rax], 0x83 ; ret 0x4801
0x000000000042a7b8 : add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x000000000040f42d : add byte ptr [rax], al ; add byte ptr [rax - 1], bh ; ret
0x0000000000494e95 : add byte ptr [rax], al ; add byte ptr [rax], ah ; ret 0x40
0x00000000004bf2d4 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; ret
0x00000000004bf304 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; xchg eax, esp ; ret
0x00000000004aca53 : add byte ptr [rax], al ; add byte ptr [rax], al ; add ah, al ; ret
0x00000000004aca93 : add byte ptr [rax], al ; add byte ptr [rax], al ; add ah, bh ; ret
0x000000000049519b : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; ret
0x00000000004aca7b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, ah ; ret
0x00000000004aca9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bh ; ret
0x00000000004aca73 : add byte ptr [rax], al ; add byte ptr [rax], al ; add bh, bl ; ret
0x000000000040f46b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004714eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000040b42b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret 0x850f
0x000000000040f4ab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000464c2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004586fd : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xf6e8
0x0000000000443b3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043328b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x3a01
0x000000000047c1eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4808
0x0000000000493cfb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000041c62b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x6620
0x000000000041c5bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x7e20
0x000000000045175b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xf01
0x0000000000494e93 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret 0x40
0x00000000004ac959 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx], ah ; ret
0x000000000040e89b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004a3002 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004a34f2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x000000000041678b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; ret
0x00000000004a862b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], al ; ret 0x45
0x00000000004334cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x000000000048b53b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x00000000004114cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x00000000004190eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000417cbb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x00000000004a8bdb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdi], ch ; ret
0x00000000004ac95b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx], ah ; ret
0x00000000004ac98b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx], bh ; ret
0x00000000004a8a23 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx], ch ; ret
0x00000000004ac97b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx], dh ; ret
0x00000000004ac963 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi], ah ; ret
0x00000000004ac993 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi], bh ; ret
0x00000000004ac973 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi], ch ; ret
0x00000000004ac983 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi], dh ; ret
0x000000000044cc2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add ch, bl ; fmul dword ptr [rax - 0x39] ; ret 0xffe8
0x00000000004aca6b : add byte ptr [rax], al ; add byte ptr [rax], al ; add ch, dl ; ret
0x00000000004aca8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, bh ; ret
0x00000000004aca5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add cl, cl ; ret
0x00000000004a8bd3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, bl ; ret 0x45
0x00000000004aca63 : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, cl ; ret
0x0000000000463b9c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x000000000047460f : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004b1d34 : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rax]
0x0000000000470477 : add byte ptr [rax], al ; add byte ptr [rax], al ; call r12
0x00000000004a502c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004a41dc : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000004aca94 : add byte ptr [rax], al ; add byte ptr [rax], al ; cld ; ret
0x00000000004aca2c : add byte ptr [rax], al ; add byte ptr [rax], al ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x00000000004aca1c : add byte ptr [rax], al ; add byte ptr [rax], al ; lahf ; ret
0x00000000004319ec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000004319fc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x0000000000431a0c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000431a1c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000431a2c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000043196c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000043197c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000043198c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000043199c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000004319ac : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000004319bc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000004319cc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000004319dc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000043195c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x0000000000401584 : add byte ptr [rax], al ; add byte ptr [rax], al ; leave ; ret
0x00000000004313bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x0000000000430d9c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000040f42c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000044275c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000042b7cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000474c8c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x000000000040f49c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000040f4ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000042b91c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000004950dc : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret 0x40
0x0000000000497d8c : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret 0x43
0x00000000004ac9c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; ret
0x00000000004a7944 : add byte ptr [rax], al ; add byte ptr [rax], al ; outsd dx, dword ptr [rsi] ; ret
0x000000000040e6ab : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040dd1d : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004a868c : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rdx ; ret 0x45
0x00000000004ac9b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rsi ; ret
0x00000000004ac9ac : add byte ptr [rax], al ; add byte ptr [rax], al ; push rsp ; ret
0x00000000004a8a14 : add byte ptr [rax], al ; add byte ptr [rax], al ; pushfq ; ret 0x45
0x000000000040e89d : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004a3ffc : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000004a4794 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x00000000004a3004 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004a34f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x0000000000494594 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x401f
0x00000000004a796c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x44
0x00000000004a863c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x45
0x00000000004bf364 : add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; hlt ; ret
0x00000000004aca34 : add byte ptr [rax], al ; add byte ptr [rax], al ; scasd eax, dword ptr [rdi] ; ret
0x00000000004aca8c : add byte ptr [rax], al ; add byte ptr [rax], al ; stc ; ret
0x000000000046cc46 : add byte ptr [rax], al ; add byte ptr [rax], al ; test rax, rax ; je 0x46cc5a ; call rax
0x00000000004aca14 : add byte ptr [rax], al ; add byte ptr [rax], al ; wait ; ret
0x00000000004aca04 : add byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, ebx ; ret
0x00000000004aca0c : add byte ptr [rax], al ; add byte ptr [rax], al ; xchg eax, edi ; ret
0x0000000000433aec : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000040ea9c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000042347c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000040b350 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x830f
0x0000000000437938 : add byte ptr [rax], al ; add byte ptr [rbp - 0x3dbaf02e], al ; ret
0x000000000041678d : add byte ptr [rax], al ; add byte ptr [rbp - 0x77], cl ; ret
0x0000000000433b5c : add byte ptr [rax], al ; add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x0000000000437e26 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x000000000042b0ad : add byte ptr [rax], al ; add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x0000000000409416 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000040e6ac : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004003cb : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000040c74d : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; xor eax, eax ; pop r12 ; ret
0x000000000045a2c7 : add byte ptr [rax], al ; add byte ptr [rbx - 0x110f43], al ; call qword ptr [rax]
0x000000000045aab3 : add byte ptr [rax], al ; add byte ptr [rbx - 0x116343], al ; call qword ptr [rax]
0x0000000000408ef2 : add byte ptr [rax], al ; add byte ptr [rbx - 0x77], bl ; call 0xffffffffc39cd062
0x00000000004a862d : add byte ptr [rax], al ; add byte ptr [rbx], al ; ret 0x45
0x00000000004b3055 : add byte ptr [rax], al ; add byte ptr [rbx], bl ; jrcxz 0x4b3055 ; call qword ptr [rax]
0x000000000047b905 : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], cl ; ret
0x0000000000450f8f : add byte ptr [rax], al ; add byte ptr [rcx + 0x5d], al ; ret
0x0000000000450ec1 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; ret
0x000000000046b51c : add byte ptr [rax], al ; add byte ptr [rcx + 0x5f], al ; ret
0x00000000004334cd : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x0000000000455a23 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 2], ah ; jmp 0x451ca0
0x0000000000436f75 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x000000000043671f : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x000000000040a45e : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 0xe], cl ; mov rdi, rbx ; call rax
0x0000000000436554 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000436563 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x000000000045047b : add byte ptr [rax], al ; add byte ptr [rcx - 0x39], cl ; ret 0xffe0
0x000000000048fa05 : add byte ptr [rax], al ; add byte ptr [rcx - 0x3f], cl ; call 0xffffffffc2724657
0x000000000048b53d : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], al ; ret
0x000000000045dfe6 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x22e9
0x00000000004788ca : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x894c
0x000000000041bf21 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x8d48
0x000000000045d167 : add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0xa1e9
0x000000000047debf : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x000000000046aa45 : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; call 0xffffffffc2c9f259
0x00000000004114cd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x00000000004190ed : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000417cbd : add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000041c750 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 1
0x000000000041c776 : add byte ptr [rax], al ; add byte ptr [rcx - 9], cl ; ret 2
0x0000000000477873 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; imul al ; ret
0x0000000000407c0a : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000046290b : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ret
0x000000000043cba8 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], cl ; ret
0x0000000000467d1b : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rcx - 0x7f], cl ; ret 0x2d0
0x000000000048faa2 : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call r14
0x000000000048faca : add byte ptr [rax], al ; add byte ptr [rdi + 1], bh ; call rax
0x00000000004ba991 : add byte ptr [rax], al ; add byte ptr [rdi + rsi*2], ch ; add byte ptr [rax], al ; ret
0x00000000004bf98e : add byte ptr [rax], al ; add byte ptr [rdi], al ; std ; call rsp
0x00000000004a8bdd : add byte ptr [rax], al ; add byte ptr [rdi], ch ; ret
0x000000000042b8ad : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000042b91d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000043e356 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x48 ; dec dword ptr [rcx - 0x7d] ; ret
0x000000000043e3a0 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4101
0x000000000045fe3d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x000000000041c66d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x0000000000433ab5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret 0xea81
0x000000000046955e : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x000000000048fce5 : add byte ptr [rax], al ; add byte ptr [rdx + rbp*8 + 0x48], dh ; add esp, 8 ; ret
0x00000000004ac95d : add byte ptr [rax], al ; add byte ptr [rdx], ah ; ret
0x00000000004ac98d : add byte ptr [rax], al ; add byte ptr [rdx], bh ; ret
0x00000000004a8a25 : add byte ptr [rax], al ; add byte ptr [rdx], ch ; ret
0x00000000004ac97d : add byte ptr [rax], al ; add byte ptr [rdx], dh ; ret
0x0000000000424f72 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000041c582 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x000000000043652d : add byte ptr [rax], al ; add byte ptr [rsi + 1], bh ; call rbx
0x00000000004b80ae : add byte ptr [rax], al ; add byte ptr [rsi - 0xa], dh ; call qword ptr [rax]
0x00000000004ac965 : add byte ptr [rax], al ; add byte ptr [rsi], ah ; ret
0x00000000004ac995 : add byte ptr [rax], al ; add byte ptr [rsi], bh ; ret
0x00000000004ac975 : add byte ptr [rax], al ; add byte ptr [rsi], ch ; ret
0x00000000004ac985 : add byte ptr [rax], al ; add byte ptr [rsi], dh ; ret
0x000000000044cc2d : add byte ptr [rax], al ; add ch, bl ; fmul dword ptr [rax - 0x39] ; ret 0xffe8
0x00000000004aca6d : add byte ptr [rax], al ; add ch, dl ; ret
0x00000000004aca8d : add byte ptr [rax], al ; add cl, bh ; ret
0x0000000000408a61 : add byte ptr [rax], al ; add cl, ch ; ret
0x00000000004564ee : add byte ptr [rax], al ; add cl, ch ; ret 0xffb2
0x00000000004176c8 : add byte ptr [rax], al ; add cl, ch ; ret 0xffdf
0x0000000000403493 : add byte ptr [rax], al ; add cl, ch ; ret 0xffed
0x000000000048dfd0 : add byte ptr [rax], al ; add cl, ch ; ret 0xfff7
0x0000000000401585 : add byte ptr [rax], al ; add cl, cl ; ret
0x00000000004a8bd5 : add byte ptr [rax], al ; add dh, bl ; ret 0x45
0x00000000004aca65 : add byte ptr [rax], al ; add dh, cl ; ret
0x0000000000412ba0 : add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000432c21 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x000000000043d9a7 : add byte ptr [rax], al ; add qword ptr [rdi], 1 ; jmp 0x43d979
0x0000000000474a97 : add byte ptr [rax], al ; add rax, -0x10 ; ret
0x0000000000463b9e : add byte ptr [rax], al ; add rax, 3 ; ret
0x000000000041c434 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x000000000047ed10 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000433d5e : add byte ptr [rax], al ; add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x00000000004340c7 : add byte ptr [rax], al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000434d29 : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbx ; ret
0x0000000000445686 : add byte ptr [rax], al ; add rsp, 0xd0 ; ret
0x00000000004084b5 : add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x000000000040bf55 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000465d28 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000004bd73e : add byte ptr [rax], al ; and byte ptr [rcx], bh ; sti ; call qword ptr [rbx]
0x000000000041c66e : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x0000000000462aa7 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x0000000000462c74 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x00000000004b4d86 : add byte ptr [rax], al ; call 0x114b42fd
0x00000000004b8346 : add byte ptr [rax], al ; call 0x114b7a87
0x00000000004ba816 : add byte ptr [rax], al ; call 0x114ba0e6
0x00000000004beba6 : add byte ptr [rax], al ; call 0x114be7fe
0x00000000004bec86 : add byte ptr [rax], al ; call 0x114be91d
0x00000000004ba2f6 : add byte ptr [rax], al ; call 0x124b9bb1
0x00000000004bdc46 : add byte ptr [rax], al ; call 0x234bd7bb
0x00000000004b8936 : add byte ptr [rax], al ; call 0x244b810e
0x00000000004bc316 : add byte ptr [rax], al ; call 0xffffffffd14bbd9e
0x00000000004b1d36 : add byte ptr [rax], al ; call qword ptr [rax]
0x0000000000401663 : add byte ptr [rax], al ; call qword ptr [rbx + 0x10]
0x00000000004a24c2 : add byte ptr [rax], al ; call qword ptr [rcx]
0x0000000000470479 : add byte ptr [rax], al ; call r12
0x000000000048faa8 : add byte ptr [rax], al ; call r14
0x0000000000401cfa : add byte ptr [rax], al ; call rax
0x0000000000436533 : add byte ptr [rax], al ; call rbx
0x00000000004a502e : add byte ptr [rax], al ; call rdi
0x00000000004a41de : add byte ptr [rax], al ; call rsp
0x00000000004beb72 : add byte ptr [rax], al ; cld ; mov ebx, 0x2d480000 ; cld ; call qword ptr [rax]
0x00000000004aca96 : add byte ptr [rax], al ; cld ; ret
0x00000000004bb3ae : add byte ptr [rax], al ; cli ; jmp rcx
0x00000000004b3d86 : add byte ptr [rax], al ; cmp byte ptr [rdi], bh ; cmc ; call qword ptr [rdx]
0x000000000040a8a7 : add byte ptr [rax], al ; cmp eax, 0xff ; jne 0x40a8b8 ; pop rbx ; ret
0x00000000004aca2e : add byte ptr [rax], al ; cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x00000000004bc716 : add byte ptr [rax], al ; cwde ; mov dr1, edx ; jmp rbx
0x00000000004b83a6 : add byte ptr [rax], al ; cwde ; xchg bh, dh ; jmp qword ptr [rbx]
0x00000000004b9a36 : add byte ptr [rax], al ; cwde ; xor bh, al ; jmp qword ptr [rdx]
0x00000000004b3052 : add byte ptr [rax], al ; fadd qword ptr [rax] ; add byte ptr [rax], al ; sbb esp, ebx ; hlt ; call qword ptr [rax]
0x00000000004bbb16 : add byte ptr [rax], al ; fcom dword ptr [rsi - 6] ; call rcx
0x00000000004bc026 : add byte ptr [rax], al ; fsubr dword ptr [rcx - 6] ; jmp qword ptr [rax]
0x00000000004b9852 : add byte ptr [rax], al ; fsubr qword ptr [rax] ; add byte ptr [rax - 0x67], bl ; std ; jmp qword ptr [rdx]
0x00000000004b3d6a : add byte ptr [rax], al ; hlt ; or eax, 0x3f400000 ; cmc ; call qword ptr [rax]
0x00000000004bf36a : add byte ptr [rax], al ; hlt ; ret
0x00000000004b4182 : add byte ptr [rax], al ; in al, dx ; add dword ptr [rax], eax ; add byte ptr [rax + 0x46], bh ; cmc ; call qword ptr [rax]
0x00000000004b8762 : add byte ptr [rax], al ; in al, dx ; push rdi ; add byte ptr [rax], al ; ret 0xfff7
0x00000000004b6062 : add byte ptr [rax], al ; in al, dx ; xor byte ptr [rax], al ; add al, cl ; pushfq ; cmc ; call qword ptr [rsi]
0x00000000004b96e2 : add byte ptr [rax], al ; insb byte ptr [rdi], dx ; add byte ptr [eax], al ; test al, 0x16 ; clc ; call rdx
0x00000000004ba2c2 : add byte ptr [rax], al ; jae 0x4ba2d0 ; add al, bl ; scasd eax, dword ptr [rdi] ; clc ; call qword ptr [rcx]
0x00000000004ba2da : add byte ptr [rax], al ; jae 0x4ba2e8 ; add al, ah ; scasd eax, dword ptr [rdi] ; clc ; call qword ptr [rcx]
0x00000000004b80af : add byte ptr [rax], al ; jbe 0x4b80ad ; call qword ptr [rax]
0x000000000041027c : add byte ptr [rax], al ; je 0x41028e ; xor eax, eax ; ret
0x000000000041709a : add byte ptr [rax], al ; je 0x4170a4 ; ret
0x000000000048fce6 : add byte ptr [rax], al ; je 0x48fcdc ; add rsp, 8 ; ret
0x00000000004ba2f2 : add byte ptr [rax], al ; jl 0x4ba372 ; add byte ptr [rax], al ; call 0x124b9bb5
0x0000000000404684 : add byte ptr [rax], al ; jmp 0x403968
0x0000000000406f25 : add byte ptr [rax], al ; jmp 0x406f3e
0x0000000000415492 : add byte ptr [rax], al ; jmp 0x4154a9
0x0000000000434d9f : add byte ptr [rax], al ; jmp 0x434d31
0x000000000043cfb4 : add byte ptr [rax], al ; jmp 0x43cf7d
0x00000000004539c9 : add byte ptr [rax], al ; jmp 0x4538c2
0x0000000000457367 : add byte ptr [rax], al ; jmp 0x4567e9
0x0000000000469809 : add byte ptr [rax], al ; jmp 0x4697a1
0x000000000049032f : add byte ptr [rax], al ; jmp rax
0x0000000000459fc5 : add byte ptr [rax], al ; jmp rdx
0x00000000004bae7e : add byte ptr [rax], al ; jo 0x4baee6 ; stc ; call rdi
0x00000000004bde1e : add byte ptr [rax], al ; jo 0x4bde93 ; sti ; call qword ptr [rax]
0x00000000004b4186 : add byte ptr [rax], al ; js 0x4b41d5 ; cmc ; call qword ptr [rax]
0x00000000004aca1e : add byte ptr [rax], al ; lahf ; ret
0x00000000004319ee : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000004319fe : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x0000000000431a0e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000431a1e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x0000000000431a2e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000043194d : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000043196e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000043197e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000043198e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000043199e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000004319ae : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000004319be : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x00000000004318fa : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000004319ce : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000004319de : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000043195e : add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x0000000000401586 : add byte ptr [rax], al ; leave ; ret
0x00000000004bc022 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; nop ; add byte ptr [rax], al ; fsubr dword ptr [rcx - 6] ; jmp qword ptr [rax]
0x00000000004bf322 : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret
0x00000000004ba2de : add byte ptr [rax], al ; loopne 0x4ba296 ; clc ; call qword ptr [rcx]
0x00000000004ba7fe : add byte ptr [rax], al ; loopne 0x4ba7cb ; clc ; call qword ptr [rbx]
0x00000000004ba82e : add byte ptr [rax], al ; loopne 0x4ba7fb ; clc ; call qword ptr [rdx]
0x00000000004bc03e : add byte ptr [rax], al ; loopne 0x4bc0b2 ; cli ; jmp rdx
0x00000000004bdd3e : add byte ptr [rax], al ; loopne 0x4bdda5 ; std ; call rcx
0x00000000004ba82a : add byte ptr [rax], al ; mov ah, 0x78 ; add byte ptr [rax], al ; loopne 0x4ba7ff ; clc ; call qword ptr [rdx]
0x00000000004be12a : add byte ptr [rax], al ; mov ah, 0xb1 ; add byte ptr [rax], al ; push rax ; jp 0x4be137 ; jmp rbx
0x00000000004b366e : add byte ptr [rax], al ; mov al, 0xef ; std ; call rdi
0x00000000004308ce : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x000000000042f11e : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000004313be : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x0000000000430d9e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x0000000000476634 : add byte ptr [rax], al ; mov dword ptr [rdx], ecx ; ret
0x0000000000455a24 : add byte ptr [rax], al ; mov dword ptr fs:[rdx], eax ; jmp 0x451c9f
0x0000000000430dae : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000467f5e : add byte ptr [rax], al ; mov eax, 0x66 ; syscall ; ret
0x0000000000467f7e : add byte ptr [rax], al ; mov eax, 0x68 ; syscall ; ret
0x0000000000467f6e : add byte ptr [rax], al ; mov eax, 0x6b ; syscall ; ret
0x0000000000467f8e : add byte ptr [rax], al ; mov eax, 0x6c ; syscall ; ret
0x00000000004110e6 : add byte ptr [rax], al ; mov eax, 0x6c1860 ; ret
0x00000000004648de : add byte ptr [rax], al ; mov eax, 0xc9 ; syscall ; ret
0x00000000004619d6 : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040f42e : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000044275e : add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000040f17e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000491dbe : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x491dd9 ; ret
0x000000000048d2ae : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x237ce2] ; ret
0x0000000000470426 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x0000000000408609 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x0000000000473c79 : add byte ptr [rax], al ; mov eax, edx ; ret
0x0000000000489138 : add byte ptr [rax], al ; mov eax, esi ; ret
0x0000000000430dde : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x00000000004031dd : add byte ptr [rax], al ; mov edi, 0x6c42a0 ; call rax
0x000000000048faa3 : add byte ptr [rax], al ; mov edi, 1 ; call r14
0x000000000048facb : add byte ptr [rax], al ; mov edi, 1 ; call rax
0x000000000042b0ae : add byte ptr [rax], al ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042b7ce : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000409298 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x409256
0x000000000043652e : add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x00000000004b3c32 : add byte ptr [rax], al ; mov esp, 0x1800000c ; cmc ; call qword ptr [rbx]
0x00000000004b9a32 : add byte ptr [rax], al ; mov esp, 0x9800006a ; xor bh, al ; jmp qword ptr [rdx]
0x000000000047f018 : add byte ptr [rax], al ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x000000000048cea2 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x000000000048cf26 : add byte ptr [rax], al ; mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x000000000048fd56 : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; add rsp, 8 ; ret
0x000000000046df45 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x300], rax ; ret
0x0000000000423096 : add byte ptr [rax], al ; mov qword ptr [rdi + 0x38], r9 ; ret
0x000000000048fd8e : add byte ptr [rax], al ; mov qword ptr [rdi + 0x98], rsi ; ret
0x0000000000410208 : add byte ptr [rax], al ; mov qword ptr [rsi], rax ; mov rax, r8 ; ret
0x000000000043dfb9 : add byte ptr [rax], al ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x0000000000445350 : add byte ptr [rax], al ; mov qword ptr fs:[rax], rdx ; ret
0x000000000040f43e : add byte ptr [rax], al ; mov rax, -1 ; ret
0x0000000000463bbe : add byte ptr [rax], al ; mov rax, 1 ; ret
0x0000000000463bce : add byte ptr [rax], al ; mov rax, 2 ; ret
0x0000000000463bde : add byte ptr [rax], al ; mov rax, 3 ; ret
0x0000000000463bee : add byte ptr [rax], al ; mov rax, 4 ; ret
0x0000000000463bfe : add byte ptr [rax], al ; mov rax, 5 ; ret
0x0000000000463c0e : add byte ptr [rax], al ; mov rax, 6 ; ret
0x0000000000463c1e : add byte ptr [rax], al ; mov rax, 7 ; ret
0x000000000046ed01 : add byte ptr [rax], al ; mov rax, qword ptr [r14 + 0x10] ; add rax, qword ptr [r15] ; call rax
0x000000000046f27f : add byte ptr [rax], al ; mov rax, qword ptr [r15 + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000040dd49 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x000000000040a8c0 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000040e2f5 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x0000000000474c8e : add byte ptr [rax], al ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000460bee : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000040f49e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000048fcfe : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x90] ; ret
0x000000000048fd9e : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa0] ; ret
0x000000000048fdfe : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xa8] ; ret
0x000000000048fdee : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb0] ; ret
0x000000000048fdae : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0xb8] ; ret
0x000000000043a26e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x28add1] ; ret
0x000000000040f47e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x2b1c19] ; ret
0x00000000004908de : add byte ptr [rax], al ; mov rax, qword ptr [rsi] ; add rsp, 8 ; ret
0x000000000047163f : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000408db6 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048ff0b : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000004154a0 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x0000000000464526 : add byte ptr [rax], al ; mov rax, rcx ; ret
0x000000000040f4ae : add byte ptr [rax], al ; mov rax, rdi ; ret
0x00000000004155b6 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047eab3 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x0000000000462825 : add byte ptr [rax], al ; mov rdi, qword ptr [rax + 0x40] ; jmp 0x4627f7
0x000000000043a207 : add byte ptr [rax], al ; mov rdi, qword ptr [rbx + 0x18] ; call rax
0x000000000046cd2e : add byte ptr [rax], al ; mov rdi, qword ptr [rsp + 0x30] ; call rax
0x0000000000436720 : add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000436f76 : add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000436564 : add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000436555 : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x00000000004369aa : add byte ptr [rax], al ; mov rdi, rbp ; call rbx
0x00000000004600ed : add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x000000000045f8e2 : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x0000000000492466 : add byte ptr [rax], al ; mov rdi, rsp ; call r12
0x000000000042b60e : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000040a45f : add byte ptr [rax], al ; mov rdx, r14 ; mov rdi, rbx ; call rax
0x000000000049037e : add byte ptr [rax], al ; mov rsi, r14 ; mov rdi, rbx ; call r15
0x0000000000400cd4 : add byte ptr [rax], al ; mov rsi, rax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x400ce7 ; ret
0x00000000004b5ad6 : add byte ptr [rax], al ; mov rsi, rbp ; call qword ptr [rdi]
0x00000000004be302 : add byte ptr [rax], al ; mov word ptr [rbx - 0x7b780000], dr0 ; sti ; call qword ptr [rax]
0x00000000004bc902 : add byte ptr [rax], al ; mov word ptr [rcx - 0x50c80000], ds ; cli ; call qword ptr [rdx]
0x00000000004b5f02 : add byte ptr [rax], al ; mov word ptr [rdi], gs ; add byte ptr [rax], al ; xchg rax, rsi ; cmc ; jmp qword ptr [rax]
0x00000000004bea02 : add byte ptr [rax], al ; mov word ptr [rdx + 0x22b80000], dr1 ; hlt ; jmp qword ptr [rsi]
0x00000000004b9202 : add byte ptr [rax], al ; mov word ptr [rdx], fs ; add al, cl ; push rdi ; call qword ptr [rax]
0x00000000004bce02 : add byte ptr [rax], al ; mov word ptr [rsi - 0x45780000], ds ; cli ; jmp rsp
0x00000000004ba21a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; jb 0x4ba228 ; add al, al ; stosb byte ptr [rdi], al ; clc ; call qword ptr [rcx]
0x00000000004bad1a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; jge 0x4bad28 ; add byte ptr [rax], ah ; stc ; call qword ptr [rsi]
0x00000000004bde1a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; jo 0x4bde97 ; sti ; call qword ptr [rax]
0x00000000004b591a : add byte ptr [rax], al ; movsb byte ptr [rdi], byte ptr [rsi] ; sub dword ptr [rax], eax ; add byte ptr [rax], dl ; test dh, ch ; jmp qword ptr [rcx]
0x000000000048d771 : add byte ptr [rax], al ; movsxd rcx, dword ptr [r15 + rcx*4] ; add rcx, r15 ; jmp rcx
0x000000000042b23e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x000000000042b91e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000042b8ae : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000004b384e : add byte ptr [rax], al ; nop ; and ebp, esi ; call qword ptr [rcx]
0x00000000004b463e : add byte ptr [rax], al ; nop ; cmc ; call qword ptr [rcx]
0x00000000004950de : add byte ptr [rax], al ; nop ; ret 0x40
0x0000000000497d8e : add byte ptr [rax], al ; nop ; ret 0x43
0x00000000004ba73e : add byte ptr [rax], al ; nop ; ret 0xfff8
0x00000000004b4d82 : add byte ptr [rax], al ; or al, 0x1e ; add byte ptr [rax], al ; call 0x114b4301
0x00000000004bec82 : add byte ptr [rax], al ; or al, 0xbd ; add byte ptr [rax], al ; call 0x114be921
0x00000000004b3d82 : add byte ptr [rax], al ; or al, 0xe ; add byte ptr [rax], al ; cmp byte ptr [rdi], bh ; cmc ; call qword ptr [rdx]
0x000000000040ff19 : add byte ptr [rax], al ; or dword ptr [rbx], 8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040b27e : add byte ptr [rax], al ; or eax, 0x20 ; jmp 0x40b24d
0x00000000004456c9 : add byte ptr [rax], al ; or eax, 0xffffffff ; ret
0x00000000004ac9c6 : add byte ptr [rax], al ; outsb dx, byte ptr [rsi] ; ret
0x00000000004a7946 : add byte ptr [rax], al ; outsd dx, dword ptr [rsi] ; ret
0x0000000000450f90 : add byte ptr [rax], al ; pop r13 ; ret
0x0000000000450ec2 : add byte ptr [rax], al ; pop r14 ; ret
0x000000000046b51d : add byte ptr [rax], al ; pop r15 ; ret
0x00000000004b9856 : add byte ptr [rax], al ; pop rax ; cdq ; std ; jmp qword ptr [rdx]
0x0000000000401133 : add byte ptr [rax], al ; pop rbp ; ret
0x0000000000433b5d : add byte ptr [rax], al ; pop rbx ; and eax, 0x3fc00 ; ret
0x0000000000433867 : add byte ptr [rax], al ; pop rbx ; lea rax, qword ptr [r9 + 1] ; pop rbp ; ret
0x0000000000408953 : add byte ptr [rax], al ; pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; ret
0x0000000000437e27 : add byte ptr [rax], al ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000409085 : add byte ptr [rax], al ; pop rbx ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x0000000000409417 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040048f : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004003cc : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000406546 : add byte ptr [rax], al ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x000000000040b07b : add byte ptr [rax], al ; pop rbx ; ret
0x00000000004a868e : add byte ptr [rax], al ; pop rdx ; ret 0x45
0x00000000004ac9b6 : add byte ptr [rax], al ; pop rsi ; ret
0x00000000004bebd2 : add byte ptr [rax], al ; pop rsp ; mov esp, 0x6980000 ; cld ; call qword ptr [rax]
0x00000000004b5ad2 : add byte ptr [rax], al ; pop rsp ; sub eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; cmc ; call qword ptr [rdi]
0x00000000004bf24e : add byte ptr [rax], al ; push rax ; fdivr st(4) ; call rbx
0x00000000004be12e : add byte ptr [rax], al ; push rax ; jp 0x4be133 ; jmp rbx
0x00000000004b877e : add byte ptr [rax], al ; push rax ; ret 0xfff7
0x00000000004bb9ae : add byte ptr [rax], al ; push rbx ; cli ; call rcx
0x00000000004ac9ae : add byte ptr [rax], al ; push rsp ; ret
0x00000000004bbb12 : add byte ptr [rax], al ; pushfq ; mov eax, dword ptr [rax] ; add al, bl ; push rsi ; cli ; call rcx
0x00000000004a8a16 : add byte ptr [rax], al ; pushfq ; ret 0x45
0x00000000004bc312 : add byte ptr [rax], al ; pushfq ; xchg eax, ebx ; add byte ptr [rax], al ; call 0xffffffffd14bbda2
0x00000000004bc712 : add byte ptr [rax], al ; pushfq ; xchg eax, edi ; add byte ptr [rax], al ; cwde ; mov dr1, edx ; jmp rbx
0x000000000040842b : add byte ptr [rax], al ; ret
0x000000000049b386 : add byte ptr [rax], al ; ret 0
0x00000000004a25c6 : add byte ptr [rax], al ; ret 0x12
0x00000000004a3ffe : add byte ptr [rax], al ; ret 0x1d4
0x00000000004a4796 : add byte ptr [rax], al ; ret 0x1d5
0x00000000004a3006 : add byte ptr [rax], al ; ret 0x24
0x00000000004a34f6 : add byte ptr [rax], al ; ret 0x33
0x0000000000494596 : add byte ptr [rax], al ; ret 0x401f
0x00000000004a796e : add byte ptr [rax], al ; ret 0x44
0x00000000004a863e : add byte ptr [rax], al ; ret 0x45
0x00000000004a1dc6 : add byte ptr [rax], al ; ret 0xc
0x00000000004a21c6 : add byte ptr [rax], al ; ret 0xf
0x00000000004b932e : add byte ptr [rax], al ; ret 0xf81e
0x00000000004b8766 : add byte ptr [rax], al ; ret 0xfff7
0x00000000004a53c2 : add byte ptr [rax], al ; ret 1
0x00000000004a55c2 : add byte ptr [rax], al ; ret 2
0x00000000004a57c2 : add byte ptr [rax], al ; ret 3
0x00000000004a59c2 : add byte ptr [rax], al ; ret 4
0x00000000004a15ee : add byte ptr [rax], al ; ret 5
0x00000000004a5dc2 : add byte ptr [rax], al ; ret 6
0x00000000004a5fc2 : add byte ptr [rax], al ; ret 7
0x00000000004a61c2 : add byte ptr [rax], al ; ret 8
0x00000000004a19c6 : add byte ptr [rax], al ; ret 9
0x00000000004a59be : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret 4
0x00000000004b28be : add byte ptr [rax], al ; sahf ; scasd eax, dword ptr [rdi] ; std ; jmp qword ptr [rsi + 0x11fffdaf]
0x00000000004b921e : add byte ptr [rax], al ; sar bh, 0xf7 ; call rcx
0x00000000004bf366 : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; hlt ; ret
0x00000000004b48b2 : add byte ptr [rax], al ; sbb al, 9 ; add byte ptr [rax], al ; test al, 0x51 ; cmc ; jmp rsp
0x00000000004b3c36 : add byte ptr [rax], al ; sbb byte ptr [rsi], bh ; cmc ; call qword ptr [rbx]
0x00000000004b794e : add byte ptr [rax], al ; sbb ch, 0xf5 ; jmp rbx
0x00000000004b3056 : add byte ptr [rax], al ; sbb esp, ebx ; hlt ; call qword ptr [rax]
0x00000000004aca36 : add byte ptr [rax], al ; scasd eax, dword ptr [rdi] ; ret
0x00000000004bb27e : add byte ptr [rax], al ; shr al, 0xf9 ; call rdx
0x00000000004aca8e : add byte ptr [rax], al ; stc ; ret
0x00000000004b83a2 : add byte ptr [rax], al ; sub al, 0x54 ; add byte ptr [rax], al ; cwde ; xchg bh, dh ; jmp qword ptr [rbx]
0x00000000004ba992 : add byte ptr [rax], al ; sub al, 0x77 ; add byte ptr [rax], al ; ret
0x00000000004beba2 : add byte ptr [rax], al ; sub al, 0xbc ; add byte ptr [rax], al ; call 0x114be802
0x00000000004259bc : add byte ptr [rax], al ; sub eax, ecx ; ret
0x0000000000474e8d : add byte ptr [rax], al ; sub eax, edx ; sar eax, 0x10 ; ret
0x000000000040ebf6 : add byte ptr [rax], al ; sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x0000000000437aa5 : add byte ptr [rax], al ; syscall ; pop rdx ; pop rsi ; ret
0x00000000004648e3 : add byte ptr [rax], al ; syscall ; ret
0x00000000004b96e6 : add byte ptr [rax], al ; test al, 0x16 ; clc ; call rdx
0x00000000004bd826 : add byte ptr [rax], al ; test al, 0x3c ; sti ; call rsi
0x00000000004b48b6 : add byte ptr [rax], al ; test al, 0x51 ; cmc ; jmp rsp
0x00000000004b7906 : add byte ptr [rax], al ; test al, 0xdb ; cmc ; call qword ptr [rcx]
0x0000000000437939 : add byte ptr [rax], al ; test edx, edx ; cmovne eax, edx ; ret
0x000000000046cc48 : add byte ptr [rax], al ; test rax, rax ; je 0x46cc58 ; call rax
0x00000000004aca16 : add byte ptr [rax], al ; wait ; ret
0x00000000004aca06 : add byte ptr [rax], al ; xchg eax, ebx ; ret
0x00000000004aca0e : add byte ptr [rax], al ; xchg eax, edi ; ret
0x00000000004bf30a : add byte ptr [rax], al ; xchg eax, esp ; ret
0x00000000004b5f06 : add byte ptr [rax], al ; xchg rax, rsi ; cmc ; jmp qword ptr [rax]
0x00000000004b80aa : add byte ptr [rax], al ; xor al, 0x51 ; add byte ptr [rax], al ; add byte ptr [rsi - 0xa], dh ; call qword ptr [rax]
0x00000000004bb3aa : add byte ptr [rax], al ; xor al, 0x84 ; add byte ptr [rax], al ; cli ; jmp rcx
0x00000000004bb9aa : add byte ptr [rax], al ; xor al, 0x8a ; add byte ptr [rax], al ; push rbx ; cli ; call rcx
0x00000000004b4e7e : add byte ptr [rax], al ; xor byte ptr [rax - 0xb], dh ; jmp rax
0x00000000004b373e : add byte ptr [rax], al ; xor byte ptr [rdi], dl ; cmc ; call qword ptr [rax]
0x0000000000416aec : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x18 ; ret
0x0000000000415e0e : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x0000000000407c0b : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048ff18 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000414434 : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000409976 : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000048d051 : add byte ptr [rax], al ; xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x0000000000403a47 : add byte ptr [rax], al ; xor esi, esi ; call rax
0x00000000004364a0 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r12 ; call rbx
0x00000000004364c5 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x00000000004364e9 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000436509 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000043647b : add byte ptr [rax], al ; xor esi, esi ; mov rdi, rbp ; call rbx
0x000000000041c61d : add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000401582 : add byte ptr [rax], bh ; leave ; ret
0x00000000004b5b07 : add byte ptr [rax], bh ; mov ebp, dr0 ; call qword ptr [rcx]
0x00000000004bc907 : add byte ptr [rax], bh ; scasd eax, dword ptr [rdi] ; cli ; call qword ptr [rdx]
0x00000000004b3c37 : add byte ptr [rax], bl ; cmc ; call qword ptr [rbx]
0x00000000004b87f7 : add byte ptr [rax], ch ; ret
0x00000000004b6a46 : add byte ptr [rax], cl ; idiv bh ; sbb al, 0xd ; int1 ; fdivrp st(5) ; jmp qword ptr [rdx]
0x000000000048e14e : add byte ptr [rax], cl ; mov byte ptr [rip + 0x236729], 8 ; ret
0x000000000048e155 : add byte ptr [rax], cl ; ret
0x00000000004b4e7f : add byte ptr [rax], dh ; jo 0x4b4e7c ; jmp rax
0x000000000041027a : add byte ptr [rax], dl ; add byte ptr [rax], al ; je 0x410290 ; xor eax, eax ; ret
0x00000000004bf73f : add byte ptr [rax], dl ; add edi, ebp ; jmp rsp
0x00000000004bb79f : add byte ptr [rax], dl ; cli ; jmp rsi
0x00000000004970e8 : add byte ptr [rax], dl ; stc ; jmp rax
0x00000000004b997f : add byte ptr [rax], dl ; sub eax, edi ; call qword ptr [rax]
0x00000000004b591f : add byte ptr [rax], dl ; test dh, ch ; jmp qword ptr [rcx]
0x00000000004ba990 : add byte ptr [rax], r8b ; add byte ptr [rdi + rsi*2], ch ; add byte ptr [rax], al ; ret
0x00000000004619d5 : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000430dcd : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000409297 : add byte ptr [rax], r8b ; mov edx, eax ; jmp 0x409257
0x0000000000409296 : add byte ptr [rax], r8b ; mov edx, eax ; jmp 0x409258
0x0000000000423095 : add byte ptr [rax], r8b ; mov qword ptr [rdi + 0x38], r9 ; ret
0x0000000000464525 : add byte ptr [rax], r8b ; mov rax, rcx ; ret
0x0000000000430e0d : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000040b27d : add byte ptr [rax], r8b ; or eax, 0x20 ; jmp 0x40b24e
0x0000000000406545 : add byte ptr [rax], r8b ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x0000000000434ad9 : add byte ptr [rax], r8b ; ret
0x000000000049062d : add byte ptr [rax], r8b ; xor eax, eax ; add rsp, 8 ; ret
0x0000000000409975 : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x000000000047492c : add byte ptr [rbp + 0x11], dh ; xor eax, eax ; add rsp, 0x78 ; ret
0x000000000049419b : add byte ptr [rbp + 0x1e], dh ; ret
0x000000000040b352 : add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret 0x830f
0x0000000000451055 : add byte ptr [rbp + 0x5c], dh ; mov eax, edx ; pop rbx ; ret
0x0000000000474853 : add byte ptr [rbp + 0xa], dh ; xor eax, eax ; add rsp, 0x58 ; ret
0x00000000004747b2 : add byte ptr [rbp + 0xb], dh ; add rsp, 0x48 ; ret
0x000000000047556f : add byte ptr [rbp + 0xf], cl ; lodsd eax, dword ptr [rsi] ; ret
0x000000000047545f : add byte ptr [rbp + 0xf], cl ; movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x000000000043374f : add byte ptr [rbp + rcx*4 + 0x40], cl ; add dword ptr [rbp + 0x39], ecx ; ret
0x00000000004bad1b : add byte ptr [rbp + rdi*2 + 0x44200000], ah ; stc ; call qword ptr [rsi]
0x00000000004656d2 : add byte ptr [rbp - 0x1f3eadfc], cl ; add ch, byte ptr [rcx] ; ret
0x0000000000492758 : add byte ptr [rbp - 0x3b], dh ; add rsp, 8 ; ret
0x000000000043793a : add byte ptr [rbp - 0x3dbaf02e], al ; ret
0x000000000049785c : add byte ptr [rbp - 0x62ef0007], bl ; stc ; jmp qword ptr [rax]
0x0000000000416757 : add byte ptr [rbp - 0x77], cl ; ret
0x0000000000408267 : add byte ptr [rbp - 0x77], cl ; ret 0xf41
0x000000000040b4af : add byte ptr [rbp - 0x7b], al ; test byte ptr [rdi], 0x95 ; ret 0x8445
0x0000000000497274 : add byte ptr [rbp - 7], al ; call qword ptr [rax + 0x20fff944]
0x000000000041f929 : add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x000000000040b77f : add byte ptr [rbx + 0x18e9707f], cl ; ret 2
0x000000000048d06d : add byte ptr [rbx + 0x2377ac0d], cl ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000471815 : add byte ptr [rbx + 0x2509f30d], al ; add byte ptr [rcx], al ; pop rbx ; ret
0x000000000046d440 : add byte ptr [rbx + 0x257ae915], cl ; add bh, dh ; ret 0x804
0x0000000000433b5e : add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x000000000040a8a8 : add byte ptr [rbx + 0x275fff8], al ; pop rbx ; ret
0x0000000000410058 : add byte ptr [rbx + 0x2b376005], al ; add byte ptr [rcx], al ; ret
0x000000000040f505 : add byte ptr [rbx + 0x2b41f705], al ; add byte ptr [rcx], al ; ret
0x0000000000401335 : add byte ptr [rbx + 0x2c376805], cl ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x589
0x00000000004011c4 : add byte ptr [rbx + 0x2c38e905], cl ; add byte ptr [rcx], ch ; ret 0xd089
0x0000000000437e28 : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x0000000000430ddf : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x000000000043090f : add byte ptr [rbx + 0x48028901], cl ; lea eax, dword ptr [rdx + 3] ; ret
0x0000000000433868 : add byte ptr [rbx + 0x49], bl ; lea eax, dword ptr [rcx + 1] ; pop rbp ; ret
0x000000000042b0af : add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x000000000040ff1a : add byte ptr [rbx + 0x5d5b080b], al ; pop r12 ; ret
0x000000000046dff6 : add byte ptr [rbx + 0x5d], bl ; jmp rax
0x0000000000409086 : add byte ptr [rbx + 0x5d], bl ; mov eax, edx ; pop r12 ; ret
0x000000000043b315 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000409418 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000400490 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004003cd : add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000406547 : add byte ptr [rbx + 0x5d], bl ; xor eax, eax ; pop r12 ; ret
0x0000000000491dbf : add byte ptr [rbx + 0x75c08507], cl ; or dh, bl ; ret
0x00000000004bfeb8 : add byte ptr [rbx + 0xe], bl ; adc byte ptr [rbx + 0xa4a0202], al ; ret
0x000000000044524a : add byte ptr [rbx + rax - 0xd], dh ; ret
0x00000000004bb27b : add byte ptr [rbx + rax*4], al ; add byte ptr [rax], al ; shr al, 0xf9 ; call rdx
0x00000000004bf30b : add byte ptr [rbx + rax*8 - 0x24a00000], dl ; cld ; jmp qword ptr [rax]
0x00000000004b5b03 : add byte ptr [rbx + rbp - 0x73c80000], cl ; cmc ; call qword ptr [rcx]
0x00000000004b5ad3 : add byte ptr [rbx + rbp], bl ; add byte ptr [rax - 0x75], cl ; cmc ; call qword ptr [rdi]
0x00000000004622b2 : add byte ptr [rbx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x00000000004bbb13 : add byte ptr [rbx + rcx*4 + 0x56d80000], bl ; cli ; call rcx
0x00000000004765b7 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000048c9d7 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000004bc313 : add byte ptr [rbx + rdx*4 + 0x7ce80000], bl ; cli ; call rax
0x00000000004ba2db : add byte ptr [rbx + rsi*2], ah ; add al, ah ; scasd eax, dword ptr [rdi] ; clc ; call qword ptr [rcx]
0x00000000004ba2f3 : add byte ptr [rbx + rsi*2], bh ; add al, ch ; scasd eax, dword ptr [rdi] ; clc ; call qword ptr [rcx]
0x00000000004ba2c3 : add byte ptr [rbx + rsi*2], cl ; add al, bl ; scasd eax, dword ptr [rdi] ; clc ; call qword ptr [rcx]
0x00000000004be303 : add byte ptr [rbx + rsi*4 - 0x7b780000], cl ; sti ; call qword ptr [rax]
0x00000000004be31b : add byte ptr [rbx + rsi*4 - 0x7b800000], ah ; sti ; call qword ptr [rdx]
0x000000000045a2c9 : add byte ptr [rbx - 0x110f43], al ; call qword ptr [rax]
0x000000000045aab5 : add byte ptr [rbx - 0x116343], al ; call qword ptr [rax]
0x0000000000489107 : add byte ptr [rbx - 0x2f76ff06], al ; jle 0x48911a ; ret
0x0000000000444ed7 : add byte ptr [rbx - 0x387cfe40], al ; add dword ptr [rax - 0x7d], ecx ; ret 0x8310
0x000000000040a827 : add byte ptr [rbx - 0x3b7cb7fe], cl ; sub byte ptr [rbx + 0x5d], bl ; ret
0x0000000000433bcf : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x20 ; pop rbx ; ret
0x0000000000433bc8 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x30 ; pop rbx ; ret
0x0000000000433bc1 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x40 ; pop rbx ; ret
0x0000000000433bba : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x60 ; pop rbx ; ret
0x0000000000433bb3 : add byte ptr [rbx - 0x3d], bl ; mov eax, 0x80 ; pop rbx ; ret
0x0000000000433bd6 : add byte ptr [rbx - 0x3d], bl ; mov eax, 8 ; pop rbx ; ret
0x000000000044321d : add byte ptr [rbx - 0x3d], bl ; test esi, esi ; je 0x4431f1 ; pop rbx ; ret
0x00000000004392dc : add byte ptr [rbx - 0x76bef019], al ; ret 0xb8
0x0000000000408954 : add byte ptr [rbx - 0x77], bl ; call 0xffffffffc39ccac0
0x0000000000408ef4 : add byte ptr [rbx - 0x77], bl ; call 0xffffffffc39cd060
0x000000000045ebe7 : add byte ptr [rbx - 0x7af0fe40], al ; ret 0xffdc
0x0000000000432dc6 : add byte ptr [rbx - 0x7bf0ed07], al ; ret 2
0x000000000046fb0f : add byte ptr [rbx - 0x7cb7fbbd], cl ; ret 0x4803
0x000000000040cc2f : add byte ptr [rbx - 0x7cb7fe3f], al ; ret 0xc601
0x0000000000496e74 : add byte ptr [rbx - 8], dh ; call qword ptr [rax]
0x000000000049724c : add byte ptr [rbx], 0xf9 ; call rax
0x000000000046df4a : add byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x00000000004744ef : add byte ptr [rbx], al ; add eax, dword ptr [rax] ; add byte ptr [rcx + rdi*2 - 0x7d], dh ; ret
0x000000000047453a : add byte ptr [rbx], al ; add eax, dword ptr [rax] ; add byte ptr [rdx + rbp*2 - 0x7d], dh ; ret
0x00000000004a862f : add byte ptr [rbx], al ; ret 0x45
0x00000000004b2204 : add byte ptr [rbx], al ; std ; jmp rax
0x00000000004b3057 : add byte ptr [rbx], bl ; jrcxz 0x4b3053 ; call qword ptr [rax]
0x0000000000496d04 : add byte ptr [rbx], ch ; clc ; call rax
0x0000000000497170 : add byte ptr [rbx], dl ; stc ; call rax
0x0000000000466b84 : add byte ptr [rcx + 0x29], cl ; ret
0x0000000000467d5c : add byte ptr [rcx + 0x39], al ; ror dword ptr [rdi], -0x7c ; ret 1
0x000000000041cfb6 : add byte ptr [rcx + 0x39], cl ; ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x000000000045f139 : add byte ptr [rcx + 0x415d5bc8], cl ; pop rsp ; pop r13 ; ret
0x000000000040e746 : add byte ptr [rcx + 0x48d231d1], cl ; mov eax, dword ptr [rax + 0x48] ; jmp rax
0x0000000000413424 : add byte ptr [rcx + 0x548d48cf], cl ; ret
0x0000000000400e10 : add byte ptr [rcx + 0x5c], al ; ret
0x0000000000450f91 : add byte ptr [rcx + 0x5d], al ; ret
0x0000000000450ec3 : add byte ptr [rcx + 0x5e], al ; ret
0x000000000046b51e : add byte ptr [rcx + 0x5f], al ; ret
0x00000000004263ee : add byte ptr [rcx + 0x63], cl ; adc al, 0x93 ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000048d772 : add byte ptr [rcx + 0x63], cl ; or al, 0x8f ; add rcx, r15 ; jmp rcx
0x0000000000424c6c : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; add rcx, r11 ; jmp rcx
0x0000000000430c58 : add byte ptr [rcx + 0x63], cl ; or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x0000000000410239 : add byte ptr [rcx + 0xf], al ; xchg eax, esi ; ret 0x8348
0x00000000004334cf : add byte ptr [rcx + 1], cl ; ret
0x00000000004b591b : add byte ptr [rcx + rbp - 0x7bf00000], ah ; cmc ; jmp qword ptr [rcx]
0x00000000004bc903 : add byte ptr [rcx + rbx*4 - 0x50c80000], cl ; cli ; call qword ptr [rdx]
0x00000000004a19bf : add byte ptr [rcx + rcx + 0x9bf0000], bh ; add byte ptr [rax], al ; ret 9
0x00000000004b7903 : add byte ptr [rcx + rcx*2 - 0x24580000], cl ; cmc ; call qword ptr [rcx]
0x0000000000423097 : add byte ptr [rcx + rcx*4 + 0x4f], cl ; cmp bl, dh ; ret
0x000000000040b940 : add byte ptr [rcx + rcx*4 + 0x6b], cl ; adc byte ptr [rax + 0xf], cl ; ret 0x8948
0x0000000000455a25 : add byte ptr [rcx + rcx*4 + 2], ah ; jmp 0x451c9e
0x00000000004920ba : add byte ptr [rcx + rcx*4 + 3], cl ; pop rbx ; ret
0x0000000000439280 : add byte ptr [rcx + rcx*4 + 5], al ; js 0x43924c ; sub byte ptr [rax], al ; pop rbx ; ret
0x0000000000409443 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call 0x4156d6
0x0000000000436f77 : add byte ptr [rcx + rcx*4 - 0x11], cl ; call rbx
0x000000000048accf : add byte ptr [rcx + rcx*4 - 0x16], cl ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x0000000000436721 : add byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x000000000049037f : add byte ptr [rcx + rcx*4 - 0xa], cl ; mov rdi, rbx ; call r15
0x000000000040a460 : add byte ptr [rcx + rcx*4 - 0xe], cl ; mov rdi, rbx ; call rax
0x0000000000436556 : add byte ptr [rcx + rcx*4 - 1], cl ; call rbx
0x0000000000436565 : add byte ptr [rcx + rcx*4 - 9], cl ; call rbx
0x000000000043aa6c : add byte ptr [rcx + rcx*4 - 9], cl ; mov rax, qword ptr [rbp - 0x60] ; call rax
0x00000000004b48b3 : add byte ptr [rcx + rcx], bl ; add byte ptr [rax], al ; test al, 0x51 ; cmc ; jmp rsp
0x00000000004744f3 : add byte ptr [rcx + rdi*2 - 0x7d], dh ; ret
0x00000000004b80ab : add byte ptr [rcx + rdx*2], dh ; add byte ptr [rax], al ; add byte ptr [rsi - 0xa], dh ; call qword ptr [rax]
0x00000000004be12b : add byte ptr [rcx + rsi*4 + 0x7a500000], dh ; sti ; jmp rbx
0x000000000045047d : add byte ptr [rcx - 0x39], cl ; ret 0xffe0
0x0000000000470f72 : add byte ptr [rcx - 0x3e3fce2f], cl ; jmp 0x50a0589
0x000000000048e199 : add byte ptr [rcx - 0x3e3fce2f], cl ; jmp 0x50bd7b0
0x000000000048fa07 : add byte ptr [rcx - 0x3f], cl ; call 0xffffffffc2724655
0x0000000000459fc0 : add byte ptr [rcx - 0x42], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; jmp rdx
0x000000000047d7cd : add byte ptr [rcx - 0x43], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004056a5 : add byte ptr [rcx - 0x55551e], al ; call rcx
0x0000000000473f4d : add byte ptr [rcx - 0x73], al ; pop rsi ; dec dword ptr [rax + 0x63] ; ret
0x000000000048c691 : add byte ptr [rcx - 0x75], al ; adc edi, dword ptr [rcx] ; ret 0x840f
0x000000000048c745 : add byte ptr [rcx - 0x75], al ; adc edi, dword ptr [rcx] ; ret 0x850f
0x000000000040795f : add byte ptr [rcx - 0x75], cl ; or byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x0000000000437ab7 : add byte ptr [rcx - 0x77], al ; ret
0x000000000046bf57 : add byte ptr [rcx - 0x77], al ; ret 0x8b44
0x00000000004559f2 : add byte ptr [rcx - 0x77], cl ; fmul dword ptr [rcx - 0x77] ; ret
0x000000000044f62b : add byte ptr [rcx - 0x77], cl ; ret
0x000000000045dfe8 : add byte ptr [rcx - 0x77], cl ; ret 0x22e9
0x0000000000405227 : add byte ptr [rcx - 0x77], cl ; ret 0x75e9
0x00000000004788cc : add byte ptr [rcx - 0x77], cl ; ret 0x894c
0x0000000000406621 : add byte ptr [rcx - 0x77], cl ; ret 0x8d48
0x000000000045d169 : add byte ptr [rcx - 0x77], cl ; ret 0xa1e9
0x000000000044e49f : add byte ptr [rcx - 0x77], cl ; ror byte ptr [rax - 0x77], 1 ; ret 0x25e8
0x000000000047dec1 : add byte ptr [rcx - 0x7d], al ; ret
0x000000000040ce57 : add byte ptr [rcx - 0x7d], al ; ret 0x4101
0x000000000046aa47 : add byte ptr [rcx - 0x7d], cl ; call 0xffffffffc2c9f257
0x00000000004167a0 : add byte ptr [rcx - 0x7d], cl ; ret
0x00000000004114cf : add byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x00000000004190ef : add byte ptr [rcx - 0x7d], cl ; ret 0x7f10
0x0000000000417cbf : add byte ptr [rcx - 0x7d], cl ; ret 0xf10
0x000000000041384a : add byte ptr [rcx - 0xa], al ; ret 0xf01
0x000000000048910a : add byte ptr [rcx - 0xcfd8130], cl ; ret
0x000000000041c752 : add byte ptr [rcx - 9], cl ; ret 1
0x000000000041c778 : add byte ptr [rcx - 9], cl ; ret 2
0x00000000004b6966 : add byte ptr [rcx], 0x16 ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret
0x0000000000465384 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add al, ch ; ret 0xfa24
0x0000000000434d9c : add byte ptr [rcx], al ; add byte ptr [rax], al ; add bl, ch ; mov byte ptr [rax - 0x39], cl ; ret 0xffc0
0x0000000000401b2b : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; scasd eax, dword ptr [rdi] ; ret
0x000000000047181b : add byte ptr [rcx], al ; pop rbx ; ret
0x0000000000401019 : add byte ptr [rcx], al ; ret
0x0000000000438fec : add byte ptr [rcx], bh ; ret
0x0000000000413ee7 : add byte ptr [rcx], bh ; ret 0xa7e
0x0000000000465945 : add byte ptr [rcx], bh ; ror dword ptr [rdi], 1 ; xchg eax, esp ; ret
0x0000000000462914 : add byte ptr [rcx], ch ; ret
0x00000000004011ca : add byte ptr [rcx], ch ; ret 0xd089
0x00000000004915a9 : add byte ptr [rcx], cl ; ret 0x5389
0x000000000047e3d0 : add byte ptr [rcx], cl ; ret 0x840f
0x0000000000474e3c : add byte ptr [rcx], cl ; ret 0xd089
0x0000000000477875 : add byte ptr [rcx], dh ; imul al ; ret
0x0000000000407c0c : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000048ff19 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0xc3 ; nop ; ret
0x000000000046290d : add byte ptr [rcx], dh ; ret
0x000000000046825d : add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], 0xd6 ; ja 0x468279 ; ret
0x000000000043cbaa : add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], cl ; ret
0x0000000000416931 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000047e916 : add byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x000000000048d052 : add byte ptr [rcx], dh ; ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x0000000000467d1d : add byte ptr [rcx], dh ; ror byte ptr [rcx - 0x7f], cl ; ret 0x2d0
0x000000000043900b : add byte ptr [rcx], dh ; sar byte ptr [rcx], cl ; ret
0x000000000043647c : add byte ptr [rcx], dh ; test byte ptr [rax - 0x77], 0xef ; call rbx
0x0000000000428eb5 : add byte ptr [rdi + 0x63], cl ; or al, 0x8b ; add r9, r11 ; jmp r9
0x000000000043adae : add byte ptr [rdi + 0x6c4220], bh ; call rax
0x00000000004031de : add byte ptr [rdi + 0x6c42a0], bh ; call rax
0x000000000047ec30 : add byte ptr [rdi + 0x6c4640], bh ; call rax
0x000000000048faa4 : add byte ptr [rdi + 1], bh ; call r14
0x000000000048facc : add byte ptr [rdi + 1], bh ; call rax
0x00000000004b5f03 : add byte ptr [rdi + rbp - 0x69b80000], cl ; cmc ; jmp qword ptr [rax]
0x00000000004b9f23 : add byte ptr [rdi + rbp*2 - 0x6d780000], ch ; clc ; call qword ptr [rdx]
0x00000000004b4e7b : add byte ptr [rdi + rbx], al ; add byte ptr [rax], al ; xor byte ptr [rax - 0xb], dh ; jmp rax
0x00000000004a21bf : add byte ptr [rdi + rcx + 0xfbf0000], bh ; add byte ptr [rax], al ; ret 0xf
0x00000000004657cd : add byte ptr [rdi + rcx - 0x49], al ; ret 0x8d42
0x0000000000465a96 : add byte ptr [rdi + rcx - 0x49], al ; ret 0x8d43
0x00000000004bae7b : add byte ptr [rdi + rdi*2], al ; add byte ptr [rax], al ; jo 0x4baee9 ; stc ; call rdi
0x00000000004bc713 : add byte ptr [rdi + rdx*4 - 0x71680000], bl ; cli ; jmp rbx
0x00000000004ba993 : add byte ptr [rdi + rsi*2], ch ; add byte ptr [rax], al ; ret
0x00000000004bec83 : add byte ptr [rdi*4 - 0x74180000], cl ; cld ; call qword ptr [rax]
0x00000000004bf990 : add byte ptr [rdi], al ; std ; call rsp
0x00000000004a8bdf : add byte ptr [rdi], ch ; ret
0x000000000042a84a : add byte ptr [rdi], cl ; cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x000000000042b8af : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000042b91f : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000043e358 : add byte ptr [rdi], cl ; mov dh, 0x48 ; dec dword ptr [rcx - 0x7d] ; ret
0x000000000043e3a2 : add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4101
0x0000000000404fb8 : add byte ptr [rdi], cl ; mov dh, 0x53 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000045fe3f : add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x0000000000418f5f : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000424c7f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000041c7ff : add byte ptr [rdi], cl ; mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000042343f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000041c68f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000041c67f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000041c66f : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x0000000000433ab7 : add byte ptr [rdi], cl ; popfq ; ret 0xea81
0x000000000040332b : add byte ptr [rdi], cl ; ret 0x8d49
0x000000000047b5db : add byte ptr [rdi], cl ; ret 0xc801
0x000000000040133b : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x589
0x0000000000433942 : add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x8341
0x0000000000497188 : add byte ptr [rdi], cl ; stc ; jmp rax
0x0000000000410ae9 : add byte ptr [rdi], cl ; test dword ptr [rdx + 0x67], edi ; add byte ptr [rax], al ; ret
0x000000000040f541 : add byte ptr [rdi], cl ; test dword ptr [rdx + rax], ebp ; add bl, dh ; ret
0x000000000040d326 : add byte ptr [rdi], cl ; test dword ptr [rsi + 0x22], ebx ; add byte ptr [rax], al ; ret
0x0000000000458f11 : add byte ptr [rdi], cl ; xchg dword ptr [rbx], esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004525de : add byte ptr [rdi], cl ; xchg dword ptr [rcx], ebx ; xor al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000413369 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8348
0x000000000041493b : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x948
0x0000000000464c20 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xc031
0x0000000000465079 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xf748
0x000000000040037d : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000046c8a8 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5385
0x0000000000469561 : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0xc283
0x0000000000450c8c : add byte ptr [rdi], cl ; xchg ebp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004308cf : add byte ptr [rdx + 0x48028801], cl ; lea eax, dword ptr [rdx] ; ret
0x000000000042f11f : add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x000000000040bfa6 : add byte ptr [rdx + 0x48], bl ; cwde ; ret
0x00000000004bc8b0 : add byte ptr [rdx + 0xe], cl ; adc byte ptr [rbx + 0xa530202], al ; ret
0x00000000004bc8e0 : add byte ptr [rdx + 0xe], cl ; adc byte ptr [rbx + 0xa5f0202], al ; ret
0x00000000004b9a33 : add byte ptr [rdx + rbp*2 + 0x32980000], bh ; clc ; jmp qword ptr [rdx]
0x000000000047453e : add byte ptr [rdx + rbp*2 - 0x7d], dh ; ret
0x00000000004b997b : add byte ptr [rdx + rbp*2], al ; add byte ptr [rax], al ; adc byte ptr [rcx], ch ; clc ; call qword ptr [rax]
0x000000000048fce7 : add byte ptr [rdx + rbp*8 + 0x48], dh ; add esp, 8 ; ret
0x00000000004b7a13 : add byte ptr [rdx + rcx*2 - 0x1f380000], bl ; cmc ; call rdx
0x00000000004bb9ab : add byte ptr [rdx + rcx*4], dh ; add byte ptr [rax], al ; push rbx ; cli ; call rcx
0x00000000004bf98b : add byte ptr [rdx + rcx*8], dl ; add byte ptr [rax], al ; add byte ptr [rdi], al ; std ; call rsp
0x00000000004bea03 : add byte ptr [rdx + rdi*4 + 0x22b80000], cl ; hlt ; jmp qword ptr [rsi]
0x00000000004a25bf : add byte ptr [rdx + rdx + 0x12bf0000], bh ; add byte ptr [rax], al ; ret 0x12
0x00000000004ba21b : add byte ptr [rdx + rsi*2 - 0x55400000], ah ; clc ; call qword ptr [rcx]
0x000000000049748c : add byte ptr [rdx - 7], al ; call qword ptr [rax + 0x20fff941]
0x00000000004ac95f : add byte ptr [rdx], ah ; ret
0x000000000044534e : add byte ptr [rdx], al ; add byte ptr [rax], al ; mov qword ptr fs:[rax], rdx ; ret
0x00000000004b8f10 : add byte ptr [rdx], al ; imul ecx, dword ptr [rsi], 0x10 ; add dword ptr [rdx], 0x59 ; ret
0x00000000004ac98f : add byte ptr [rdx], bh ; ret
0x00000000004a8a27 : add byte ptr [rdx], ch ; ret
0x00000000004ac97f : add byte ptr [rdx], dh ; ret
0x00000000004970cc : add byte ptr [rdx], dl ; stc ; jmp rax
0x00000000004b2224 : add byte ptr [rdx], dl ; std ; jmp rax
0x000000000047eab0 : add byte ptr [rip + 0x48000000], al ; mov eax, edx ; pop rbx ; ret
0x00000000004440f9 : add byte ptr [rsi + 0x497ca1], bh ; call 0x400328
0x00000000004440f8 : add byte ptr [rsi + 0x497ca1], dil ; call 0x400329
0x000000000047ec01 : add byte ptr [rsi + 0x6c], 0 ; add rsp, 8 ; ret
0x000000000047ebe1 : add byte ptr [rsi + 0x6c], 0 ; ret
0x0000000000424f74 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000041c584 : add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x000000000043652f : add byte ptr [rsi + 1], bh ; call rbx
0x000000000043671c : add byte ptr [rsi + 1], bh ; mov rdi, r12 ; call rbx
0x00000000004365e8 : add byte ptr [rsi + 1], bh ; mov rdi, r13 ; call rbx
0x0000000000436560 : add byte ptr [rsi + 1], bh ; mov rdi, r14 ; call rbx
0x000000000043699a : add byte ptr [rsi + 2], bh ; mov rdi, r12 ; call rbx
0x000000000043670d : add byte ptr [rsi + 2], bh ; mov rdi, r13 ; call rbx
0x00000000004365d9 : add byte ptr [rsi + 2], bh ; mov rdi, r14 ; call rbx
0x0000000000436551 : add byte ptr [rsi + 2], bh ; mov rdi, r15 ; call rbx
0x00000000004b463b : add byte ptr [rsi + rax + 0x4b900000], ah ; cmc ; call qword ptr [rcx]
0x00000000004bde1b : add byte ptr [rsi + rbp*4 + 0x6c700000], ah ; sti ; call qword ptr [rax]
0x00000000004bce03 : add byte ptr [rsi + rbx*4 - 0x45780000], cl ; cli ; jmp rsp
0x00000000004b4d83 : add byte ptr [rsi + rbx], cl ; add byte ptr [rax], al ; call 0x114b4300
0x00000000004b3d83 : add byte ptr [rsi + rcx], cl ; add byte ptr [rax], al ; cmp byte ptr [rdi], bh ; cmc ; call qword ptr [rdx]
0x00000000004794df : add byte ptr [rsi - 0x46], ah ; pop rsp ; add al, 0xbe ; ret 0x4ad4
0x00000000004794de : add byte ptr [rsi - 0x46], spl ; pop rsp ; add al, 0xbe ; ret 0x4ad4
0x00000000004b28bf : add byte ptr [rsi - 0x59000251], bl ; scasd eax, dword ptr [rdi] ; std ; call qword ptr [rcx]
0x00000000004977a0 : add byte ptr [rsi - 0x69ef0007], dl ; stc ; jmp qword ptr [rax]
0x00000000004654bd : add byte ptr [rsi - 0x70], ah ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000461b9d : add byte ptr [rsi - 0x70], ah ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000045e8ba : add byte ptr [rsi - 0x77], ah ; or cl, ch ; push rbp ; ret
0x00000000004b80b0 : add byte ptr [rsi - 0xa], dh ; call qword ptr [rax]
0x00000000004b696b : add byte ptr [rsi], 0xd ; ret
0x00000000004ac967 : add byte ptr [rsi], ah ; ret
0x000000000040048d : add byte ptr [rsi], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004ac997 : add byte ptr [rsi], bh ; ret
0x00000000004ac977 : add byte ptr [rsi], ch ; ret
0x0000000000497104 : add byte ptr [rsi], cl ; stc ; jmp rax
0x00000000004ac987 : add byte ptr [rsi], dh ; ret
0x00000000004bd40b : add byte ptr [rsp + 0x11600000], dl ; sti ; call rdx
0x00000000004b742b : add byte ptr [rsp + rax*2 - 0x67800000], dh ; cmc ; call rcx
0x00000000004bb3ab : add byte ptr [rsp + rax*4], dh ; add byte ptr [rax], al ; cli ; jmp rcx
0x00000000004b3c33 : add byte ptr [rsp + rcx + 0x3e180000], bh ; cmc ; call qword ptr [rbx]
0x00000000004a1dbf : add byte ptr [rsp + rcx + 0xcbf0000], bh ; add byte ptr [rax], al ; ret 0xc
0x00000000004beba3 : add byte ptr [rsp + rdi*4], ch ; add byte ptr [rax], al ; call 0x114be801
0x00000000004b83a3 : add byte ptr [rsp + rdx*2], ch ; add byte ptr [rax], al ; cwde ; xchg bh, dh ; jmp qword ptr [rbx]
0x00000000004bc3db : add byte ptr [rsp + rdx*4], ah ; add byte ptr [rax - 0x7f], ah ; cli ; jmp qword ptr [rdx]
0x000000000048b7c8 : add byte ptr es:[r8 - 0x77], cl ; ret
0x0000000000437937 : add byte ptr fs:[rax], al ; add byte ptr [rbp - 0x3dbaf02e], al ; ret
0x000000000040c730 : add byte ptr gs:[rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004b1d2f : add ch, ah ; adc byte ptr [rbx], cl ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rax]
0x00000000004b6ecc : add ch, al ; cmc ; jmp qword ptr [rdx]
0x000000000044cc2f : add ch, bl ; fmul dword ptr [rax - 0x39] ; ret 0xffe8
0x00000000004b0edc : add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000004b0edd : add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x000000000044cc02 : add ch, byte ptr [rbx] ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000004656d8 : add ch, byte ptr [rcx] ; ret
0x0000000000465782 : add ch, byte ptr [rcx] ; ret 0x48d
0x00000000004626ca : add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x00000000004067ca : add ch, cl ; ret 0xfffd
0x0000000000457a4a : add ch, cl ; xchg eax, esi ; sar edi, cl ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x00000000004aca6f : add ch, dl ; ret
0x0000000000497205 : add cl, bh ; inc eax ; add ecx, edi ; call qword ptr [rax]
0x00000000004aca8f : add cl, bh ; ret
0x000000000042f147 : add cl, byte ptr [r8 - 0x76b7fdbe] ; clc ; ret
0x0000000000487ac1 : add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x000000000047724f : add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x000000000040af6d : add cl, byte ptr [rax + 0x39] ; ret
0x000000000046133a : add cl, byte ptr [rax + 0x39] ; ret 0x5877
0x000000000046cd60 : add cl, byte ptr [rax + 0x39] ; ret 0x860f
0x0000000000442e07 : add cl, byte ptr [rax + 1] ; ret 0x3b48
0x000000000044db67 : add cl, byte ptr [rax + 1] ; ret 0x8348
0x00000000004131f1 : add cl, byte ptr [rax - 0x73] ; push rsp ; ret
0x000000000042f148 : add cl, byte ptr [rax - 0x76b7fdbe] ; clc ; ret
0x000000000042f0b5 : add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000044f661 : add cl, byte ptr [rax - 0x77] ; ret 0xf748
0x000000000040f162 : add cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x000000000046870d : add cl, byte ptr [rax - 0x7d] ; mov dword ptr [rcx], 0x8348c889 ; ret 0x8401
0x000000000043e625 : add cl, byte ptr [rax - 0x7d] ; ret 0x4802
0x0000000000419db0 : add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x0000000000400a7e : add cl, byte ptr [rax - 0x7d] ; ret 0x8304
0x000000000045f79a : add cl, byte ptr [rax - 0x7d] ; ret 0xe902
0x0000000000419e13 : add cl, byte ptr [rax - 0x7d] ; ret 0xe908
0x000000000042b6f2 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000477229 : add cl, byte ptr [rcx + 0x29] ; ret
0x0000000000466ba2 : add cl, byte ptr [rcx + 0x39] ; ret
0x00000000004081c8 : add cl, byte ptr [rcx + rcx*4 - 0x3e] ; jmp 0x4081e4
0x0000000000434d6c : add cl, byte ptr [rdi] ; ret 0xb9eb
0x0000000000434c5c : add cl, byte ptr [rdi] ; ret 0xfc3
0x0000000000460027 : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x5389
0x00000000004bfebe : add cl, byte ptr [rdx + 0xa] ; ret
0x0000000000497064 : add cl, ch ; clc ; call rax
0x00000000004539ca : add cl, ch ; jmp 0x494539d7
0x0000000000406db2 : add cl, ch ; ret
0x00000000004564f0 : add cl, ch ; ret 0xffb2
0x00000000004176ca : add cl, ch ; ret 0xffdf
0x0000000000403495 : add cl, ch ; ret 0xffed
0x0000000000404a5b : add cl, ch ; ret 0xfff1
0x000000000048dfd2 : add cl, ch ; ret 0xfff7
0x0000000000401587 : add cl, cl ; ret
0x0000000000451a17 : add dh, al ; add al, 6 ; add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x00000000004a5027 : add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x000000000042b8a3 : add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000004355fb : add dh, bl ; ret
0x00000000004a8bd7 : add dh, bl ; ret 0x45
0x00000000004b35dd : add dh, ch ; jmp qword ptr [rdx]
0x00000000004aca67 : add dh, cl ; ret
0x000000000041279c : add dh, dh ; ret
0x000000000041ce68 : add dh, dh ; ret 0x7404
0x0000000000409957 : add dh, dh ; ret 0x7420
0x00000000004317f7 : add dh, dh ; ret 0x7501
0x0000000000431804 : add dh, dh ; ret 0x7502
0x0000000000431811 : add dh, dh ; ret 0x7504
0x00000000004317c9 : add dh, dh ; ret 0x7510
0x00000000004317d6 : add dh, dh ; ret 0x7520
0x00000000004317e3 : add dh, dh ; ret 0x7540
0x000000000046dcab : add dh, dh ; ret 0xf08
0x00000000004bc8b6 : add dl, byte ptr [rbx + 0xa] ; ret
0x00000000004794dc : add dl, dl ; add byte ptr [rsi - 0x46], spl ; pop rsp ; add al, 0xbe ; ret 0x4ad4
0x00000000004b8154 : add dword ptr [r14], 3 ; mov byte ptr [rcx], al ; ret
0x000000000048e760 : add dword ptr [r8 - 0x7d], ecx ; ret
0x000000000043c3a0 : add dword ptr [r8 - 0x7d], r9d ; ret 0x4d02
0x0000000000401580 : add dword ptr [r8], eax ; mov eax, 0 ; leave ; ret
0x000000000043eeea : add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4806
0x00000000004308d1 : add dword ptr [rax + 0x28d4802], ecx ; ret
0x0000000000411e2b : add dword ptr [rax + 0x39], ecx ; ret
0x000000000046331e : add dword ptr [rax + 0x39], ecx ; ret 0x860f
0x000000000046315d : add dword ptr [rax + 0x39], ecx ; ret 0x870f
0x000000000045375f : add dword ptr [rax + 0x39], ecx ; ret 0x8948
0x000000000040807f : add dword ptr [rax + 0x39], ecx ; ret 0xeb75
0x0000000000490576 : add dword ptr [rax + 0x63], ecx ; ret
0x0000000000456eaf : add dword ptr [rax + 1], ecx ; ret
0x000000000045889e : add dword ptr [rax + 1], ecx ; ret 0x148
0x0000000000406eb6 : add dword ptr [rax + 1], ecx ; ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x00000000004028b3 : add dword ptr [rax - 0x6bf0d006], eax ; ret 0xb60f
0x000000000042f121 : add dword ptr [rax - 0x776b7fe], ecx ; ret
0x000000000047151d : add dword ptr [rax - 0x77], ecx ; adc byte ptr [r11 + 0x5d], r11b ; pop r12 ; ret
0x000000000042f0b2 : add dword ptr [rax - 0x77], ecx ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x000000000040dfe3 : add dword ptr [rax - 0x77], ecx ; or byte ptr [r15], cl ; mov dh, 2 ; pop rbx ; ret
0x000000000040e1aa : add dword ptr [rax - 0x77], ecx ; push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x0000000000462841 : add dword ptr [rax - 0x77], ecx ; ret
0x0000000000442ca6 : add dword ptr [rax - 0x77], ecx ; ret 0xf41
0x0000000000415772 : add dword ptr [rax - 0x7b], ecx ; ret 0x2875
0x0000000000414f3c : add dword ptr [rax - 0x7b], ecx ; ret 0x6a75
0x00000000004129fb : add dword ptr [rax - 0x7b], ecx ; ret 0x850f
0x0000000000404fbc : add dword ptr [rax - 0x7d], ecx ; ret
0x00000000004707a2 : add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x000000000046aa4b : add dword ptr [rax - 0x7d], ecx ; ret 0x4502
0x0000000000445e39 : add dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x000000000043844d : add dword ptr [rax - 0x7d], ecx ; ret 0x4838
0x000000000046366b : add dword ptr [rax - 0x7d], ecx ; ret 0x4901
0x0000000000446367 : add dword ptr [rax - 0x7d], ecx ; ret 0x4c01
0x000000000043c3a1 : add dword ptr [rax - 0x7d], ecx ; ret 0x4d02
0x0000000000443be7 : add dword ptr [rax - 0x7d], ecx ; ret 0x8308
0x0000000000444edd : add dword ptr [rax - 0x7d], ecx ; ret 0x8310
0x000000000045f6ac : add dword ptr [rax - 0x7d], ecx ; ret 0x8502
0x000000000045ff3b : add dword ptr [rax - 0x7d], ecx ; ret 0x8508
0x000000000040cc12 : add dword ptr [rax - 0x7d], ecx ; ret 0x8801
0x000000000040cc32 : add dword ptr [rax - 0x7d], ecx ; ret 0xc601
0x0000000000451a1b : add dword ptr [rax - 0x7d], ecx ; ret 0xf01
0x000000000048e016 : add dword ptr [rax - 0x7d], ecx ; rol byte ptr [rbx], 0xeb ; ret
0x00000000004bb27d : add dword ptr [rax], 0 ; shr al, 0xf9 ; call rdx
0x0000000000434bcb : add dword ptr [rax], 0x46 ; add byte ptr [rax], al ; ret
0x0000000000456204 : add dword ptr [rax], 0x83480000 ; ret
0x0000000000401662 : add dword ptr [rax], eax ; add bh, bh ; push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x0000000000408c26 : add dword ptr [rax], eax ; add bl, dh ; ret
0x000000000047e4f6 : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret
0x00000000004b4185 : add dword ptr [rax], eax ; add byte ptr [rax + 0x46], bh ; cmc ; call qword ptr [rax]
0x00000000004706fa : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000472a01 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x000000000044ca96 : add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffe8
0x000000000046ccd6 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000048db22 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x0000000000444e4d : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x000000000048f915 : add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x0000000000462318 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7b], cl ; push qword ptr [rsi + rsi*4 - 0xa] ; ret 0x7508
0x00000000004154c7 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x000000000048d804 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rcx]
0x0000000000404f9d : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000046a98d : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x0000000000438a11 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000419b8d : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041018a : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4d07
0x000000000041bbe0 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000042268f : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000419ae1 : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004423cc : add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x00000000004a502a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004a41da : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x00000000004a4002 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004a3ffa : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x00000000004a4792 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x000000000048faa6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call r14
0x0000000000401cf8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x0000000000436531 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rbx
0x0000000000434d9d : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0x434d33
0x000000000049032d : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x0000000000476632 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov dword ptr [rdx], ecx ; ret
0x0000000000473c77 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, edx ; ret
0x000000000048ff98 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x000000000043671e : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x00000000004365ea : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000436562 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x00000000004369a8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbp ; call rbx
0x00000000004600eb : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x000000000045f8e0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x0000000000450f8e : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop r13 ; ret
0x0000000000450ec0 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop r14 ; ret
0x000000000046b51b : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop r15 ; ret
0x000000000040e7b3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043415c : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000471820 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000434c8d : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000409084 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; mov eax, edx ; pop r12 ; ret
0x000000000048f8a5 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000400d09 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004390a3 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000044f629 : add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000041679e : add dword ptr [rax], eax ; add byte ptr [rcx - 0x7d], cl ; ret
0x0000000000465943 : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ror dword ptr [rdi], 1 ; xchg eax, esp ; ret
0x0000000000465a94 : add dword ptr [rax], eax ; add byte ptr [rdi + rcx - 0x49], al ; ret 0x8d43
0x0000000000406db0 : add dword ptr [rax], eax ; add cl, ch ; ret
0x000000000048f709 : add dword ptr [rax], eax ; add dh, dh ; ret
0x00000000004317f5 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x0000000000431802 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x000000000043180f : add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x00000000004317c7 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x00000000004317d4 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x00000000004317e1 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x0000000000401581 : add dword ptr [rax], eax ; mov eax, 0 ; leave ; ret
0x0000000000409442 : add dword ptr [rax], eax ; mov rdi, r13 ; call 0x4156d7
0x0000000000415793 : add dword ptr [rax], eax ; nop dword ptr [rax] ; ret
0x00000000004178c6 : add dword ptr [rax], eax ; ret
0x00000000004706f9 : add dword ptr [rax], r8d ; add byte ptr [rax + 0x63], cl ; ret
0x000000000041c125 : add dword ptr [rax], r8d ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000433753 : add dword ptr [rbp + 0x39], ecx ; ret
0x000000000048acc5 : add dword ptr [rbp + rcx*4 + 0x74], ecx ; ret
0x00000000004102b7 : add dword ptr [rbp - 0x77], ecx ; ret
0x000000000042b762 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x0000000000413ee1 : add dword ptr [rbx + 0x2ad94805], ecx ; add byte ptr [rcx], bh ; ret 0xa7e
0x0000000000405a22 : add dword ptr [rbx + 0xf450afa], eax ; ret 0x8348
0x000000000047181c : add dword ptr [rbx - 0x3d], ebx ; mov eax, 1 ; pop rbx ; ret
0x000000000045bd10 : add dword ptr [rbx - 0x7bf0fe40], eax ; ret
0x0000000000444eda : add dword ptr [rbx - 0x7cb7fe39], eax ; ret 0x8310
0x00000000004c01b9 : add dword ptr [rbx], eax ; ret
0x00000000004792f6 : add dword ptr [rcx + 1], ecx ; ret
0x000000000046ff83 : add dword ptr [rcx + rax + 0x4a], ecx ; or byte ptr [rax - 0x7d], cl ; ret 0x4810
0x000000000043f717 : add dword ptr [rcx + rcx*4 + 0x55], eax ; add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], cl ; ret
0x0000000000465745 : add dword ptr [rcx - 0x73], eax ; push rax ; add eax, dword ptr [rdi + rcx + 0x48] ; ret 0x93ba
0x0000000000440fdb : add dword ptr [rcx - 0x75], eax ; or ecx, dword ptr [rax - 0x77] ; ret 0xc889
0x000000000042f151 : add dword ptr [rcx - 0x776b7fe], ecx ; ret
0x00000000004592d5 : add dword ptr [rcx - 0x77], ecx ; ret 0x12e9
0x00000000004411b2 : add dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000489b1d : add dword ptr [rcx], edi ; ret
0x0000000000489bac : add dword ptr [rcx], edi ; ret 0xdf75
0x000000000042372c : add dword ptr [rdi - 0x27], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004bdb55 : add dword ptr [rdi], 0x48 ; or eax, 0x3520303 ; ret
0x000000000043d9aa : add dword ptr [rdi], 1 ; jmp 0x43d976
0x000000000044b603 : add dword ptr [rdi], ecx ; test dword ptr [rdi - 0x16000004], ebp ; scasd eax, dword ptr [rdi] ; ret
0x0000000000487852 : add dword ptr [rdx + 0x2b], 0xd7748104 ; ret
0x000000000048d0ab : add dword ptr [rdx + rax*2], 1 ; ret
0x00000000004bc94c : add dword ptr [rdx], 0x4a ; ret
0x00000000004b7cb4 : add dword ptr [rdx], 0x51 ; ret
0x00000000004b8f15 : add dword ptr [rdx], 0x59 ; ret
0x00000000004b7cbd : add dword ptr [rdx], 0x65 ; ret
0x00000000004b9250 : add dword ptr [rdx], ecx ; ret
0x0000000000410059 : add dword ptr [rip + 0x2b3760], 1 ; ret
0x000000000040f506 : add dword ptr [rip + 0x2b41f7], 1 ; ret
0x000000000048ae17 : add dword ptr [rsi - 0x73], ecx ; jl 0x48ae1c ; or byte ptr [rax - 0x77], cl ; ret
0x000000000042f132 : add dword ptr [rsi - 0x77], esp ; add cl, byte ptr [rax - 0x77] ; clc ; ret
0x00000000004b481c : add dword ptr [rsi - 0xb], edx ; jmp qword ptr [rdx]
0x00000000004b7708 : add dword ptr [rsi], 2 ; fimul word ptr [rdx] ; ret
0x00000000004b8155 : add dword ptr [rsi], 3 ; mov byte ptr [rcx], al ; ret
0x00000000004b6967 : add dword ptr [rsi], edx ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret
0x00000000004850e7 : add dword ptr es:[rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041d2d6 : add eax, 0x11f55 ; ret
0x0000000000419d56 : add eax, 0x13d25 ; ret
0x000000000041c728 : add eax, 0x15313 ; ret
0x00000000004178c3 : add eax, 0x19e58 ; ret
0x000000000041c70c : add eax, 0x1f ; ret
0x000000000048d2b1 : add eax, 0x237ce2 ; ret
0x000000000047ebdc : add eax, 0x245a7b ; add byte ptr [rsi + 0x6c], 0 ; ret
0x0000000000470f0c : add eax, 0x253bb7 ; mov qword ptr [rsi], rax ; ret
0x0000000000470e3a : add eax, 0x253c91 ; add rsp, 8 ; ret
0x000000000046e472 : add eax, 0x253dc1 ; add rsp, 8 ; jmp rax
0x00000000004655a0 : add eax, 0x25fb53 ; add rsp, 8 ; ret
0x0000000000445246 : add eax, 0x27d8ad ; je 0x445258 ; ret
0x0000000000442872 : add eax, 0x2819f9 ; ret
0x000000000043a272 : add eax, 0x28add1 ; ret
0x0000000000439283 : add eax, 0x28bd78 ; pop rbx ; ret
0x0000000000438fd1 : add eax, 0x28c012 ; test eax, eax ; je 0x438fe9 ; ret
0x0000000000434c88 : add eax, 0x28ebff ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000415039 : add eax, 0x2ae74e ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040f482 : add eax, 0x2b1c19 ; ret
0x000000000041005a : add eax, 0x2b3760 ; add ebx, esi ; ret
0x000000000040f566 : add eax, 0x2b4199 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000401bdb : add eax, 0x2bf490 ; xor eax, eax ; ret
0x0000000000400e0c : add eax, 0x2c131f ; pop r12 ; ret
0x0000000000401015 : add eax, 0x2c1c25 ; add ebx, esi ; ret
0x00000000004b8153 : add eax, 0x3068345 ; mov byte ptr [rcx], al ; ret
0x0000000000434b0b : add eax, 0x46 ; add byte ptr [rax], al ; ret
0x000000000047eab1 : add eax, 0x48000000 ; mov eax, edx ; pop rbx ; ret
0x0000000000430968 : add eax, 0x48054289 ; lea eax, dword ptr [rdx + 8] ; ret
0x000000000042f198 : add eax, 0x48054289 ; mov eax, edi ; ret
0x0000000000430e66 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x00000000004309e9 : add eax, 0x5428948 ; lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000042f1d9 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x00000000004a15e9 : add eax, 0x5bd0000 ; add byte ptr [rax], al ; ret 5
0x00000000004a5bbd : add eax, 0x5c00000 ; add byte ptr [rax], al ; ret 5
0x000000000047f153 : add eax, 0x5c415d5b ; ret
0x000000000041d402 : add eax, 0x79 ; ret
0x000000000041977d : add eax, 0x83480000 ; ret 0x4910
0x0000000000420c81 : add eax, 0x83480000 ; ret 0xe910
0x00000000004196d1 : add eax, 0x83480000 ; ret 0xeb10
0x000000000043096b : add eax, 0x8428d48 ; ret
0x000000000041c720 : add eax, 0x852b ; ret
0x0000000000465667 : add eax, 0x89d02944 ; ret
0x0000000000425caa : add eax, 0xc0310000 ; ret
0x00000000004309ed : add eax, 0xc428d48 ; ret
0x00000000004314cd : add eax, 0xc478d48 ; ret
0x00000000004b6d5f : add eax, 0xd1cfff6 ; cli ; jrcxz 0x4b6d64 ; jmp qword ptr [rdx]
0x00000000004b6d5e : add eax, 0xd1cfff6 ; cli ; jrcxz 0x4b6d65 ; jmp qword ptr [rdx]
0x00000000004b6c87 : add eax, 0xd1cfff6 ; mov bh, 0xe1 ; cmc ; jmp qword ptr [rdx]
0x00000000004b6ccf : add eax, 0xd1cfff6 ; pop rax ; loop 0x4b6cd4 ; jmp qword ptr [rdx]
0x00000000004b6d17 : add eax, 0xd1cfff6 ; xchg eax, esi ; jrcxz 0x4b6d1c ; jmp qword ptr [rdx]
0x00000000004369cc : add eax, 0xf6310000 ; mov rdi, r12 ; call rbx
0x00000000004369f1 : add eax, 0xf6310000 ; mov rdi, r13 ; call rbx
0x0000000000436b3a : add eax, 0xf6310000 ; mov rdi, r14 ; call rbx
0x0000000000436bd3 : add eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x000000000042b753 : add eax, 0xf7f0ff3 ; ret
0x000000000046584e : add eax, 0xfd02944 ; scasd eax, dword ptr [rdi] ; ret
0x000000000047079d : add eax, 0xfffffbd8 ; add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x0000000000474a9a : add eax, 0xfffffff0 ; ret
0x0000000000463b91 : add eax, 1 ; ret
0x000000000043a0e2 : add eax, 2 ; mov dword ptr [rsp], eax ; call rbx
0x0000000000463b88 : add eax, 2 ; ret
0x000000000048e018 : add eax, 3 ; jmp 0x48dfe4
0x0000000000463ba1 : add eax, 3 ; ret
0x0000000000417b26 : add eax, 5 ; ret
0x000000000041d465 : add eax, 6 ; ret
0x000000000049219c : add eax, 8 ; mov qword ptr [rbx], r8 ; pop rbx ; ret
0x00000000004452a9 : add eax, dword ptr [0] ; ret
0x000000000046e45e : add eax, dword ptr [rax] ; add byte ptr [rax + rcx*2], al ; add esp, 8 ; ret
0x0000000000456c9f : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041991d : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000420e21 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000419941 : add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000043ad23 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000436efd : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000436f54 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x0000000000436fd4 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x00000000004370d4 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x0000000000463be3 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000004744f1 : add eax, dword ptr [rax] ; add byte ptr [rcx + rdi*2 - 0x7d], dh ; ret
0x0000000000437ab5 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], al ; ret
0x000000000046d363 : add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret 0x8d48
0x0000000000433940 : add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x8341
0x000000000047453c : add eax, dword ptr [rax] ; add byte ptr [rdx + rbp*2 - 0x7d], dh ; ret
0x0000000000471919 : add eax, dword ptr [rax] ; add dh, dh ; ret 0x7510
0x000000000046dca9 : add eax, dword ptr [rax] ; add dh, dh ; ret 0xf08
0x00000000004171bf : add eax, dword ptr [rax] ; add rsp, 0x70 ; xor eax, eax ; pop rbx ; ret
0x0000000000408424 : add eax, dword ptr [rax] ; add rsp, 0xd8 ; ret
0x000000000043aa6b : add eax, dword ptr [rax] ; mov rdi, r14 ; mov rax, qword ptr [rbp - 0x60] ; call rax
0x0000000000442824 : add eax, dword ptr [rax] ; mov rdi, rbx ; call r12
0x000000000043b179 : add eax, dword ptr [rax] ; mov rdi, rbx ; call r14
0x000000000043a3e7 : add eax, dword ptr [rax] ; mov rdi, rbx ; call r15
0x0000000000433b40 : add eax, dword ptr [rax] ; pop rbx ; ret
0x0000000000433b63 : add eax, dword ptr [rax] ; ret
0x00000000004bf0db : add eax, dword ptr [rbp + 0xe] ; and byte ptr [rbx + 0x1c80304], al ; ret
0x000000000046575d : add eax, dword ptr [rbp - 0x7b] ; rol byte ptr [rcx + 0xf], cl ; ret 0xf741
0x000000000043f72c : add eax, dword ptr [rbx + 0x394807e0] ; ret
0x00000000004bcddb : add eax, dword ptr [rbx + 0xae40204] ; ret
0x000000000040599e : add eax, dword ptr [rbx - 0x6bf0fc08] ; ret 0x70e9
0x0000000000400ab0 : add eax, dword ptr [rbx - 0x7cb70038] ; ret 0xeb04
0x000000000046f3b9 : add eax, dword ptr [rbx] ; call rax
0x000000000046ee76 : add eax, dword ptr [rbx] ; mov qword ptr [rbp - 0xe0], r11 ; call rax
0x0000000000489626 : add eax, dword ptr [rcx + 0x5f] ; ret
0x0000000000465749 : add eax, dword ptr [rdi + rcx + 0x48] ; ret 0x93ba
0x000000000046e85f : add eax, dword ptr [rdi] ; call rax
0x0000000000474842 : add eax, dword ptr [rdx + 8] ; add rsp, 0x58 ; ret
0x0000000000472c6c : add eax, dword ptr [rdx + 8] ; call rax
0x000000000046840a : add eax, dword ptr [rsi + rdx] ; ret
0x000000000046f286 : add eax, dword ptr [rsi] ; call rax
0x0000000000433bec : add eax, eax ; div ecx ; pop rbx ; mov eax, eax ; ret
0x0000000000490677 : add eax, eax ; jmp r8
0x000000000044eff0 : add eax, eax ; mov eax, r8d ; ret
0x000000000048e3e7 : add eax, ebx ; jmp rax
0x000000000041c43a : add eax, ecx ; ret
0x000000000041c437 : add eax, edi ; add rax, rcx ; ret
0x000000000048f444 : add eax, edi ; jmp rax
0x000000000041c674 : add eax, edi ; ret
0x0000000000400fcb : add eax, edx ; sar rax, 1 ; jne 0x400fdc ; pop rbp ; ret
0x000000000041a03e : add eax, edx ; sub rax, rdi ; ret
0x000000000048ef37 : add eax, esi ; jmp r8
0x0000000000464921 : add eax, esi ; ret
0x000000000044c86f : add ebp, 0x30 ; pop rbx ; mov eax, ebp ; pop rbp ; ret
0x0000000000488e77 : add ebp, dword ptr [rcx] ; ret 0x294c
0x0000000000487dfb : add ebp, dword ptr [rcx] ; ret 0x48d
0x000000000048e01a : add ebp, ebx ; ret
0x00000000004b2201 : add ebp, edi ; inc dword ptr [rax] ; add edi, ebp ; jmp rax
0x000000000040e143 : add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004390c0 : add ebx, dword ptr [rbx - 0x2d] ; loopne 0x439127 ; ret
0x000000000048aba1 : add ebx, dword ptr [rdx] ; and eax, 0xf ; cmp al, 0xa ; jne 0x48ab5e ; call rbx
0x0000000000474f21 : add ebx, eax ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000043d9ac : add ebx, ebp ; ret
0x0000000000452f27 : add ebx, ebp ; ret 0x9d8b
0x000000000042b913 : add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000040101a : add ebx, esi ; ret
0x000000000041cdf8 : add ecx, 0x40 ; cmp rdx, rcx ; jne 0x41cde9 ; ret
0x000000000042f185 : add ecx, dword ptr [r9 - 0x76b7fcbe] ; clc ; ret
0x0000000000411454 : add ecx, dword ptr [rax + 0x29] ; ret
0x000000000048bf4f : add ecx, dword ptr [rax - 0x46] ; ret
0x000000000042f189 : add ecx, dword ptr [rax - 0x77] ; clc ; ret
0x000000000048a565 : add ecx, dword ptr [rax - 0x77] ; ret 0x8948
0x000000000043744b : add ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x48 ; ret 0xc148
0x00000000004609aa : add ecx, dword ptr [rax - 0x7d] ; ret
0x0000000000445ea5 : add ecx, dword ptr [rax - 0x7d] ; ret 0xf301
0x0000000000436741 : add ecx, dword ptr [rax] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x00000000004920b7 : add ecx, dword ptr [rbp - 0x75] ; add byte ptr [rcx + rcx*4 + 3], cl ; pop rbx ; ret
0x000000000042b682 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000430e04 : add ecx, dword ptr [rcx + 0x357890f] ; ret
0x00000000004411c6 : add ecx, dword ptr [rcx + 0x39] ; ret
0x000000000048f43e : add ecx, dword ptr [rcx + 0x63] ; add al, 0x87 ; add rax, r15 ; jmp rax
0x000000000048ac92 : add ecx, dword ptr [rcx + rcx*4 - 0x16] ; mov rsi, r12 ; mov edi, ebp ; call rax
0x00000000004065f5 : add ecx, dword ptr [rcx + rcx*4 - 0x1e] ; call 0x4228d6
0x000000000042f186 : add ecx, dword ptr [rcx - 0x76b7fcbe] ; clc ; ret
0x000000000045259b : add ecx, dword ptr [rcx - 0x7d] ; ret 0x4101
0x0000000000468de5 : add ecx, dword ptr [rdi] ; xchg eax, ebp ; ret 0xe74
0x00000000004059a1 : add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0x70e9
0x00000000004090ba : add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x000000000049208f : add ecx, eax ; jmp r9
0x000000000048e4e8 : add ecx, eax ; jmp rcx
0x000000000040f203 : add ecx, eax ; xor eax, eax ; mov qword ptr [rdx + 8], rcx ; ret
0x0000000000408358 : add ecx, ebp ; ret
0x0000000000468823 : add ecx, ebp ; ret 0xfffe
0x00000000004262ce : add ecx, ebx ; jmp r9
0x0000000000424c72 : add ecx, ebx ; jmp rcx
0x0000000000497209 : add ecx, edi ; call qword ptr [rax]
0x000000000048d778 : add ecx, edi ; jmp rcx
0x000000000046f891 : add ecx, esi ; call rcx
0x00000000004b2205 : add edi, ebp ; jmp rax
0x00000000004bf741 : add edi, ebp ; jmp rsp
0x00000000004b6224 : add edi, ebx ; std ; jmp qword ptr [rdx]
0x000000000049724d : add edi, ecx ; call rax
0x00000000004262cb : add edi, edx ; add r9, r11 ; jmp r9
0x0000000000439b1a : add edi, esi ; dec dword ptr [rax - 0x73] ; and qword ptr [rax - 0x77], rcx ; ret 0x894c
0x00000000004358c9 : add edi, esi ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004744ab : add edx, 0x92bf004a ; ret 0x4a
0x00000000004bdb5a : add edx, dword ptr [rdx + 3] ; ret
0x0000000000475a72 : add edx, eax ; mov rax, rdx ; pop rbx ; ret
0x000000000048eaf2 : add edx, ebp ; jmp rdx
0x0000000000449f5e : add edx, ebx ; call qword ptr [r11 + rax*8]
0x000000000040055d : add edx, ecx ; cmp esi, ecx ; cmovge eax, edx ; jmp 0x400537
0x000000000048ece7 : add edx, ecx ; jmp rdx
0x000000000045c561 : add edx, esp ; call qword ptr [r11 + rax*8]
0x000000000042b833 : add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000044524c : add esi, ebx ; ret
0x0000000000433c02 : add esi, edi ; int1 ; pop rbx ; mov eax, eax ; ret
0x00000000004262c8 : add esi, edx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x000000000041cc40 : add esi, esi ; ret
0x0000000000470f79 : add esi, esi ; ret 0xf304
0x000000000048cb07 : add esp, 0x10 ; pop rbx ; jmp rax
0x0000000000405aa1 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047469c : add esp, 0x10 ; pop rbx ; ret
0x0000000000470422 : add esp, 0x140 ; mov eax, ebx ; pop rbx ; ret
0x000000000046e85b : add esp, 0x18 ; add rax, qword ptr [r15] ; call rax
0x000000000043563d : add esp, 0x18 ; mov eax, edx ; ret
0x00000000004349f0 : add esp, 0x18 ; mov rax, rdx ; ret
0x000000000040fc18 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040e0a3 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000416af1 : add esp, 0x18 ; ret
0x00000000004390a0 : add esp, 0x1d8 ; pop rbx ; pop rbp ; ret
0x0000000000447343 : add esp, 0x20 ; mov rax, r9 ; pop rbx ; ret
0x000000000048cefc : add esp, 0x20 ; mov rax, rbx ; pop rbx ; ret
0x00000000004099e1 : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000433d79 : add esp, 0x20 ; pop rbx ; ret
0x0000000000433d61 : add esp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x000000000043758f : add esp, 0x2018 ; pop rbx ; pop rbp ; ret
0x000000000047f069 : add esp, 0x28 ; movzx eax, al ; neg eax ; ret
0x0000000000406e49 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000040a82b : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000046831b : add esp, 0x28 ; ret
0x0000000000473993 : add esp, 0x30 ; jmp r11
0x00000000004343e1 : add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000474716 : add esp, 0x30 ; pop rbx ; ret
0x0000000000473a73 : add esp, 0x30 ; ret
0x000000000047f136 : add esp, 0x38 ; ret
0x000000000048cfa6 : add esp, 0x40 ; mov rax, rbx ; pop rbx ; ret
0x0000000000474d8c : add esp, 0x48 ; jmp qword ptr [rax]
0x000000000047361b : add esp, 0x48 ; jmp r11
0x0000000000468182 : add esp, 0x48 ; movzx eax, al ; ret
0x00000000004747b6 : add esp, 0x48 ; ret
0x0000000000474d1a : add esp, 0x50 ; jmp qword ptr [rax]
0x0000000000474846 : add esp, 0x58 ; ret
0x0000000000417104 : add esp, 0x70 ; pop rbx ; ret
0x00000000004171c2 : add esp, 0x70 ; xor eax, eax ; pop rbx ; ret
0x0000000000474932 : add esp, 0x78 ; ret
0x0000000000467c29 : add esp, 0x90 ; pop rbx ; ret
0x00000000004003c8 : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x0000000000408605 : add esp, 0xd0 ; mov eax, edx ; pop rbx ; ret
0x00000000004455ab : add esp, 0xd0 ; ret
0x0000000000408427 : add esp, 0xd8 ; ret
0x0000000000452f25 : add esp, 1 ; jmp 0x452ef0
0x000000000046e478 : add esp, 8 ; jmp rax
0x000000000044c7f2 : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000415f75 : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000043559a : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000410d6b : add esp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000417894 : add esp, 8 ; mov rax, rdx ; ret
0x0000000000407b76 : add esp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x000000000048ce87 : add esp, 8 ; movzx eax, al ; neg eax ; ret
0x0000000000461930 : add esp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000040b9ec : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000402063 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004002c6 : add esp, 8 ; ret
0x0000000000419e79 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000470da1 : add esp, 8 ; xor edx, edx ; pop rbx ; mov eax, edx ; pop rbp ; ret
0x00000000004be755 : add esp, edi ; jmp qword ptr [rdx]
0x000000000046ff82 : add qword ptr [r9 + r8 + 0x4a], rcx ; or byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000438a10 : add qword ptr [rax], r8 ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x00000000004635dd : add qword ptr [rax], rax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x000000000043d9a9 : add qword ptr [rdi], 1 ; jmp 0x43d977
0x000000000042b912 : add r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x000000000046e85a : add r12, 0x18 ; add rax, qword ptr [r15] ; call rax
0x0000000000452f24 : add r12, 1 ; jmp 0x452ef1
0x000000000042b8a2 : add r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x000000000042b832 : add r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000483510 : add r8, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000048ef36 : add r8, r14 ; jmp r8
0x0000000000490676 : add r8, rax ; jmp r8
0x000000000048a747 : add r8b, bpl ; ret 0xf776
0x0000000000405b65 : add r8b, byte ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000044efef : add r8d, eax ; mov eax, r8d ; ret
0x00000000004262cd : add r9, r11 ; jmp r9
0x000000000049208e : add r9, rax ; jmp r9
0x0000000000404a5a : add r9b, bpl ; ret 0xfff1
0x00000000004081c7 : add r9b, byte ptr [r9 + rcx*4 - 0x3e] ; jmp 0x4081e5
0x0000000000474a99 : add rax, -0x10 ; ret
0x0000000000484cc2 : add rax, -0x7cb80000 ; ret 0xe910
0x0000000000436b39 : add rax, -0x9cf0000 ; mov rdi, r14 ; call rbx
0x0000000000463b90 : add rax, 1 ; ret
0x0000000000463b87 : add rax, 2 ; ret
0x000000000048e017 : add rax, 3 ; jmp 0x48dfe5
0x0000000000463ba0 : add rax, 3 ; ret
0x000000000049219b : add rax, 8 ; mov qword ptr [rbx], r8 ; pop rbx ; ret
0x00000000004452a8 : add rax, qword ptr [0] ; ret
0x000000000046f285 : add rax, qword ptr [r14] ; call rax
0x000000000046e85e : add rax, qword ptr [r15] ; call rax
0x000000000046f3b8 : add rax, qword ptr [rbx] ; call rax
0x0000000000474841 : add rax, qword ptr [rdx + 8] ; add rsp, 0x58 ; ret
0x0000000000472c6b : add rax, qword ptr [rdx + 8] ; call rax
0x00000000004452a7 : add rax, qword ptr fs:[0] ; ret
0x000000000048e3e6 : add rax, r11 ; jmp rax
0x000000000048f443 : add rax, r15 ; jmp rax
0x000000000041c439 : add rax, rcx ; ret
0x000000000041c436 : add rax, rdi ; add rax, rcx ; ret
0x000000000041c673 : add rax, rdi ; ret
0x0000000000400fca : add rax, rdx ; sar rax, 1 ; jne 0x400fdd ; pop rbp ; ret
0x000000000041a03d : add rax, rdx ; sub rax, rdi ; ret
0x00000000004411c5 : add rcx, qword ptr [r9 + 0x39] ; ret
0x0000000000424c71 : add rcx, r11 ; jmp rcx
0x000000000048d777 : add rcx, r15 ; jmp rcx
0x000000000048e4e7 : add rcx, rax ; jmp rcx
0x000000000048d8cc : add rcx, rdi ; jmp rcx
0x000000000046f890 : add rcx, rsi ; call rcx
0x00000000004262ca : add rdi, rdx ; add r9, r11 ; jmp r9
0x000000000045c560 : add rdx, r12 ; call qword ptr [r11 + rax*8]
0x0000000000475a71 : add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x000000000048eaf1 : add rdx, rbp ; jmp rdx
0x0000000000449f5d : add rdx, rbx ; call qword ptr [r11 + rax*8]
0x000000000048ece6 : add rdx, rcx ; jmp rdx
0x000000000048cb06 : add rsp, 0x10 ; pop rbx ; jmp rax
0x0000000000405aa0 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047469b : add rsp, 0x10 ; pop rbx ; ret
0x000000000043563c : add rsp, 0x18 ; mov eax, edx ; ret
0x00000000004349ef : add rsp, 0x18 ; mov rax, rdx ; ret
0x000000000040e0a2 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000416af0 : add rsp, 0x18 ; ret
0x000000000043909f : add rsp, 0x1d8 ; pop rbx ; pop rbp ; ret
0x0000000000447342 : add rsp, 0x20 ; mov rax, r9 ; pop rbx ; ret
0x000000000048cefb : add rsp, 0x20 ; mov rax, rbx ; pop rbx ; ret
0x00000000004099e0 : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000433d78 : add rsp, 0x20 ; pop rbx ; ret
0x0000000000433d60 : add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x000000000043758e : add rsp, 0x2018 ; pop rbx ; pop rbp ; ret
0x000000000047f068 : add rsp, 0x28 ; movzx eax, al ; neg eax ; ret
0x000000000040a82a : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000046831a : add rsp, 0x28 ; ret
0x0000000000473992 : add rsp, 0x30 ; jmp r11
0x00000000004343e0 : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000474715 : add rsp, 0x30 ; pop rbx ; ret
0x0000000000473a72 : add rsp, 0x30 ; ret
0x000000000047f135 : add rsp, 0x38 ; ret
0x000000000048cfa5 : add rsp, 0x40 ; mov rax, rbx ; pop rbx ; ret
0x0000000000474d8b : add rsp, 0x48 ; jmp qword ptr [rax]
0x000000000047361a : add rsp, 0x48 ; jmp r11
0x0000000000468181 : add rsp, 0x48 ; movzx eax, al ; ret
0x00000000004747b5 : add rsp, 0x48 ; ret
0x0000000000474d19 : add rsp, 0x50 ; jmp qword ptr [rax]
0x0000000000474845 : add rsp, 0x58 ; ret
0x0000000000417103 : add rsp, 0x70 ; pop rbx ; ret
0x00000000004171c1 : add rsp, 0x70 ; xor eax, eax ; pop rbx ; ret
0x0000000000474931 : add rsp, 0x78 ; ret
0x0000000000467c28 : add rsp, 0x90 ; pop rbx ; ret
0x00000000004003c7 : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x00000000004455aa : add rsp, 0xd0 ; ret
0x0000000000408426 : add rsp, 0xd8 ; ret
0x000000000046e477 : add rsp, 8 ; jmp rax
0x000000000044c7f1 : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000415f74 : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000435599 : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x0000000000410d6a : add rsp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000417893 : add rsp, 8 ; mov rax, rdx ; ret
0x0000000000407b75 : add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x000000000048ce86 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x000000000046192f : add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000402062 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004002c5 : add rsp, 8 ; ret
0x0000000000419e78 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000004b35dc : add sil, r13b ; jmp qword ptr [rdx]
0x00000000004228fe : add sil, sil ; ret 0x7404
0x000000000048d0aa : add word ptr [rdx + rax*2], 1 ; ret
0x000000000043a0fa : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000047ebdf : and al, 0 ; add byte ptr [rsi + 0x6c], 0 ; ret
0x000000000047eed9 : and al, 0 ; call rax
0x000000000047edef : and al, 0 ; jmp rax
0x0000000000434d6a : and al, 0x10 ; add cl, byte ptr [rdi] ; ret 0xb9eb
0x000000000046e858 : and al, 0x10 ; add r12, 0x18 ; add rax, qword ptr [r15] ; call rax
0x000000000046f3b6 : and al, 0x10 ; add rax, qword ptr [rbx] ; call rax
0x0000000000433d76 : and al, 0x10 ; add rsp, 0x20 ; pop rbx ; ret
0x000000000048fdd8 : and al, 0x10 ; add rsp, 0x28 ; ret
0x0000000000442622 : and al, 0x10 ; call r12
0x00000000004426ff : and al, 0x10 ; call r15
0x0000000000435d0c : and al, 0x10 ; call rax
0x0000000000413d73 : and al, 0x10 ; call rdx
0x0000000000438cc4 : and al, 0x10 ; je 0x438cd8 ; mov edi, 0x6c21e0 ; call rax
0x000000000048ce4b : and al, 0x10 ; mov rax, rdx ; add rsp, 0x28 ; ret
0x0000000000406618 : and al, 0x10 ; mov rdi, r10 ; call 0x4228d7
0x0000000000406617 : and al, 0x10 ; mov rdi, r10 ; call 0x4228d8
0x00000000004904e9 : and al, 0x10 ; mov rsi, qword ptr [rbp] ; call r14
0x0000000000462912 : and al, 0x14 ; add byte ptr [rcx], ch ; ret
0x0000000000401768 : and al, 0x18 ; call rax
0x000000000043a046 : and al, 0x18 ; call rbx
0x0000000000474add : and al, 0x18 ; mov edi, 0x6c21e0 ; call rax
0x000000000047f130 : and al, 0x18 ; mov rax, rdx ; add rsp, 0x38 ; ret
0x000000000044261d : and al, 0x18 ; mov rdi, qword ptr [rsp + 0x10] ; call r12
0x00000000004426fa : and al, 0x18 ; mov rdi, qword ptr [rsp + 0x10] ; call r15
0x000000000041517d : and al, 0x18 ; pop rdx ; pop rbx ; pop rbp ; jmp rax
0x000000000048cf71 : and al, 0x20 ; je 0x48cf85 ; mov edi, 0x6c21e0 ; call rax
0x0000000000413d6e : and al, 0x20 ; mov qword ptr [rsp + 0x10], rcx ; call rdx
0x00000000004404db : and al, 0x24 ; jmp 0x4404a4
0x00000000004404da : and al, 0x24 ; jmp 0x4404a5
0x00000000004af024 : and al, 0x26 ; outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x0000000000413b8c : and al, 0x28 ; call rax
0x00000000004640c5 : and al, 0x28 ; lea rsi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000415d51 : and al, 0x28 ; mov rdi, r12 ; call rax
0x000000000044f627 : and al, 0x2c ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000441613 : and al, 0x2c ; jmp 0x4415dc
0x0000000000441612 : and al, 0x2c ; jmp 0x4415dd
0x0000000000491c48 : and al, 0x2e ; and eax, dword ptr [rax] ; mov qword ptr [rsi + 0x28], rax ; pop rbx ; ret
0x00000000004747b0 : and al, 0x30 ; add byte ptr [rbp + 0xb], dh ; add rsp, 0x48 ; ret
0x00000000004703ef : and al, 0x30 ; call r9
0x000000000046cd33 : and al, 0x30 ; call rax
0x00000000004680d2 : and al, 0x30 ; jmp 0x468088
0x00000000004680d1 : and al, 0x30 ; jmp 0x468089
0x0000000000413b87 : and al, 0x30 ; mov dword ptr [rsp + 0x28], r11d ; call rax
0x000000000043d9f2 : and al, 0x30 ; mov qword ptr [rax], rbx ; jmp 0x43d9c1
0x000000000043d9f1 : and al, 0x30 ; mov qword ptr [rax], rbx ; jmp 0x43d9c2
0x00000000004642c5 : and al, 0x30 ; mov rdi, r12 ; call rbx
0x0000000000412457 : and al, 0x30 ; xor cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x1589
0x0000000000409463 : and al, 0x38 ; call 0x4156d4
0x000000000043c60d : and al, 0x38 ; mov dword ptr [rsp + 8], eax ; call r14
0x000000000043cf2c : and al, 0x38 ; mov dword ptr [rsp + 8], eax ; call r15
0x000000000043c514 : and al, 0x38 ; mov dword ptr [rsp + 8], eax ; call rbx
0x00000000004703ea : and al, 0x38 ; mov r9, qword ptr [rsp + 0x30] ; call r9
0x0000000000473c44 : and al, 0x38 ; ret 0x2875
0x0000000000474d89 : and al, 0x40 ; add rsp, 0x48 ; jmp qword ptr [rax]
0x0000000000474d17 : and al, 0x40 ; add rsp, 0x50 ; jmp qword ptr [rax]
0x00000000004640ca : and al, 0x40 ; call rbx
0x0000000000464153 : and al, 0x40 ; lea rcx, qword ptr [rax + 4] ; call rbx
0x0000000000463eb9 : and al, 0x40 ; mov rdi, qword ptr [r13] ; call r12
0x000000000043563b : and al, 0x48 ; add esp, 0x18 ; mov eax, edx ; ret
0x00000000004349ee : and al, 0x48 ; add esp, 0x18 ; mov rax, rdx ; ret
0x000000000047ec91 : and al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004906a5 : and al, 0x48 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043adca : and al, 0x48 ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000473991 : and al, 0x48 ; add esp, 0x30 ; jmp r11
0x0000000000473a71 : and al, 0x48 ; add esp, 0x30 ; ret
0x0000000000473619 : and al, 0x48 ; add esp, 0x48 ; jmp r11
0x000000000047496d : and al, 0x48 ; add rsp, 0x78 ; ret
0x00000000004b416c : and al, 0x48 ; cmc ; jmp qword ptr [rdx]
0x0000000000463d76 : and al, 0x48 ; lea ecx, dword ptr [rax + 1] ; call rbx
0x00000000004064da : and al, 0x48 ; mov dword ptr [rax + 8], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043f46d : and al, 0x48 ; mov dword ptr [rsp + 8], eax ; call r12
0x000000000043cc4c : and al, 0x48 ; mov dword ptr [rsp + 8], eax ; call r14
0x000000000043fe1e : and al, 0x48 ; mov dword ptr [rsp + 8], eax ; call r15
0x000000000043c961 : and al, 0x48 ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000048a746 : and al, 0x4b ; add al, ch ; ret 0xf776
0x000000000044077c : and al, 0x50 ; mov dword ptr [rsp + 8], eax ; call r14
0x000000000043e1a6 : and al, 0x50 ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000048d802 : and al, 0x58 ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rcx]
0x000000000043e84c : and al, 0x58 ; call rax
0x00000000004170ff : and al, 0x60 ; je 0x417119 ; add rsp, 0x70 ; pop rbx ; ret
0x000000000047c52d : and al, 0x73 ; ror byte ptr [rax - 0x7d], 1 ; ret
0x000000000040942e : and al, 0x74 ; ret 0x8b4c
0x0000000000406e73 : and al, 0x74 ; ret 0x8d48
0x0000000000488fc5 : and al, 0x80 ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x894c
0x000000000047e3cc : and al, 0x84 ; sbb eax, dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0x840f
0x00000000004885b5 : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8948
0x000000000047debd : and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x0000000000434c5a : and al, 0x98 ; add cl, byte ptr [rdi] ; ret 0xfc3
0x000000000043ddff : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000043dfb6 : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; add al, 0x24 ; call qword ptr [rbx]
0x000000000048e93b : and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000478994 : and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000048f9cb : and al, 0xbf ; add dword ptr [rax], eax ; add byte ptr [rax], al ; call rax
0x00000000004747df : and al, 0xc ; add rsp, 0x48 ; ret
0x0000000000434df8 : and al, 0xc ; jmp 0x434d34
0x0000000000401763 : and al, 0xc ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x00000000004b2a5c : and al, 0xc5 ; std ; jmp rsp
0x0000000000488ea4 : and al, 0xd8 ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000488472 : and al, 0xe8 ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000048ca9c : and al, 0xe8 ; ret
0x0000000000468222 : and al, 0xeb ; mov byte ptr [r8 + 0x23], cl ; ret
0x00000000004404dc : and al, 0xeb ; ret 0x8948
0x000000000048ca98 : and al, 0xec ; fld xword ptr [rsp - 0x18] ; ret
0x000000000049096b : and al, 0xf ; ret 0x8348
0x000000000046f975 : and al, 0xf ; xchg eax, esp ; ret 0xc031
0x0000000000422a06 : and al, 0xf8 ; jne 0x4228e2 ; ret
0x000000000048ca51 : and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000048ca57 : and al, 0xf8 ; ret
0x000000000048ca0b : and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x000000000048ca11 : and al, 0xfc ; ret
0x0000000000445377 : and al, 0xfe ; fldcw word ptr [rsp - 2] ; ret
0x000000000044537b : and al, 0xfe ; ret
0x00000000004373cd : and al, 0xff ; jmp 0x437397
0x00000000004373cc : and al, 0xff ; jmp 0x437398
0x0000000000468318 : and al, 8 ; add rsp, 0x28 ; ret
0x0000000000414ecf : and al, 8 ; call 0x411134
0x000000000043f471 : and al, 8 ; call r12
0x000000000043c611 : and al, 8 ; call r14
0x000000000043cf30 : and al, 8 ; call r15
0x0000000000435be8 : and al, 8 ; call rbx
0x000000000048cec9 : and al, 8 ; je 0x48cedd ; mov edi, 0x6c21e0 ; call rax
0x0000000000435d07 : and al, 8 ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x000000000043e847 : and al, 8 ; mov rsi, qword ptr [rsp + 0x58] ; call rax
0x00000000004ac960 : and al, bl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi], ah ; ret
0x0000000000497320 : and al, byte ptr [rax - 7] ; call qword ptr [rdx + 0x22fff946]
0x000000000040d32a : and al, byte ptr [rax] ; add bl, dh ; ret
0x000000000049419a : and al, byte ptr [rax] ; jne 0x4941c1 ; ret
0x0000000000419e2a : and al, byte ptr [rsp - 0xb7f68c] ; ret 0xc148
0x000000000044cc00 : and bh, al ; add ch, byte ptr [rbx] ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000004769ae : and bh, dl ; add byte ptr [rax + 1], cl ; ret 0x8b48
0x00000000004b97f4 : and bl, byte ptr [rdi] ; clc ; jmp qword ptr [rdx]
0x000000000040b282 : and bl, ch ; ret 0x1f0f
0x0000000000411d50 : and byte ptr [r8 + 0x39], r9b ; ret
0x000000000040dc94 : and byte ptr [r9 + 0x5bc03113], cl ; ret
0x0000000000411d51 : and byte ptr [rax + 0x39], cl ; ret
0x0000000000410883 : and byte ptr [rax + 1], cl ; ret
0x0000000000411d4d : and byte ptr [rax - 0x73], cl ; and byte ptr [r8 + 0x39], r9b ; ret
0x00000000004739bc : and byte ptr [rax - 0x75], cl ; jg 0x4739ef ; call r11
0x0000000000473b2a : and byte ptr [rax - 0x75], cl ; jg 0x473b5d ; call r11
0x00000000004132a3 : and byte ptr [rax - 0x75], cl ; push rax ; or dh, dh ; ret 0xf04
0x000000000049144a : and byte ptr [rax - 0x75], cl ; push rsp ; ret 0x4910
0x0000000000413d6f : and byte ptr [rax - 0x77], cl ; and al, 0x10 ; call rdx
0x000000000047ccfb : and byte ptr [rax - 0x77], cl ; ret
0x00000000004132d6 : and byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000444c84 : and byte ptr [rax - 0x77], cl ; sti ; test rax, rax ; je 0x444c98 ; call rax
0x000000000043b2fe : and byte ptr [rax - 0x7d], cl ; ret
0x000000000048feb9 : and byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000040b7e2 : and byte ptr [rax - 1], bh ; pop rbx ; ret
0x000000000048fe8a : and byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000433bd3 : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000437592 : and byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x00000000004976cc : and byte ptr [rax], bh ; stc ; jmp qword ptr [rax + 0x10fff937]
0x00000000004970c8 : and byte ptr [rax], dl ; stc ; inc dword ptr [rax] ; adc bh, cl ; jmp rax
0x00000000004b2220 : and byte ptr [rax], dl ; std ; inc dword ptr [rax] ; adc bh, ch ; jmp rax
0x00000000004bf0de : and byte ptr [rbx + 0x1c80304], al ; ret
0x0000000000405bd8 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004099e3 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004b477d : and byte ptr [rbx + 0xa410204], al ; ret
0x00000000004b29fc : and byte ptr [rbx - 0x44df0003], bh ; std ; jmp qword ptr [rax]
0x00000000004976b4 : and byte ptr [rbx], bh ; stc ; jmp qword ptr [rax + 0x20fff93a]
0x00000000004971a0 : and byte ptr [rbx], cl ; stc ; jmp rax
0x000000000040dc95 : and byte ptr [rcx + 0x5bc03113], cl ; ret
0x0000000000447345 : and byte ptr [rcx + rcx*4 - 0x38], cl ; pop rbx ; ret
0x00000000004976ac : and byte ptr [rcx + rdi*8], bh ; jmp qword ptr [rax + 0x20fff93b]
0x000000000048ca95 : and byte ptr [rcx - 0x2413dbbc], cl ; insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x00000000004b2200 : and byte ptr [rcx], al ; std ; inc dword ptr [rax] ; add edi, ebp ; jmp rax
0x00000000004976c4 : and byte ptr [rcx], bh ; stc ; jmp qword ptr [rax + 0x20fff938]
0x00000000004bd740 : and byte ptr [rcx], bh ; sti ; call qword ptr [rbx]
0x000000000049716c : and byte ptr [rcx], dl ; stc ; inc dword ptr [rax] ; adc edi, ecx ; call rax
0x000000000048efdd : and byte ptr [rdi], cl ; lea ebp, dword ptr [rbx + rdi*8 + 0x2948ffff] ; ret 0x8941
0x000000000045337f : and byte ptr [rdi], cl ; test al, dl ; jmp 0x453387
0x00000000004317d0 : and byte ptr [rdi], cl ; test ebx, ecx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000410241 : and byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8441
0x00000000004976bc : and byte ptr [rdx], bh ; stc ; jmp qword ptr [rax + 0x20fff939]
0x00000000004974a8 : and byte ptr [rip + 0x3c90fff9], bh ; stc ; call qword ptr [rax]
0x0000000000497184 : and byte ptr [rip + 0xf00fff9], cl ; stc ; jmp rax
0x0000000000424d0a : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004bae15 : and byte ptr [rsi + rcx + 0x18], bh ; ret
0x00000000004970e4 : and byte ptr [rsi], cl ; stc ; inc dword ptr [rax] ; adc cl, bh ; jmp rax
0x0000000000463b82 : and ch, 0xf ; je 0x463ba9 ; add rax, 2 ; ret
0x00000000004b2245 : and ch, bh ; call rax
0x0000000000475ada : and ch, byte ptr [rsi + 1] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000463b6d : and cl, 0xf ; je 0x463b95 ; ret
0x0000000000488e90 : and cl, al ; call 0x490ab7bb
0x000000000041419e : and cl, bpl ; ret 0xfff4
0x000000000045142f : and cl, byte ptr [rax - 0x39] ; ret 0xfffe
0x000000000041c80d : and cl, byte ptr [rcx - 0x77] ; ret
0x0000000000444e49 : and cl, byte ptr [rdi] ; xchg al, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x0000000000463d94 : and cl, ch ; ret
0x000000000041419f : and cl, ch ; ret 0xfff4
0x00000000004915ae : and cl, ch ; ret 0xfffb
0x00000000004bea09 : and dh, ah ; jmp qword ptr [rsi]
0x000000000041ce0b : and dh, dh ; ret 0x7504
0x00000000004b6a04 : and dl, bl ; cmc ; jmp qword ptr [rdx]
0x0000000000474c61 : and dword ptr [rax + rax + 0x48], ebp ; add esp, 8 ; jmp rax
0x000000000046dff4 : and dword ptr [rax + rax + 0x5b], ebp ; pop rbp ; jmp rax
0x000000000047357d : and dword ptr [rax + rax - 1], ebp ; loopne 0x4735e4 ; ret
0x0000000000439b20 : and dword ptr [rax - 0x77], ecx ; ret 0x894c
0x000000000046da55 : and dword ptr [rax - 0x7d], ecx ; ret 0x4c08
0x000000000044c6d9 : and dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000004b0b42 : and dword ptr [rax], edx ; jmp qword ptr [rdi]
0x000000000045672a : and dword ptr [rbp - 0x1f0], 0xfffffff0 ; jmp 0x452989
0x000000000040eb66 : and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x00000000004a8638 : and dword ptr [rdi + 0x45], edi ; add byte ptr [rax], al ; ret 0x45
0x00000000004369cb : and dword ptr [rip - 0x9cf0000], eax ; mov rdi, r12 ; call rbx
0x00000000004adbf9 : and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x00000000004b0b41 : and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000004452ab : and eax, 0 ; ret
0x0000000000465383 : and eax, 0x100 ; add al, ch ; ret 0xfa24
0x0000000000401016 : and eax, 0x1002c1c ; ret
0x00000000004379eb : and eax, 0x17 ; add byte ptr [rax], al ; ret
0x0000000000466fbd : and eax, 0x1d894800 ; ret 0x25bb
0x0000000000489135 : and eax, 0x2d0 ; mov eax, esi ; ret
0x00000000004079f2 : and eax, 0x30 ; call rax
0x0000000000433b3d : and eax, 0x3fc00 ; pop rbx ; ret
0x0000000000433b60 : and eax, 0x3fc00 ; ret
0x0000000000433b1c : and eax, 0x3fffc00 ; pop rbx ; ret
0x000000000049089a : and eax, 0x48028b48 ; add esp, 8 ; ret
0x000000000046e3b0 : and eax, 0x48c03100 ; add esp, 8 ; ret
0x000000000046379e : and eax, 0x5c415d5b ; pop r13 ; pop r14 ; ret
0x00000000004668e0 : and eax, 0x5c74800 ; xchg eax, ebx ; ret 0x25
0x0000000000470f0f : and eax, 0x6894800 ; ret
0x0000000000433b90 : and eax, 0x7ff80000 ; ret
0x0000000000437b37 : and eax, 0xc ; cmp eax, 4 ; je 0x437b48 ; ret
0x0000000000437c66 : and eax, 0xc ; pop r12 ; ret
0x000000000046642f : and eax, 0xc8d4800 ; ret 0x840f
0x00000000004096c5 : and eax, 0xe8000000 ; ret 0x19d
0x000000000048aba3 : and eax, 0xf ; cmp al, 0xa ; jne 0x48ab5c ; call rbx
0x00000000004431bc : and eax, 0xf390fffd ; ret
0x00000000004391d6 : and eax, 0xffffffc0 ; or rax, 0xffffffffffffffff ; ret
0x0000000000474f1c : and eax, 2 ; sub eax, 1 ; ret
0x00000000004908ac : and eax, dword ptr [rax - 0x80] ; call qword ptr [rax]
0x0000000000493c18 : and eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000048d0a8 : and eax, dword ptr [rax] ; add word ptr [rdx + rax*2], 1 ; ret
0x0000000000492757 : and eax, dword ptr [rax] ; jne 0x492729 ; add rsp, 8 ; ret
0x0000000000491b96 : and eax, dword ptr [rax] ; mov qword ptr [rsi + 0x28], rax ; pop rbx ; ret
0x000000000048d2b4 : and eax, dword ptr [rax] ; ret
0x0000000000491b95 : and eax, dword ptr cs:[rax] ; mov qword ptr [rsi + 0x28], rax ; pop rbx ; ret
0x00000000004b68e4 : and eax, eax ; cmc ; jmp qword ptr [rdx]
0x0000000000474dd2 : and eax, ecx ; ret
0x0000000000474e51 : and eax, edx ; ret
0x0000000000496fb8 : and ebp, ebp ; clc ; jmp qword ptr [rcx + 0x21fff8ed]
0x000000000040eb67 : and ebp, edi ; pop rbx ; ret
0x00000000004b3851 : and ebp, esi ; call qword ptr [rcx]
0x0000000000437ad2 : and ebx, 0xffffffbb ; cmp r11d, 0xa ; je 0x437ae5 ; ret
0x0000000000496fac : and ebx, ebp ; clc ; jmp qword ptr [rcx]
0x0000000000426285 : and ecx, 0xff ; sub eax, ecx ; ret
0x00000000004259b8 : and ecx, 0xffff ; sub eax, ecx ; ret
0x000000000040f80c : and ecx, dword ptr [rdi] ; mov dh, 0 ; ret
0x000000000046ccd2 : and ecx, dword ptr [rdi] ; xchg byte ptr [rdi], bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004b224d : and edi, ebp ; call rax
0x0000000000496fa8 : and edx, ebp ; clc ; jmp qword ptr [rcx]
0x0000000000496fb0 : and esp, ebp ; clc ; jmp qword ptr [rcx + 0x21fff8ec]
0x0000000000439b1f : and qword ptr [rax - 0x77], rcx ; ret 0x894c
0x00000000004232da : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x000000000041c670 : bsf eax, eax ; add rax, rdi ; ret
0x000000000041c680 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x000000000041c690 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x000000000041c660 : bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x000000000041c5af : bsf eax, eax ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000004234d3 : bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x0000000000419ecd : bsf eax, edx ; ret
0x000000000041a03a : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x00000000004235f0 : bsf rax, rax ; lea rax, qword ptr [rdi + rax] ; ret
0x0000000000419f1a : bsf rax, rdx ; ret
0x0000000000462c77 : bsr eax, eax ; add rax, rdi ; ret
0x0000000000462efb : bsr eax, esi ; add rax, rdi ; ret
0x0000000000462e09 : bsr esi, esi ; lea rax, qword ptr [rcx + rsi] ; ret
0x0000000000462d05 : bsr esi, esi ; lea rax, qword ptr [rdi + rsi] ; ret
0x0000000000462c76 : bsr rax, rax ; add rax, rdi ; ret
0x0000000000462efa : bsr rax, rsi ; add rax, rdi ; ret
0x0000000000462e08 : bsr rsi, rsi ; lea rax, qword ptr [rcx + rsi] ; ret
0x0000000000462d04 : bsr rsi, rsi ; lea rax, qword ptr [rdi + rsi] ; ret
0x000000000040f8af : call 0x100331ff
0x00000000004724ac : call 0x10095dfc
0x000000000046ff90 : call 0x110982e0
0x00000000004b4d88 : call 0x114b42fb
0x00000000004b8348 : call 0x114b7a85
0x00000000004ba818 : call 0x114ba0e4
0x00000000004beba8 : call 0x114be7fc
0x00000000004bec88 : call 0x114be91b
0x00000000004ba2f8 : call 0x124b9baf
0x00000000004411ae : call 0x20694fe
0x00000000004411ae : call 0x2069502
0x000000000044224e : call 0x206a59e
0x000000000044224e : call 0x206a5a2
0x00000000004b4234 : call 0x234b3784
0x00000000004b6854 : call 0x234b5e1a
0x00000000004ba97c : call 0x234ba250
0x00000000004bdc48 : call 0x234bd7b9
0x00000000004b8938 : call 0x244b810c
0x0000000000422c14 : call 0x24b6b76d
0x00000000004440ff : call 0x400322
0x0000000000414ed1 : call 0x411132
0x0000000000409447 : call 0x4156d2
0x000000000045bb4c : call 0x4156d6
0x0000000000400c21 : call 0x41ce42
0x00000000004065f9 : call 0x4228d2
0x000000000048fbfa : call 0x4228d7
0x0000000000400e33 : call 0x433aa6
0x00000000004349dc : call 0x435547
0x000000000043ae51 : call 0x43bab7
0x00000000004796a4 : call 0x475962
0x0000000000456689 : call 0x484566a0
0x0000000000475ad9 : call 0x48c907
0x0000000000412c2b : call 0x49062d7f
0x0000000000487f4d : call 0x490aa874
0x0000000000488460 : call 0x490aad87
0x000000000048897f : call 0x490ab2a6
0x0000000000488e92 : call 0x490ab7b9
0x000000000042ae9a : call 0x4fc1be98
0x000000000042ae99 : call 0x4fc1be99
0x0000000000478ee5 : call 0xffffffff8994601c
0x0000000000487e09 : call 0xffffffff8a0aa730
0x000000000048883f : call 0xffffffff8a0ab166
0x0000000000403313 : call 0xffffffff8b8cf5a3
0x0000000000464af7 : call 0xffffffff8b8f0d87
0x00000000004ae663 : call 0xffffffffaf0d84d9
0x0000000000487a08 : call 0xffffffffc271c350
0x000000000048fa0a : call 0xffffffffc2724652
0x00000000004129fa : call 0xffffffffc2c67204
0x000000000041598e : call 0xffffffffc2c6a198
0x000000000046aa4a : call 0xffffffffc2c9f254
0x00000000004144a9 : call 0xffffffffc2ca8cc2
0x000000000044f660 : call 0xffffffffc2ce3e6b
0x00000000004792f5 : call 0xffffffffc348dbff
0x0000000000408957 : call 0xffffffffc39ccabd
0x0000000000408ef7 : call 0xffffffffc39cd05d
0x000000000046417b : call 0xffffffffc3a282e1
0x00000000004716c1 : call 0xffffffffc3a35827
0x00000000004457bc : call 0xffffffffc3f3670d
0x000000000041d3b7 : call 0xffffffffc4125d08
0x0000000000419e37 : call 0xffffffffc43a2788
0x00000000004bc318 : call 0xffffffffd14bbd9c
0x0000000000402311 : call 0xffffffffec02ac61
0x0000000000449f60 : call qword ptr [r11 + rax*8]
0x00000000004974cb : call qword ptr [rax + 0x10fff938]
0x00000000004974c3 : call qword ptr [rax + 0x10fff939]
0x00000000004974bb : call qword ptr [rax + 0x10fff93a]
0x00000000004974b3 : call qword ptr [rax + 0x10fff93b]
0x00000000004974ab : call qword ptr [rax + 0x10fff93c]
0x000000000049719b : call qword ptr [rax + 0x20fff918]
0x000000000049748f : call qword ptr [rax + 0x20fff941]
0x0000000000497277 : call qword ptr [rax + 0x20fff944]
0x000000000043a12e : call qword ptr [rax + 0x48e9c289]
0x0000000000496ce3 : call qword ptr [rax + 0x60fff824]
0x000000000045955e : call qword ptr [rax + 0x8c28348]
0x000000000049723f : call qword ptr [rax - 0x1f000701]
0x00000000004971eb : call qword ptr [rax - 0x1f000708]
0x0000000000496e2f : call qword ptr [rax - 0x1f000755]
0x00000000004b2e2b : call qword ptr [rax - 0x3d]
0x000000000040f41e : call qword ptr [rax - 0x3f38b8]
0x0000000000496f47 : call qword ptr [rax - 0x4f00072c]
0x000000000040872e : call qword ptr [rax]
0x0000000000401665 : call qword ptr [rbx + 0x10]
0x00000000004b2e47 : call qword ptr [rbx + rax*8 - 0x3c1e0003]
0x0000000000449f61 : call qword ptr [rbx + rax*8]
0x0000000000401c38 : call qword ptr [rbx*8 + 0x6c0ed0]
0x000000000048acd8 : call qword ptr [rbx]
0x0000000000458729 : call qword ptr [rcx]
0x00000000004b28e7 : call qword ptr [rdi]
0x0000000000497323 : call qword ptr [rdx + 0x22fff946]
0x00000000004b2dd3 : call qword ptr [rdx + rax*8 - 3]
0x0000000000497343 : call qword ptr [rdx]
0x00000000004972bf : call qword ptr [rsi + 0x26fff943]
0x000000000045b91d : call qword ptr [rsi]
0x00000000004739c1 : call r11
0x000000000043731c : call r12
0x000000000043b17e : call r14
0x000000000043a3ec : call r15
0x00000000004600f2 : call r8
0x00000000004703f1 : call r9
0x0000000000401011 : call rax
0x0000000000436f7b : call rbx
0x00000000004056ab : call rcx
0x000000000043a3ed : call rdi
0x00000000004111ea : call rdx
0x000000000043b17f : call rsi
0x000000000043731d : call rsp
0x0000000000458f53 : cdq ; cld ; dec dword ptr [rcx - 0x77] ; ret 0x92e9
0x00000000004b03a0 : cdq ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000475139 : cdq ; pop r14 ; idiv r9 ; pop r15 ; ret
0x0000000000406fc3 : cdq ; ret 0x2b
0x00000000004b8e15 : cdq ; std ; jmp qword ptr [rdx]
0x0000000000435b33 : cdq ; sti ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x000000000040f567 : cdq ; sub eax, dword ptr [r8] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000040bfa8 : cdqe ; ret
0x0000000000413470 : clc ; add al, 0x74 ; cmp al, 0x89 ; ret 0xb48b
0x0000000000464829 : clc ; add al, 0xf ; xchg eax, ebp ; ret 0xd7e9
0x0000000000464695 : clc ; add al, 0xf ; xchg eax, ebp ; ret 0xf883
0x000000000044d478 : clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x000000000040af6c : clc ; add cl, byte ptr [rax + 0x39] ; ret
0x0000000000461339 : clc ; add cl, byte ptr [rax + 0x39] ; ret 0x5877
0x0000000000404f9c : clc ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000042372b : clc ; add dword ptr [rdi - 0x27], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000465666 : clc ; add eax, 0x89d02944 ; ret
0x000000000046584d : clc ; add eax, 0xfd02944 ; scasd eax, dword ptr [rdi] ; ret
0x0000000000489625 : clc ; add eax, dword ptr [rcx + 0x5f] ; ret
0x00000000004059a0 : clc ; add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0x70e9
0x000000000041c438 : clc ; add rax, rcx ; ret
0x0000000000410240 : clc ; and byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8441
0x0000000000496ce2 : clc ; call qword ptr [rax + 0x60fff824]
0x000000000049723e : clc ; call qword ptr [rax - 0x1f000701]
0x00000000004971ea : clc ; call qword ptr [rax - 0x1f000708]
0x0000000000496e2e : clc ; call qword ptr [rax - 0x1f000755]
0x0000000000496f46 : clc ; call qword ptr [rax - 0x4f00072c]
0x0000000000496d16 : clc ; call qword ptr [rax]
0x00000000004ba802 : clc ; call qword ptr [rbx]
0x00000000004ba222 : clc ; call qword ptr [rcx]
0x00000000004ba2b2 : clc ; call qword ptr [rdi]
0x00000000004b9f2a : clc ; call qword ptr [rdx]
0x0000000000497006 : clc ; call qword ptr [rsi]
0x0000000000496d06 : clc ; call rax
0x00000000004b96ea : clc ; call rdx
0x00000000004971ed : clc ; clc ; jmp rax
0x00000000004b222d : clc ; cld ; call rax
0x0000000000415dee : clc ; cmovne rax, rcx ; add rsp, 8 ; ret
0x0000000000426229 : clc ; cmp rcx, rax ; jne 0x42625b ; xor eax, eax ; ret
0x0000000000426228 : clc ; cmp rcx, rax ; jne 0x42625c ; xor eax, eax ; ret
0x0000000000492603 : clc ; dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret
0x0000000000401db4 : clc ; dec dword ptr [rax - 0x77] ; ret
0x0000000000413e0c : clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x000000000047ebac : clc ; dec dword ptr [rax - 0x77] ; ret 0x894c
0x00000000004604bf : clc ; dec dword ptr [rax - 0x77] ; ret 0xf40
0x0000000000449a89 : clc ; dec dword ptr [rcx - 0x77] ; ret 0x840f
0x00000000004497ba : clc ; dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x000000000047e91b : clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x0000000000496d12 : clc ; inc dword ptr [rax + 0x2e] ; clc ; call qword ptr [rax]
0x00000000004971f6 : clc ; inc dword ptr [rax - 0x2f000704] ; std ; clc ; jmp qword ptr [rax]
0x0000000000496e3a : clc ; inc dword ptr [rax - 0x2f000751] ; mov al, 0xf8 ; jmp qword ptr [rax]
0x0000000000496e2a : clc ; inc dword ptr [rax - 0x56] ; clc ; call qword ptr [rax - 0x1f000755]
0x0000000000496e0a : clc ; inc dword ptr [rax - 0x63] ; clc ; jmp rax
0x0000000000496dea : clc ; inc dword ptr [rax - 0x70] ; clc ; jmp rax
0x000000000049723a : clc ; inc dword ptr [rax - 2] ; clc ; call qword ptr [rax - 0x1f000701]
0x00000000004971e6 : clc ; inc dword ptr [rax - 9] ; clc ; call qword ptr [rax - 0x1f000708]
0x0000000000496e72 : clc ; inc dword ptr [rax] ; jae 0x496e74 ; call qword ptr [rax]
0x0000000000496d02 : clc ; inc dword ptr [rax] ; sub edi, eax ; call rax
0x000000000046bd23 : clc ; inc dword ptr [rcx - 0x77] ; ret 0x5b74
0x000000000046ba59 : clc ; inc dword ptr [rcx - 0x77] ; ret 0x840f
0x000000000046be79 : clc ; inc dword ptr [rcx - 0x77] ; ret 0x850f
0x000000000046bb6c : clc ; inc dword ptr [rcx - 0x77] ; ret 0x940f
0x0000000000496e4a : clc ; inc eax ; mov ah, 0xf8 ; call qword ptr [rax]
0x0000000000496e62 : clc ; inc eax ; push 0xf8 ; call rax
0x0000000000496cea : clc ; jmp qword ptr [rax]
0x0000000000496f9e : clc ; jmp qword ptr [rbp + 0x51fff8e8]
0x0000000000496fb2 : clc ; jmp qword ptr [rcx + 0x21fff8ec]
0x0000000000496fba : clc ; jmp qword ptr [rcx + 0x21fff8ed]
0x0000000000496fa6 : clc ; jmp qword ptr [rcx]
0x00000000004b935e : clc ; jmp qword ptr [rdx]
0x00000000004931c8 : clc ; jmp qword ptr [rsi + 0xf]
0x00000000004ba35a : clc ; jmp qword ptr [rsi]
0x000000000048f445 : clc ; jmp rax
0x0000000000496fd2 : clc ; jmp rcx
0x0000000000400fcf : clc ; jne 0x400fd8 ; pop rbp ; ret
0x0000000000422a07 : clc ; jne 0x4228e1 ; ret
0x000000000048ffe0 : clc ; leave ; ret
0x00000000004af002 : clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000427d07 : clc ; mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000428677 : clc ; mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000042ac27 : clc ; mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000428877 : clc ; mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000042ab97 : clc ; mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000428a77 : clc ; mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000042ab07 : clc ; mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000427d23 : clc ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000049007b : clc ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000048ca52 : clc ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x0000000000468411 : clc ; nop word ptr [rax + rax] ; ret
0x000000000048ae1b : clc ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000410659 : clc ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004b61dc : clc ; popfq ; cmc ; jmp qword ptr [rdx]
0x0000000000496d0e : clc ; push qword ptr [rax + 0x2d] ; clc ; inc dword ptr [rax + 0x2e] ; clc ; call qword ptr [rax]
0x000000000040190f : clc ; push qword ptr [rax + 0x48] ; add esp, 8 ; ret
0x0000000000496e5e : clc ; push qword ptr [rax - 0x3f000798] ; push 0xf8 ; call rax
0x0000000000496e46 : clc ; push qword ptr [rax - 0x4d] ; clc ; inc eax ; mov ah, 0xf8 ; call qword ptr [rax]
0x0000000000497096 : clc ; push qword ptr [rax] ; int1 ; clc ; call rax
0x0000000000497202 : clc ; push qword ptr [rax] ; stc ; inc eax ; add ecx, edi ; call qword ptr [rax]
0x0000000000496cfe : clc ; push qword ptr [rax] ; sub bh, al ; inc dword ptr [rax] ; sub edi, eax ; call rax
0x000000000040a8aa : clc ; push qword ptr [rbp + 2] ; pop rbx ; ret
0x000000000040ebb0 : clc ; push qword ptr [rbp - 0x1a] ; pop rbx ; ret
0x0000000000437e7b : clc ; push qword ptr [rbp - 7] ; nop ; xor eax, eax ; leave ; ret
0x000000000040eb62 : clc ; push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x0000000000467c0c : clc ; push qword ptr [rdi + rbp - 0x77] ; ret 0xe283
0x0000000000496e6e : clc ; push rax ; jo 0x496e74 ; inc dword ptr [rax] ; jae 0x496e78 ; call qword ptr [rax]
0x0000000000496f52 : clc ; push rax ; xlatb ; clc ; call qword ptr [rax]
0x0000000000493bd8 : clc ; push rbx ; ret
0x000000000040f4b2 : clc ; ret
0x00000000004754aa : clc ; shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x00000000004745ed : clc ; std ; jbe 0x4745fc ; ret
0x0000000000433b3f : cld ; add eax, dword ptr [rax] ; pop rbx ; ret
0x0000000000433b62 : cld ; add eax, dword ptr [rax] ; ret
0x00000000004b228a : cld ; call qword ptr [rax]
0x00000000004b222e : cld ; call rax
0x00000000004bf252 : cld ; call rbx
0x00000000004971f9 : cld ; clc ; call rax
0x0000000000458f54 : cld ; dec dword ptr [rcx - 0x77] ; ret 0x92e9
0x00000000004b2276 : cld ; inc dword ptr [rax - 0x2f000329] ; frndint ; jmp qword ptr [rax]
0x00000000004b21fa : cld ; inc dword ptr [rax - 1] ; cld ; jmp qword ptr [rax]
0x000000000046e548 : cld ; inc dword ptr [rbp + 0x5b0278c0] ; ret
0x0000000000433c00 : cld ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x0000000000433b1e : cld ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000004b2286 : cld ; inc eax ; loopne 0x4b228c ; call qword ptr [rax]
0x00000000004b21fe : cld ; jmp qword ptr [rax]
0x00000000004be756 : cld ; jmp qword ptr [rdx]
0x0000000000428492 : cld ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000428695 : cld ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000428895 : cld ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000428a95 : cld ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004beb74 : cld ; mov ebx, 0x2d480000 ; cld ; call qword ptr [rax]
0x00000000004280c6 : cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042adb6 : cld ; mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004282a6 : cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042ad36 : cld ; mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000428486 : cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042acb6 : cld ; mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000427ee6 : cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042ae36 : cld ; mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000048ca0c : cld ; movss xmm0, dword ptr [rsp - 4] ; ret
0x00000000004b2282 : cld ; push qword ptr [rax - 0x22] ; cld ; inc eax ; loopne 0x4b2290 ; call qword ptr [rax]
0x00000000004b21f6 : cld ; push qword ptr [rax - 3] ; cld ; inc dword ptr [rax - 1] ; cld ; jmp qword ptr [rax]
0x000000000041ce2c : cld ; ret
0x0000000000435a0d : cld ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000435aa0 : cld ; std ; dec dword ptr [rcx - 0x75] ; jge 0x435aae ; call rbx
0x00000000004ae4b6 : cld ; test al, 0x97 ; xchg eax, esp ; ret
0x000000000048e921 : cli ; adc byte ptr [rdi + rcx + 0x44], cl ; ret
0x0000000000489109 : cli ; add byte ptr [rcx - 0xcfd8130], cl ; ret
0x0000000000465781 : cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x000000000047724e : cli ; add cl, byte ptr [rax + 0x29] ; ret 0x8d48
0x000000000043eee9 : cli ; add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax - 0x7d], cl ; ret 0x4806
0x0000000000488e76 : cli ; add ebp, dword ptr [rcx] ; ret 0x294c
0x0000000000487dfa : cli ; add ebp, dword ptr [rcx] ; ret 0x48d
0x00000000004bb442 : cli ; call qword ptr [rdx]
0x00000000004bc31a : cli ; call rax
0x00000000004bb9b2 : cli ; call rcx
0x00000000004bbab2 : cli ; call rsp
0x000000000046b4b5 : cli ; cmp cl, byte ptr [rdi + rcx + 0x44] ; ror dword ptr [rcx - 0x7d], 1 ; ret
0x0000000000468663 : cli ; cmp dh, byte ptr [rcx + rdi*4 - 0xd] ; ret
0x0000000000467df2 : cli ; dec dword ptr [rax + 0x39] ; ret
0x000000000047148d : cli ; dec dword ptr [rax + 0xf] ; ret 0x48c3
0x000000000040b919 : cli ; dec dword ptr [rax + 0xf] ; ret 0xba
0x0000000000467db3 : cli ; dec dword ptr [rax - 0x77] ; ret
0x0000000000403ff9 : cli ; dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd284
0x00000000004bc02a : cli ; jmp qword ptr [rax]
0x00000000004bb206 : cli ; jmp qword ptr [rdx]
0x0000000000493200 : cli ; jmp qword ptr [rsi + 0xf]
0x00000000004bb942 : cli ; jmp rbx
0x00000000004bb3b2 : cli ; jmp rcx
0x00000000004bd07a : cli ; jmp rdi
0x00000000004bc042 : cli ; jmp rdx
0x00000000004bb7a2 : cli ; jmp rsi
0x00000000004bce0a : cli ; jmp rsp
0x00000000004b6d64 : cli ; jrcxz 0x4b6d5f ; jmp qword ptr [rdx]
0x0000000000428898 : cli ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000041c828 : cli ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000405a24 : cli ; or al, byte ptr [rbp + 0xf] ; ret 0x8348
0x000000000043ff35 : cli ; or byte ptr [rdi], 0x94 ; ret 0xb60f
0x00000000004878fd : cli ; or cl, byte ptr [rax + 0x29] ; ret 0x5589
0x00000000004b0921 : cli ; push 0x6e ; ja 0x4b08ae ; ret 0x48f
0x000000000047ea92 : cli ; push qword ptr [rdx + rcx + 0x48] ; mov eax, edx ; pop rbx ; ret
0x00000000004af3c5 : cli ; ret 0xac65
0x0000000000437a5b : cli ; setae al ; ret
0x0000000000435c1e : cli ; std ; dec dword ptr [rax - 0x75] ; jge 0x435c2c ; call rbx
0x0000000000435c03 : cli ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000435c2c : cli ; std ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x0000000000435c10 : cli ; std ; dec dword ptr [rcx - 0x75] ; jge 0x435c1e ; call rbx
0x0000000000419f70 : cli ; test rdx, rdx ; je 0x419f89 ; bsf rax, rdx ; ret
0x0000000000462b0f : cli ; test rdx, rdx ; je 0x462b39 ; bsf rax, rdx ; ret
0x00000000004ae00a : cli ; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x0000000000450c8f : cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000483768 : cmc ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004b3742 : cmc ; call qword ptr [rax]
0x00000000004b3c3a : cmc ; call qword ptr [rbx]
0x00000000004b3852 : cmc ; call qword ptr [rcx]
0x00000000004b5ada : cmc ; call qword ptr [rdi]
0x00000000004b3d8a : cmc ; call qword ptr [rdx]
0x00000000004b606a : cmc ; call qword ptr [rsi]
0x00000000004b7432 : cmc ; call rcx
0x00000000004b7a1a : cmc ; call rdx
0x00000000004b70c5 : cmc ; cmc ; jmp qword ptr [rdx]
0x00000000004b5f0a : cmc ; jmp qword ptr [rax]
0x00000000004b5922 : cmc ; jmp qword ptr [rcx]
0x00000000004b35de : cmc ; jmp qword ptr [rdx]
0x00000000004b4e82 : cmc ; jmp rax
0x00000000004b5792 : cmc ; jmp rbx
0x00000000004b48ba : cmc ; jmp rsp
0x00000000004b0d49 : cmc ; mov ch, 0xab ; ret
0x000000000042ad3a : cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042811e : cmc ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004b29f4 : cmc ; mov edi, 0xbf2afffd ; std ; jmp qword ptr [rax]
0x0000000000490671 : cmc ; movsxd rax, dword ptr [r8 + rdi*4] ; add r8, rax ; jmp r8
0x0000000000432cb3 : cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000460496 : cmc ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000047ebc1 : cmc ; pop rbp ; pop r12 ; ret
0x00000000004adbf7 : cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000432cb7 : cmc ; sub eax, edx ; ret
0x00000000004b0385 : cmc ; xlatb ; ret 0x4e27
0x000000000046491b : cmova esi, eax ; imul esi, edx ; add eax, esi ; ret
0x000000000046491a : cmova esi, r8d ; imul esi, edx ; add eax, esi ; ret
0x000000000040ff49 : cmovae eax, dword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x000000000040ff48 : cmovae rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000490447 : cmovbe eax, ecx ; ret
0x00000000004686b1 : cmove eax, ecx ; ret
0x000000000041c380 : cmove eax, edx ; add rsp, 8 ; ret
0x0000000000434d6d : cmove eax, edx ; jmp 0x434d2d
0x0000000000434c5d : cmove eax, edx ; ret
0x000000000040c975 : cmove eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040c974 : cmove eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000445465 : cmove ecx, esi ; jmp 0x445440
0x00000000004686b0 : cmove rax, r9 ; ret
0x000000000041c37f : cmove rax, rdx ; add rsp, 8 ; ret
0x000000000048d057 : cmove rax, rdx ; ret
0x000000000040dbeb : cmovg eax, ecx ; test rdx, rdx ; jne 0x40dbe9 ; ret
0x000000000046153b : cmovg eax, ecx ; test rdx, rdx ; jne 0x461539 ; ret
0x0000000000400561 : cmovge eax, edx ; jmp 0x400533
0x0000000000415df0 : cmovne eax, ecx ; add rsp, 8 ; ret
0x0000000000460bd1 : cmovne eax, ecx ; ret
0x0000000000417923 : cmovne eax, edx ; ret
0x0000000000460bd0 : cmovne r8, rcx ; ret
0x0000000000415def : cmovne rax, rcx ; add rsp, 8 ; ret
0x0000000000417922 : cmovne rax, rdx ; ret
0x000000000043c29c : cmovns eax, edx ; ret
0x0000000000490328 : cmovs ecx, dword ptr [rcx + 0x1bffe] ; add byte ptr [rax], al ; jmp rax
0x000000000040ebe8 : cmovs edi, dword ptr [rcx] ; int1 ; jne 0x40ebe9 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000004971f8 : cmp ah, 0xf8 ; call rax
0x000000000041440e : cmp al, 0x1e ; mov rax, rsi ; pop rbx ; ret
0x0000000000435c31 : cmp al, 0x24 ; call rbx
0x0000000000463d75 : cmp al, 0x24 ; lea rcx, qword ptr [rax + 1] ; call rbx
0x00000000004af000 : cmp al, 0x46 ; clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000413473 : cmp al, 0x89 ; ret 0xb48b
0x000000000048aba6 : cmp al, 0xa ; jne 0x48ab59 ; call rbx
0x00000000004b6614 : cmp al, 0xa9 ; cmc ; jmp qword ptr [rdx]
0x00000000004471d4 : cmp al, 0xb2 ; jle 0x447196 ; jmp 0x4471a3
0x0000000000490495 : cmp al, 0xcc ; mov rsi, qword ptr [r15] ; call r14
0x00000000004b69bc : cmp al, 0xda ; cmc ; jmp qword ptr [rdx]
0x00000000004974b1 : cmp al, 0xf9 ; call qword ptr [rax + 0x10fff93b]
0x00000000004974ad : cmp al, 0xf9 ; call qword ptr [rax]
0x00000000004976ad : cmp al, 0xf9 ; jmp qword ptr [rax + 0x20fff93b]
0x00000000004976a9 : cmp al, 0xf9 ; jmp qword ptr [rax]
0x000000000049752d : cmp al, 0xf9 ; jmp rdx
0x00000000004bd829 : cmp al, 0xfb ; call rsi
0x00000000004ac990 : cmp al, bl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi], bh ; ret
0x0000000000479a45 : cmp al, byte ptr [rbx] ; add byte ptr [rax - 0x39], cl ; ret 0xffc0
0x0000000000433176 : cmp al, byte ptr [rsi - 1] ; jne 0x43319c ; xor eax, eax ; ret
0x000000000046ef8b : cmp al, ch ; call qword ptr [rcx]
0x0000000000409464 : cmp al, ch ; ret 0
0x000000000041c666 : cmp al, dh ; ret
0x000000000041c665 : cmp al, r14b ; ret
0x0000000000435a92 : cmp bh, ah ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004974c1 : cmp bh, cl ; call qword ptr [rax + 0x10fff939]
0x00000000004974bd : cmp bh, cl ; call qword ptr [rax]
0x00000000004976bd : cmp bh, cl ; jmp qword ptr [rax + 0x20fff939]
0x00000000004976b9 : cmp bh, cl ; jmp qword ptr [rax]
0x000000000049753d : cmp bh, cl ; jmp rdx
0x000000000042309b : cmp bl, dh ; ret
0x0000000000409f03 : cmp byte ptr [r8 - 0x77], cl ; ret 0x348
0x000000000041d1ef : cmp byte ptr [rax + 0xf], cl ; ret
0x000000000041c6a7 : cmp byte ptr [rax + 1], cl ; clc ; ret
0x0000000000435be4 : cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call rbx
0x0000000000470466 : cmp byte ptr [rax - 0x77], cl ; ret
0x0000000000409f04 : cmp byte ptr [rax - 0x77], cl ; ret 0x348
0x000000000045f393 : cmp byte ptr [rax - 0x77], cl ; ret 0xef83
0x00000000004604bc : cmp byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0xf40
0x000000000048e2f4 : cmp byte ptr [rax - 0x7d], cl ; ret
0x000000000041c696 : cmp byte ptr [rax], ah ; ret
0x0000000000417920 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x000000000041c686 : cmp byte ptr [rax], dl ; ret
0x000000000041c685 : cmp byte ptr [rax], r10b ; ret
0x000000000041c695 : cmp byte ptr [rax], r12b ; ret
0x000000000041791f : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000004703eb : cmp byte ptr [rbx + rcx*4 + 0x4c], cl ; and al, 0x30 ; call r9
0x0000000000401daf : cmp byte ptr [rbx], al ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret
0x00000000004889a3 : cmp byte ptr [rcx + 0x29], cl ; ret
0x000000000043cf2d : cmp byte ptr [rcx + 0x41082444], cl ; call rdi
0x000000000043c60e : cmp byte ptr [rcx + 0x41082444], cl ; call rsi
0x00000000004622e0 : cmp byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x000000000047399c : cmp byte ptr [rcx - 0x7d], cl ; ret 0x4908
0x0000000000415709 : cmp byte ptr [rcx], dh ; shr cl, cl ; ret
0x00000000004b3d88 : cmp byte ptr [rdi], bh ; cmc ; call qword ptr [rdx]
0x00000000004256fd : cmp byte ptr [rdi], dl ; ret
0x0000000000426210 : cmp byte ptr [rdi], dl ; ret 0x2373
0x00000000004261f9 : cmp byte ptr [rdi], dl ; ret 0x3a73
0x00000000004261e2 : cmp byte ptr [rdi], dl ; ret 0x5173
0x0000000000424c9e : cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004686ac : cmp byte ptr [rsi - 2], 0x3a ; cmove rax, r9 ; ret
0x00000000004974cd : cmp cl, bh ; call qword ptr [rax]
0x00000000004976cd : cmp cl, bh ; jmp qword ptr [rax + 0x10fff937]
0x00000000004976c9 : cmp cl, bh ; jmp qword ptr [rax]
0x000000000049754d : cmp cl, bh ; jmp rdx
0x00000000004166f1 : cmp cl, byte ptr [rbx + rcx*4 + 0x47] ; or byte ptr [rbp - 0x77], cl ; ret
0x00000000004368aa : cmp cl, byte ptr [rcx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000046b4b6 : cmp cl, byte ptr [rdi + rcx + 0x44] ; ror dword ptr [rcx - 0x7d], 1 ; ret
0x0000000000468664 : cmp dh, byte ptr [rcx + rdi*4 - 0xd] ; ret
0x00000000004b710c : cmp dh, dh ; cmc ; jmp qword ptr [rdx]
0x0000000000476069 : cmp dh, dh ; ret 0x7401
0x0000000000468662 : cmp dl, 0x3a ; je 0x468626 ; ret
0x000000000042a84c : cmp dword ptr [rbx - 1], -1 ; dec dword ptr [rax - 0x7f] ; ret 0x80
0x00000000004471d2 : cmp dword ptr [rdx + r14*4], 0x40 ; jle 0x447198 ; jmp 0x4471a5
0x0000000000437e70 : cmp dword ptr [rdx + rcx*8 - 8], 1 ; sbb eax, 0 ; leave ; ret
0x00000000004471d3 : cmp dword ptr [rdx + rsi*4], 0x40 ; jle 0x447197 ; jmp 0x4471a4
0x0000000000490444 : cmp dword ptr [rsi + 8], edi ; cmovbe eax, ecx ; ret
0x0000000000434d68 : cmp dword ptr [rsp + 0x10], 2 ; cmove eax, edx ; jmp 0x434d32
0x0000000000434c58 : cmp dword ptr [rsp - 0x68], 2 ; cmove eax, edx ; ret
0x0000000000410279 : cmp eax, 0x1000 ; je 0x410291 ; xor eax, eax ; ret
0x000000000047eed6 : cmp eax, 0x245775 ; call rax
0x000000000047edec : cmp eax, 0x24585f ; jmp rax
0x000000000043965c : cmp eax, 0x28b99f ; pop rbx ; ret
0x00000000004974a9 : cmp eax, 0x3c90fff9 ; stc ; call qword ptr [rax]
0x00000000004976a5 : cmp eax, 0x3cb0fff9 ; stc ; jmp qword ptr [rax]
0x0000000000400f8d : cmp eax, 0xe ; mov rbp, rsp ; ja 0x400fa0 ; pop rbp ; ret
0x00000000004745ec : cmp eax, 0xfd ; jbe 0x4745fd ; ret
0x000000000040190e : cmp eax, 0xff ; je 0x40193c ; add rsp, 8 ; ret
0x000000000040eb61 : cmp eax, 0xff ; je 0x40eb72 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x00000000004624fa : cmp eax, 0xff ; je 0x46250b ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000046253e : cmp eax, 0xff ; je 0x46254f ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x000000000040a8a9 : cmp eax, 0xff ; jne 0x40a8b6 ; pop rbx ; ret
0x000000000040ebaf : cmp eax, 0xff ; jne 0x40eba0 ; pop rbx ; ret
0x0000000000437e7a : cmp eax, 0xff ; jne 0x437e81 ; nop ; xor eax, eax ; leave ; ret
0x0000000000434a36 : cmp eax, 0xfffff000 ; ja 0x434a5c ; ret
0x0000000000434a85 : cmp eax, 0xfffff000 ; ja 0x434aac ; ret
0x0000000000434c1a : cmp eax, 0xfffff000 ; ja 0x434c9a ; ret
0x000000000044544a : cmp eax, 0xfffff000 ; ja 0x445472 ; ret
0x00000000004456e1 : cmp eax, 0xfffff000 ; ja 0x4456f2 ; ret
0x0000000000467fb6 : cmp eax, 0xfffff000 ; ja 0x467fdc ; ret
0x000000000046800b : cmp eax, 0xfffff000 ; ja 0x468034 ; ret
0x0000000000468051 : cmp eax, 0xfffff000 ; ja 0x468062 ; ret
0x00000000004682b8 : cmp eax, 0xfffff000 ; ja 0x4682c7 ; ret
0x000000000042372a : cmp eax, 1 ; ja 0x423711 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000437b3a : cmp eax, 4 ; je 0x437b45 ; ret
0x0000000000460bce : cmp eax, dword ptr [rdx + 0x4c] ; cmovne eax, ecx ; ret
0x000000000040f809 : cmp eax, ecx ; jae 0x40f837 ; movzx eax, byte ptr [rax] ; ret
0x0000000000433193 : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x0000000000474c34 : cmp eax, esi ; je 0x474c44 ; ret
0x0000000000437ad6 : cmp ebx, 0xa ; je 0x437ae1 ; ret
0x000000000043900e : cmp ebx, eax ; setne dl ; jmp 0x438ffa
0x00000000004bd741 : cmp ebx, edi ; call qword ptr [rbx]
0x00000000004714c4 : cmp ecx, dword ptr [rsi + rdi] ; jae 0x471488 ; xor eax, eax ; ret
0x000000000042622b : cmp ecx, eax ; jne 0x426259 ; xor eax, eax ; ret
0x00000000004974c9 : cmp ecx, edi ; call qword ptr [rax + 0x10fff938]
0x00000000004974c5 : cmp ecx, edi ; call qword ptr [rax]
0x0000000000410352 : cmp ecx, edi ; je 0x410196 ; ret
0x00000000004976c5 : cmp ecx, edi ; jmp qword ptr [rax + 0x20fff938]
0x00000000004976c1 : cmp ecx, edi ; jmp qword ptr [rax]
0x0000000000497545 : cmp ecx, edi ; jmp rdx
0x000000000040ebea : cmp ecx, esi ; jne 0x40ebe7 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000004974b9 : cmp edi, ecx ; call qword ptr [rax + 0x10fff93a]
0x00000000004974b5 : cmp edi, ecx ; call qword ptr [rax]
0x000000000044efd5 : cmp edi, ecx ; ja 0x44efbf ; mov eax, r8d ; ret
0x00000000004976b5 : cmp edi, ecx ; jmp qword ptr [rax + 0x20fff93a]
0x00000000004976b1 : cmp edi, ecx ; jmp qword ptr [rax]
0x0000000000497535 : cmp edi, ecx ; jmp rdx
0x0000000000489108 : cmp edx, 0 ; mov eax, edx ; jle 0x489119 ; ret
0x000000000047148c : cmp edx, 0xff ; cmovne rax, rdx ; ret
0x000000000047ea91 : cmp edx, 0xff ; je 0x47eaa9 ; mov rax, rdx ; pop rbx ; ret
0x0000000000437ce2 : cmp edx, eax ; jne 0x437cc5 ; ret
0x000000000041cdfc : cmp edx, ecx ; jne 0x41cde5 ; ret
0x0000000000470e17 : cmp edx, ecx ; jne 0x470dcf ; mov eax, dword ptr [rdx] ; ret
0x0000000000437a5a : cmp edx, edi ; setae al ; ret
0x00000000004b0384 : cmp esi, ebp ; xlatb ; ret 0x4e27
0x000000000040055f : cmp esi, ecx ; cmovge eax, edx ; jmp 0x400535
0x000000000046259a : cmp esi, ecx ; jb 0x462597 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000468261 : cmp esi, edx ; ja 0x468275 ; ret
0x0000000000470f0e : cmp esp, dword ptr [rip + 0x6894800] ; ret
0x0000000000490443 : cmp qword ptr [rsi + 8], rdi ; cmovbe eax, ecx ; ret
0x0000000000468661 : cmp r10b, 0x3a ; je 0x468627 ; ret
0x000000000042309a : cmp r11b, r14b ; ret
0x0000000000437ad5 : cmp r11d, 0xa ; je 0x437ae2 ; ret
0x0000000000434a35 : cmp rax, -0x1000 ; ja 0x434a5d ; ret
0x0000000000434a84 : cmp rax, -0x1000 ; ja 0x434aad ; ret
0x0000000000434c19 : cmp rax, -0x1000 ; ja 0x434c9b ; ret
0x0000000000445449 : cmp rax, -0x1000 ; ja 0x445473 ; ret
0x00000000004456e0 : cmp rax, -0x1000 ; ja 0x4456f3 ; ret
0x0000000000467fb5 : cmp rax, -0x1000 ; ja 0x467fdd ; ret
0x000000000046800a : cmp rax, -0x1000 ; ja 0x468035 ; ret
0x0000000000468050 : cmp rax, -0x1000 ; ja 0x468063 ; ret
0x00000000004682b7 : cmp rax, -0x1000 ; ja 0x4682c8 ; ret
0x00000000004745eb : cmp rax, 0xfd ; jbe 0x4745fe ; ret
0x0000000000460bcd : cmp rax, qword ptr [rdx + 0x4c] ; cmovne eax, ecx ; ret
0x000000000040f808 : cmp rax, rcx ; jae 0x40f838 ; movzx eax, byte ptr [rax] ; ret
0x0000000000474c33 : cmp rax, rsi ; je 0x474c45 ; ret
0x00000000004714c3 : cmp rcx, qword ptr [rsi + rdi] ; jae 0x471489 ; xor eax, eax ; ret
0x000000000042622a : cmp rcx, rax ; jne 0x42625a ; xor eax, eax ; ret
0x000000000040ebe9 : cmp rcx, rsi ; jne 0x40ebe8 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000047148b : cmp rdx, 0xff ; cmovne rax, rdx ; ret
0x0000000000437ce1 : cmp rdx, rax ; jne 0x437cc6 ; ret
0x000000000041cdfb : cmp rdx, rcx ; jne 0x41cde6 ; ret
0x000000000041cdfa : cmp rdx, rcx ; jne 0x41cde7 ; ret
0x0000000000470e16 : cmp rdx, rcx ; jne 0x470dd0 ; mov eax, dword ptr [rdx] ; ret
0x0000000000437a59 : cmp rdx, rdi ; setae al ; ret
0x0000000000462599 : cmp rsi, rcx ; jb 0x462598 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000468260 : cmp rsi, rdx ; ja 0x468276 ; ret
0x0000000000483d67 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000484067 : cmpsb byte ptr [rsi], byte ptr [rdi] ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000484f67 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004160de : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000045047a : cmpsb byte ptr [rsi], byte ptr [rdi] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x39], cl ; ret 0xffe0
0x0000000000484c67 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0x83480000 ; ret 0x4910
0x0000000000425ca9 : cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x00000000004b6345 : cmpsb byte ptr [rsi], byte ptr [rdi] ; cmc ; jmp qword ptr [rdx]
0x0000000000400cda : cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x400ce1 ; ret
0x0000000000420736 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000484967 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000484667 : cmpsb byte ptr [rsi], byte ptr [rdi] ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004b28c4 : cmpsb byte ptr [rsi], byte ptr [rdi] ; scasd eax, dword ptr [rdi] ; std ; call qword ptr [rcx]
0x00000000004bd73d : cmpsd dword ptr [rsi], dword ptr [rdi] ; add byte ptr [rax], al ; and byte ptr [rcx], bh ; sti ; call qword ptr [rbx]
0x00000000004b6465 : cmpsd dword ptr [rsi], dword ptr [rdi] ; cmc ; jmp qword ptr [rdx]
0x00000000004aca30 : cmpsd dword ptr [rsi], dword ptr [rdi] ; ret
0x000000000043798c : cmpsd dword ptr [rsi], dword ptr [rdi] ; sub byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000475138 : cqo ; pop r14 ; idiv r9 ; pop r15 ; ret
0x00000000004b8e5c : cqo ; std ; jmp qword ptr [rdx]
0x00000000004003ca : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x0000000000434c5b : cwde ; add cl, byte ptr [rdi] ; ret 0xfc3
0x0000000000439abb : cwde ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000048f708 : cwde ; add dword ptr [rax], eax ; add dh, dh ; ret
0x0000000000439edb : cwde ; call rcx
0x00000000004b7431 : cwde ; cmc ; call rcx
0x00000000004b3f3c : cwde ; cmc ; jmp qword ptr [rdx]
0x00000000004bc718 : cwde ; mov dr1, edx ; jmp rbx
0x0000000000437774 : cwde ; mov rdx, rax ; jmp 0x4377a5
0x0000000000437773 : cwde ; mov rdx, rax ; jmp 0x4377a6
0x0000000000437812 : cwde ; mov rdx, rax ; jmp 0x437847
0x0000000000437811 : cwde ; mov rdx, rax ; jmp 0x437848
0x000000000040ddfc : cwde ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x000000000040bfa9 : cwde ; ret
0x00000000004b83a8 : cwde ; xchg bh, dh ; jmp qword ptr [rbx]
0x00000000004b5684 : cwde ; xchg eax, edi ; cmc ; jmp qword ptr [rdx]
0x00000000004b9a38 : cwde ; xor bh, al ; jmp qword ptr [rdx]
0x0000000000447d83 : dec byte ptr [r15] ; xchg eax, esp ; ret 0xd284
0x000000000042ee91 : dec byte ptr [r8 + 0x29] ; ret 0x280f
0x000000000042ee92 : dec byte ptr [rax + 0x29] ; ret 0x280f
0x000000000048820e : dec byte ptr [rax + 0xf] ; ret 0x3949
0x000000000045fc3a : dec byte ptr [rax + 0xf] ; ret 0x894c
0x0000000000412fed : dec byte ptr [rax - 0x73] ; ret
0x000000000046cc78 : dec byte ptr [rax - 0x77] ; ret
0x000000000047634f : dec byte ptr [rax - 0x77] ; ret 0x8948
0x0000000000447d84 : dec byte ptr [rdi] ; xchg eax, esp ; ret 0xd284
0x00000000004745e9 : dec dword ptr [r8 - 0x7d] ; clc ; std ; jbe 0x474600 ; ret
0x000000000047bf3f : dec dword ptr [rax + 0x21] ; ret 0x948
0x000000000042efd2 : dec dword ptr [rax + 0x29] ; ret 0x280f
0x0000000000470a24 : dec dword ptr [rax + 0x29] ; ret 0x35e9
0x000000000048efe3 : dec dword ptr [rax + 0x29] ; ret 0x8941
0x0000000000475291 : dec dword ptr [rax + 0x29] ; ret 0x8948
0x000000000047deae : dec dword ptr [rax + 0x29] ; ret 0x894c
0x000000000043e98b : dec dword ptr [rax + 0x39] ; ret
0x000000000040b355 : dec dword ptr [rax + 0x39] ; ret 0x830f
0x00000000004709d6 : dec dword ptr [rax + 0x63] ; ret
0x00000000004783da : dec dword ptr [rax + 0x63] ; ret 0x40e9
0x000000000047b120 : dec dword ptr [rax + 0x63] ; ret 0xfae9
0x0000000000471cd6 : dec dword ptr [rax + 0x69] ; ret
0x00000000004b2e83 : dec dword ptr [rax + 0x8fffdd8] ; fdivr st(5) ; call rax
0x0000000000462ef9 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x0000000000488018 : dec dword ptr [rax + 0xf] ; ret 0x3949
0x000000000047148e : dec dword ptr [rax + 0xf] ; ret 0x48c3
0x0000000000407ea4 : dec dword ptr [rax + 0xf] ; ret 0x8348
0x000000000040b91a : dec dword ptr [rax + 0xf] ; ret 0xba
0x000000000046f88f : dec dword ptr [rax + 1] ; int1 ; call rcx
0x0000000000456afc : dec dword ptr [rax + 1] ; ret
0x000000000045736d : dec dword ptr [rax - 0x39] ; ret
0x0000000000434dfe : dec dword ptr [rax - 0x39] ; ret 0xffc0
0x000000000048cce6 : dec dword ptr [rax - 0x39] ; ret 0xffff
0x0000000000439b1c : dec dword ptr [rax - 0x73] ; and qword ptr [rax - 0x77], rcx ; ret 0x894c
0x0000000000402607 : dec dword ptr [rax - 0x73] ; mov ebx, 0x80 ; call rax
0x000000000045e8b7 : dec dword ptr [rax - 0x75] ; add byte ptr [rsi - 0x77], ah ; or cl, ch ; push rbp ; ret
0x0000000000409f00 : dec dword ptr [rax - 0x75] ; cmp byte ptr [r8 - 0x77], cl ; ret 0x348
0x0000000000415d4d : dec dword ptr [rax - 0x75] ; je 0x415d7f ; sub byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x000000000043596d : dec dword ptr [rax - 0x75] ; jge 0x435977 ; call rbx
0x0000000000435c20 : dec dword ptr [rax - 0x75] ; jge 0x435c2a ; call rbx
0x0000000000437317 : dec dword ptr [rax - 0x75] ; jge 0x437322 ; call r12
0x0000000000439ed3 : dec dword ptr [rax - 0x75] ; js 0x439ef9 ; mov qword ptr [rbp - 0x68], rax ; call rcx
0x000000000041cf68 : dec dword ptr [rax - 0x77] ; clc ; ret
0x0000000000492604 : dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret
0x0000000000456911 : dec dword ptr [rax - 0x77] ; lea eax, dword ptr [rax - 0x17000003] ; ret 0xfb75
0x0000000000414ecb : dec dword ptr [rax - 0x77] ; push rsp ; and al, 8 ; call 0x411138
0x0000000000401db5 : dec dword ptr [rax - 0x77] ; ret
0x0000000000468251 : dec dword ptr [rax - 0x77] ; ret 0x2d77
0x000000000044eb23 : dec dword ptr [rax - 0x77] ; ret 0x3ae9
0x000000000041514d : dec dword ptr [rax - 0x77] ; ret 0x3d83
0x00000000004681ae : dec dword ptr [rax - 0x77] ; ret 0x7577
0x0000000000413e0d : dec dword ptr [rax - 0x77] ; ret 0x840f
0x000000000044e262 : dec dword ptr [rax - 0x77] ; ret 0x858b
0x000000000044559c : dec dword ptr [rax - 0x77] ; ret 0x870f
0x000000000047ebad : dec dword ptr [rax - 0x77] ; ret 0x894c
0x000000000044a4b7 : dec dword ptr [rax - 0x77] ; ret 0x8d48
0x000000000046731f : dec dword ptr [rax - 0x77] ; ret 0xa8e9
0x00000000004170d1 : dec dword ptr [rax - 0x77] ; ret 0xcb8
0x000000000046885d : dec dword ptr [rax - 0x77] ; ret 0xe75
0x00000000004604c0 : dec dword ptr [rax - 0x77] ; ret 0xf40
0x000000000044e07d : dec dword ptr [rax - 0x77] ; ret 0xf4a
0x000000000047821d : dec dword ptr [rax - 0x77] ; xor cl, ch ; ret 0xfff0
0x00000000004170b1 : dec dword ptr [rax - 0x7b] ; xlatb ; je 0x4170c8 ; pop rbx ; ret
0x00000000004745ea : dec dword ptr [rax - 0x7d] ; clc ; std ; jbe 0x4745ff ; ret
0x000000000040411a : dec dword ptr [rax - 0x7d] ; ret
0x000000000043d519 : dec dword ptr [rax - 0x7d] ; ret 0x4101
0x000000000044a66e : dec dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000046dc98 : dec dword ptr [rax - 0x7d] ; ret 0x4808
0x000000000048b0e9 : dec dword ptr [rax - 0x7d] ; ret 0x4908
0x000000000045f64d : dec dword ptr [rax - 0x7d] ; ret 0xeb02
0x0000000000400ab3 : dec dword ptr [rax - 0x7d] ; ret 0xeb04
0x0000000000454836 : dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x000000000047068f : dec dword ptr [rax - 0x7d] ; ret 0xf01
0x000000000044534a : dec dword ptr [rax - 0x7f] ; ret 0x200
0x000000000042a850 : dec dword ptr [rax - 0x7f] ; ret 0x80
0x00000000004b2e87 : dec dword ptr [rax] ; fdivr st(5) ; call rax
0x00000000004662f8 : dec dword ptr [rbp - 0x77] ; ret 0xc149
0x00000000004747dc : dec dword ptr [rbx + 0x480c2444] ; add esp, 0x48 ; ret
0x0000000000467afe : dec dword ptr [rbx + 4] ; jne 0x467b24 ; pop rbx ; ret
0x0000000000463d90 : dec dword ptr [rbx - 0x16dfdbbc] ; ret
0x00000000004537c0 : dec dword ptr [rbx - 0x1d77b] ; dec dword ptr [rax - 0x39] ; ret 0xffc0
0x000000000044aab7 : dec dword ptr [rbx - 0x54773] ; dec dword ptr [rcx + 0x39] ; ret 0x850f
0x0000000000466bab : dec dword ptr [rcx + 0x29] ; ret
0x0000000000447abc : dec dword ptr [rcx + 0x39] ; ret 0x6275
0x000000000044960b : dec dword ptr [rcx + 0x39] ; ret 0x850f
0x000000000046f3df : dec dword ptr [rcx + 0xf] ; adc byte ptr [r8 - 0x77], r9b ; ret 0xe3e8
0x0000000000410321 : dec dword ptr [rcx + rcx*4 - 0x40] ; nop dword ptr [rax] ; ret
0x000000000044df16 : dec dword ptr [rcx - 0x39] ; ret
0x0000000000473c6d : dec dword ptr [rcx - 0x3dd63c30] ; mov eax, edx ; ret
0x000000000046f3b2 : dec dword ptr [rcx - 0x75] ; and al, 0x10 ; add rax, qword ptr [rbx] ; call rax
0x00000000004357a5 : dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000435c2e : dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x0000000000435838 : dec dword ptr [rcx - 0x75] ; jge 0x435842 ; call rbx
0x000000000043595f : dec dword ptr [rcx - 0x75] ; jge 0x435969 ; call rbx
0x0000000000435aa2 : dec dword ptr [rcx - 0x75] ; jge 0x435aac ; call rbx
0x0000000000435c12 : dec dword ptr [rcx - 0x75] ; jge 0x435c1c ; call rbx
0x000000000048f3e1 : dec dword ptr [rcx - 0x77] ; ret
0x0000000000453d92 : dec dword ptr [rcx - 0x77] ; ret 0x6e9
0x0000000000449a8a : dec dword ptr [rcx - 0x77] ; ret 0x840f
0x000000000044952e : dec dword ptr [rcx - 0x77] ; ret 0x85c7
0x0000000000453087 : dec dword ptr [rcx - 0x77] ; ret 0x8b48
0x00000000004497bb : dec dword ptr [rcx - 0x77] ; ret 0x8b4c
0x0000000000458f55 : dec dword ptr [rcx - 0x77] ; ret 0x92e9
0x000000000043e35c : dec dword ptr [rcx - 0x7d] ; ret
0x0000000000434bc9 : dec dword ptr [rdi] ; add dword ptr [rax], 0x46 ; add byte ptr [rax], al ; ret
0x0000000000434b09 : dec dword ptr [rdi] ; add eax, 0x46 ; add byte ptr [rax], al ; ret
0x00000000004379e9 : dec dword ptr [rdi] ; and eax, 0x17 ; add byte ptr [rax], al ; ret
0x000000000045f872 : dec dword ptr [rdi] ; mov dh, 0x53 ; or al, 0xf6 ; ret 0x7404
0x000000000043c29b : dec dword ptr [rdi] ; ret 0x41c3
0x000000000040fec8 : dec dword ptr [rdi] ; ret 0x4855
0x000000000044ca92 : dec dword ptr [rdi] ; test ah, bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffe8
0x00000000004588e8 : dec dword ptr [rdi] ; test byte ptr [rsi], bl ; ret 0xffff
0x000000000045941f : dec dword ptr [rdi] ; test dword ptr [rcx], ebp ; ret
0x00000000004574bc : dec dword ptr [rdi] ; test dword ptr [rdx], ebp ; mov ah, 0xff ; dec dword ptr [rax - 0x39] ; ret 0xffc0
0x0000000000433020 : dec dword ptr [rdi] ; test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000457c0c : dec dword ptr [rdi] ; xchg dword ptr [rbx - 0x77000000], esp ; ret 0x348
0x0000000000457a2f : dec dword ptr [rdi] ; xchg dword ptr [rdi - 0x77000000], esp ; ret 0x348
0x0000000000404374 : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0x81e9
0x0000000000403ffa : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xd284
0x000000000046db0e : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xdaf7
0x0000000000464c99 : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0xf748
0x00000000004126b7 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xa0e9
0x000000000040188b : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xc031
0x000000000047e91c : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x0000000000434e55 : dec dword ptr [rdi] ; xor dword ptr [rbx + rax*2], 0 ; ret
0x0000000000434ad5 : dec dword ptr [rdi] ; xor esp, 0x46 ; add byte ptr [rax], al ; ret
0x0000000000459b15 : dec dword ptr [rdx] ; jne 0x459b20 ; ret
0x0000000000494196 : dec dword ptr [rip + 0x22f6c4] ; jne 0x4941c5 ; ret
0x0000000000409280 : dec dword ptr [rsi] ; jne 0x409303 ; mov eax, edx ; pop rbx ; ret
0x00000000004763ed : dec ecx ; ret
0x000000000042efd1 : dec qword ptr [r8 + 0x29] ; ret 0x280f
0x000000000043e3a5 : dec qword ptr [rax - 0x7d] ; ret 0x4101
0x000000000043e35b : dec qword ptr [rcx - 0x7d] ; ret
0x00000000004b338d : div ah ; jmp qword ptr [rdx]
0x00000000004b7154 : div bp ; jmp qword ptr [rdx]
0x000000000048e91d : div byte ptr [rax + rbx - 0x80] ; cli ; adc byte ptr [rdi + rcx + 0x44], cl ; ret
0x0000000000462a02 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x0000000000443221 : div byte ptr [rbp + rax*8 + 0x5b] ; ret
0x00000000004b710d : div ch ; jmp qword ptr [rdx]
0x00000000004b7155 : div ebp ; jmp qword ptr [rdx]
0x0000000000460495 : div ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000047ebc0 : div ebp ; pop rbp ; pop r12 ; ret
0x000000000044efed : div ecx ; add r8d, eax ; mov eax, r8d ; ret
0x0000000000433bee : div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000004b33d5 : div esp ; jmp qword ptr [rdx]
0x0000000000460494 : div rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000047ebbf : div rbp ; pop rbp ; pop r12 ; ret
0x0000000000400567 : enter -0x1401, -0x3a ; ret
0x0000000000433194 : enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x000000000042ee8e : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x280f
0x000000000042efce : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x280f
0x0000000000473245 : enter -0x74b2, 4 ; ret 0xf641
0x0000000000435884 : enter -2, -1 ; mov rdi, qword ptr [r15] ; call rbx
0x00000000004592d1 : enter -3, -1 ; add dword ptr [rcx - 0x77], ecx ; ret 0x12e9
0x000000000040f80a : enter 0x2373, 0xf ; mov dh, 0 ; ret
0x000000000046452a : enter 0x31c3, -0x40 ; nop ; ret
0x0000000000418f4d : enter 0x31c3, -0x40 ; ret
0x0000000000400ab2 : enter 0x48ff, -0x7d ; ret 0xeb04
0x0000000000489ad9 : enter 0x4c20, 0x39 ; ret 0x8188
0x0000000000401eca : enter 0x5d5b, 0x41 ; pop rsp ; pop r13 ; ret
0x00000000004b0b3c : enter 0x8ac, 0x47 ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x0000000000425d56 : enter 0xf66, -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000417971 : enter 0xf66, -0x15 ; ret
0x000000000040dd47 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x000000000040e2f3 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x0000000000408429 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000437e76 : fadd dword ptr [rax] ; leave ; ret
0x000000000040c82b : fadd dword ptr [rcx + 0x5d] ; ret
0x00000000004390a2 : fadd dword ptr [rcx] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000004b3054 : fadd qword ptr [rax] ; add byte ptr [rax], al ; sbb esp, ebx ; hlt ; call qword ptr [rax]
0x0000000000487e07 : fadd st(1) ; call 0xffffffff8a0aa732
0x000000000048883d : fadd st(1) ; call 0xffffffff8a0ab168
0x00000000004a8bd8 : faddp st(2) ; add byte ptr [r8], r8b ; add byte ptr [rax], al ; add byte ptr [rdi], ch ; ret
0x00000000004258a1 : fbld dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004b0178 : fcmovb st(0), st(3) ; ret
0x00000000004bbb18 : fcom dword ptr [rsi - 6] ; call rcx
0x00000000004b7909 : fcomi st(5) ; call qword ptr [rcx]
0x000000000040e2c5 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000408ce5 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x0000000000408dba : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000043559f : fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000004154a4 : fcomp dword ptr [rbx - 0x3d] ; xor eax, eax ; pop rbx ; ret
0x00000000004b0ef9 : fcomp dword ptr [rdx + 0x21] ; ret
0x00000000004af160 : fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x00000000004b6b24 : fcomp st(6) ; cmc ; jmp qword ptr [rdx]
0x0000000000433cc0 : fcompi st(3) ; ret
0x0000000000455fbd : fcos ; dec dword ptr [rax - 0x39] ; ret 0xffc0
0x00000000004552c1 : fcos ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x00000000004bd079 : fdivp st(2) ; jmp rdi
0x00000000004b2285 : fdivp st(4) ; inc eax ; loopne 0x4b228d ; call qword ptr [rax]
0x00000000004b626d : fdivp st(5) ; jmp qword ptr [rdx]
0x00000000004bf251 : fdivr st(4) ; call rbx
0x00000000004ae4b5 : fdivr st(4) ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000004b2e89 : fdivr st(5) ; call rax
0x00000000004b2e85 : fdivr st(5) ; dec dword ptr [rax] ; fdivr st(5) ; call rax
0x0000000000433198 : fdivr st(7) ; ret
0x00000000004b6a4d : fdivrp st(5) ; jmp qword ptr [rdx]
0x0000000000407ea2 : fiadd dword ptr [rbp + 0x450f48ff] ; ret 0x8348
0x0000000000434d67 : fiadd dword ptr [rbx + 0x210247c] ; cmove eax, edx ; jmp 0x434d33
0x0000000000434c57 : fiadd dword ptr [rbx + 0x298247c] ; cmove eax, edx ; ret
0x0000000000435f99 : ficomp word ptr [rbx + 0x5d] ; xor eax, eax ; pop r12 ; ret
0x00000000004b0d46 : ficomp word ptr [rdx - 0x19] ; cmc ; mov ch, 0xab ; ret
0x00000000004bc986 : fidiv dword ptr [rax + 0xd1cfffa] ; sub al, 0xb0 ; cli ; jmp qword ptr [rdx]
0x0000000000438fb5 : fidivr dword ptr [rax + 1] ; ret
0x000000000048c742 : fidivr dword ptr [rdi + 0x23] ; add byte ptr [rcx - 0x75], al ; adc edi, dword ptr [rcx] ; ret 0x850f
0x000000000044efd8 : fild word ptr [rcx + rcx*4 - 0x40] ; ret
0x0000000000410619 : fimul dword ptr [rax + 0x29] ; ret 0x8348
0x0000000000478895 : fimul dword ptr [rax + 0x39] ; ret 0xf48
0x000000000041cf92 : fimul dword ptr [rax - 9] ; ret 0xfff8
0x0000000000474e7f : fimul dword ptr [rcx] ; ret 0xb70f
0x000000000048c062 : fimul dword ptr [rsi - 0x76b7ffdd] ; ret
0x000000000047cd86 : fimul word ptr [rax - 0x77] ; ret
0x00000000004414d7 : fimul word ptr [rax - 0x77] ; ret 0x8948
0x000000000044ea47 : fimul word ptr [rax - 0x7d] ; ret
0x000000000047651e : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x476578
0x000000000048c93e : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x48c998
0x00000000004b660e : fimul word ptr [rbx] ; idiv bh ; sbb al, 0xd ; cmp al, 0xa9 ; cmc ; jmp qword ptr [rdx]
0x00000000004b770b : fimul word ptr [rdx] ; ret
0x000000000040ddb5 : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x000000000040df35 : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x0000000000466288 : fisttp dword ptr [rax + 0x39] ; ret 0x5c89
0x00000000004081c4 : fisttp dword ptr [rax - 0x73] ; add r9b, byte ptr [r9 + rcx*4 - 0x3e] ; jmp 0x4081e8
0x0000000000491d71 : fisttp dword ptr [rax - 0x77] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004759d1 : fisttp dword ptr [rax - 0x77] ; ret
0x0000000000401d12 : fisttp dword ptr [rax - 0x77] ; ret 0x894c
0x000000000043e392 : fisttp dword ptr [rax - 0x7d] ; ret 0x4801
0x000000000047e340 : fisttp dword ptr [rcx - 0x77] ; fld dword ptr [rcx - 0x77] ; ret
0x00000000004759eb : fisttp dword ptr [rcx - 0x77] ; ret 0x8b4a
0x000000000045752f : fisttp dword ptr [rdi] ; test byte ptr [rax + rax - 0x76b40000], ah ; ret 0x894c
0x00000000004775a6 : fisttp qword ptr [rax - 0x77] ; ret
0x0000000000477871 : fisttp qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; imul al ; ret
0x000000000045687e : fisttp qword ptr [rcx - 0x7c09ce35] ; ret
0x00000000004364e7 : fisttp qword ptr [rdx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000435249 : fisttp word ptr [rax - 0x77] ; ret 0x14c
0x0000000000472567 : fisttp word ptr [rax - 0x77] ; ret 0x8948
0x0000000000475a6f : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x00000000004366a5 : fisttp word ptr [rbx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000046eeaa : fisttp word ptr [rcx + 0xf] ; adc byte ptr [r8 - 0x77], r9b ; ret 0x18e8
0x0000000000421a6d : fisttp word ptr [rip - 0x7cb80000] ; ret 0x4910
0x0000000000468231 : fisub dword ptr [rcx + rcx*4 + 0x10] ; or eax, 0xffffffff ; ret
0x000000000045938a : fisub dword ptr [rdi - 0x38b70001] ; ret 0xffc0
0x0000000000425c71 : fisub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004b53ae : fisub word ptr [rcx + 0xd1cfff5] ; in eax, -0x7b ; cmc ; jmp qword ptr [rdx]
0x0000000000425971 : fisub word ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000047e343 : fld dword ptr [rcx - 0x77] ; ret
0x0000000000470597 : fld qword ptr [rax + rax] ; add byte ptr [rax + 0x63], cl ; ret
0x0000000000489c25 : fld qword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8948
0x00000000004af1a1 : fld qword ptr [rsi + 0x32] ; mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x000000000048ca9a : fld xword ptr [rsp - 0x18] ; ret
0x0000000000413ee5 : fldcw word ptr [rdx] ; add byte ptr [rcx], bh ; ret 0xa7e
0x0000000000445379 : fldcw word ptr [rsp - 2] ; ret
0x000000000041c599 : fldenv dword ptr [rsi + 0xf] ; je 0x41c5f6 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000423417 : fldenv dword ptr [rsi + 0xf] ; je 0x423474 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000425cf1 : fldenv dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000041c491 : fldenv dword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000004765c4 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b], 1 ; ret
0x0000000000408245 : fmul dword ptr [rax + 0x39] ; ret
0x000000000040ae4c : fmul dword ptr [rax + 0xf] ; ret
0x0000000000410b50 : fmul dword ptr [rax + 3] ; add byte ptr [r8 + 0x39], r9b ; ret 0xd575
0x000000000044cc31 : fmul dword ptr [rax - 0x39] ; ret 0xffe8
0x000000000046fc98 : fmul dword ptr [rax - 0x7d] ; ret
0x0000000000466b74 : fmul dword ptr [rcx + 0x39] ; ret
0x00000000004559f5 : fmul dword ptr [rcx - 0x77] ; ret
0x000000000046c054 : fmul dword ptr [rsi - 0x7af0ffdb] ; ret
0x000000000047500a : fmul qword ptr [rax + 0xf] ; ret 0x8948
0x0000000000473a6d : fmul qword ptr [rax - 0x75] ; sbb al, 0x24 ; add rsp, 0x30 ; ret
0x0000000000417d09 : fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000041d83f : fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x0000000000479844 : fmul st(4) ; add al, bpl ; ret
0x000000000047c348 : fmulp st(1) ; ret
0x0000000000406ed5 : fpatan ; ret
0x00000000004b227d : frndint ; jmp qword ptr [rax]
0x0000000000425a71 : frstor dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004aee87 : fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x000000000042372e : fstp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004af200 : fstp st(0) ; ret 0xde5d
0x0000000000434cb0 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x0000000000434a5c : fsub dword ptr [rcx + rcx*4 + 2] ; or rax, 0xffffffffffffffff ; ret
0x0000000000445248 : fsub dword ptr [rdi] ; add byte ptr [rbx + rax - 0xd], dh ; ret
0x0000000000425d71 : fsub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042dd04 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000004668df : fsub qword ptr [rip + 0x5c74800] ; xchg eax, ebx ; ret 0x25
0x00000000004335ab : fsub qword ptr [rsi + 0xf] ; jmp 0x433577
0x0000000000425b71 : fsub qword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000417a8c : fsub qword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000004550c2 : fsub st(1), st(0) ; int1 ; ret 0xffff
0x0000000000435882 : fsubp st(0) ; enter -2, -1 ; mov rdi, qword ptr [r15] ; call rbx
0x00000000004bc028 : fsubr dword ptr [rcx - 6] ; jmp qword ptr [rax]
0x0000000000491b94 : fsubr dword ptr [rsi] ; and eax, dword ptr [rax] ; mov qword ptr [rsi + 0x28], rax ; pop rbx ; ret
0x00000000004b9854 : fsubr qword ptr [rax] ; add byte ptr [rax - 0x67], bl ; std ; jmp qword ptr [rdx]
0x00000000004b0ed8 : fucom st(5) ; loop 0x4b0f31 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x000000000047ea57 : fucompi st(0) ; loopne 0x47ea64 ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x0000000000492607 : fucompi st(0) ; ret
0x0000000000471cc8 : fucompi st(0) ; ret 0xffe4
0x0000000000434ad8 : hlt ; add byte ptr [rax], r8b ; ret
0x00000000004be8ec : hlt ; add esp, edi ; jmp qword ptr [rdx]
0x00000000004b305a : hlt ; call qword ptr [rax]
0x00000000004b404c : hlt ; cmc ; jmp qword ptr [rdx]
0x00000000004af288 : hlt ; jmp 0x4af25d
0x00000000004b32b6 : hlt ; jmp qword ptr [rdx]
0x00000000004bea0a : hlt ; jmp qword ptr [rsi]
0x000000000042acba : hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042830e : hlt ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000432ca3 : hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x00000000004b3d6c : hlt ; or eax, 0x3f400000 ; cmc ; call qword ptr [rax]
0x0000000000400fa0 : hlt ; pop rbp ; mov edi, 0x6c2c30 ; jmp rax
0x00000000004bf36c : hlt ; ret
0x00000000004af3c3 : hlt ; stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x0000000000401bdd : hlt ; sub eax, dword ptr [rax] ; xor eax, eax ; ret
0x0000000000432ca7 : hlt ; sub eax, edx ; ret
0x00000000004b575c : hlt ; wait ; cmc ; jmp qword ptr [rdx]
0x0000000000466ba9 : idiv bh ; dec dword ptr [rcx + 0x29] ; ret
0x000000000048f3df : idiv bh ; dec dword ptr [rcx - 0x77] ; ret
0x00000000004763f2 : idiv bh ; dec ecx ; ret
0x00000000004b6ec8 : idiv bh ; sbb al, 0xd ; add ch, al ; cmc ; jmp qword ptr [rdx]
0x00000000004b6a00 : idiv bh ; sbb al, 0xd ; and dl, bl ; cmc ; jmp qword ptr [rdx]
0x00000000004b68e0 : idiv bh ; sbb al, 0xd ; and eax, eax ; cmc ; jmp qword ptr [rdx]
0x00000000004b6850 : idiv bh ; sbb al, 0xd ; call 0x234b5e1e
0x00000000004b61d8 : idiv bh ; sbb al, 0xd ; clc ; popfq ; cmc ; jmp qword ptr [rdx]
0x00000000004b6d60 : idiv bh ; sbb al, 0xd ; cli ; jrcxz 0x4b6d63 ; jmp qword ptr [rdx]
0x00000000004b6610 : idiv bh ; sbb al, 0xd ; cmp al, 0xa9 ; cmc ; jmp qword ptr [rdx]
0x00000000004b69b8 : idiv bh ; sbb al, 0xd ; cmp al, 0xda ; cmc ; jmp qword ptr [rdx]
0x00000000004b7108 : idiv bh ; sbb al, 0xd ; cmp dh, dh ; cmc ; jmp qword ptr [rdx]
0x00000000004b7078 : idiv bh ; sbb al, 0xd ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cmc ; jmp qword ptr [rdx]
0x00000000004b7150 : idiv bh ; sbb al, 0xd ; div bp ; jmp qword ptr [rdx]
0x00000000004b7228 : idiv bh ; sbb al, 0xd ; div ebp ; jmp qword ptr [rdx]
0x00000000004b6b20 : idiv bh ; sbb al, 0xd ; fcomp st(6) ; cmc ; jmp qword ptr [rdx]
0x00000000004b6df0 : idiv bh ; sbb al, 0xd ; in al, -0xb ; jmp qword ptr [rdx]
0x00000000004b6a48 : idiv bh ; sbb al, 0xd ; int1 ; fdivrp st(5) ; jmp qword ptr [rdx]
0x00000000004b6fa0 : idiv bh ; sbb al, 0xd ; jp 0x4b6f97 ; cmc ; jmp qword ptr [rdx]
0x00000000004b6bf8 : idiv bh ; sbb al, 0xd ; loope 0x4b6be6 ; cmc ; jmp qword ptr [rdx]
0x00000000004b6c40 : idiv bh ; sbb al, 0xd ; loope 0x4b6c43 ; jmp qword ptr [rdx]
0x00000000004b6c88 : idiv bh ; sbb al, 0xd ; mov bh, 0xe1 ; cmc ; jmp qword ptr [rdx]
0x00000000004b64a8 : idiv bh ; sbb al, 0xd ; mov dh, 0xa8 ; cmc ; jmp qword ptr [rdx]
0x00000000004b6388 : idiv bh ; sbb al, 0xd ; movsb byte ptr [rdi], byte ptr [rsi] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cmc ; jmp qword ptr [rdx]
0x00000000004b6bb0 : idiv bh ; sbb al, 0xd ; movsd dword ptr [rdi], dword ptr [rsi] ; loope 0x4b6bb3 ; jmp qword ptr [rdx]
0x00000000004b6e38 : idiv bh ; sbb al, 0xd ; mul ebp ; cmc ; jmp qword ptr [rdx]
0x00000000004b6970 : idiv bh ; sbb al, 0xd ; outsd dx, dword ptr [rsi] ; xlatb ; cmc ; jmp qword ptr [rdx]
0x00000000004b6cd0 : idiv bh ; sbb al, 0xd ; pop rax ; loop 0x4b6cd3 ; jmp qword ptr [rdx]
0x00000000004b6538 : idiv bh ; sbb al, 0xd ; push 0xa9 ; cmc ; jmp qword ptr [rdx]
0x00000000004b6460 : idiv bh ; sbb al, 0xd ; repe cmpsd dword ptr [rsi], dword ptr [rdi] ; cmc ; jmp qword ptr [rdx]
0x00000000004b6ad8 : idiv bh ; sbb al, 0xd ; retf ; fdivrp st(5) ; jmp qword ptr [rdx]
0x00000000004b6190 : idiv bh ; sbb al, 0xd ; sahf ; cmc ; jmp qword ptr [rdx]
0x00000000004b6b68 : idiv bh ; sbb al, 0xd ; salc ; loope 0x4b6b6b ; jmp qword ptr [rdx]
0x00000000004b6f58 : idiv bh ; sbb al, 0xd ; sbb ecx, ebp ; cmc ; jmp qword ptr [rdx]
0x00000000004b66a0 : idiv bh ; sbb al, 0xd ; scasd eax, dword ptr [rdi] ; mov dh, 0xf5 ; jmp qword ptr [rdx]
0x00000000004b6da8 : idiv bh ; sbb al, 0xd ; shl bl, cl ; cmc ; jmp qword ptr [rdx]
0x00000000004b62f8 : idiv bh ; sbb al, 0xd ; sub al, 0xa5 ; cmc ; jmp qword ptr [rdx]
0x00000000004b6f10 : idiv bh ; sbb al, 0xd ; sub eax, ebp ; cmc ; jmp qword ptr [rdx]
0x00000000004b6fe8 : idiv bh ; sbb al, 0xd ; test al, 0xea ; cmc ; jmp qword ptr [rdx]
0x00000000004b63d0 : idiv bh ; sbb al, 0xd ; test al, 0xf5 ; jmp qword ptr [rdx]
0x00000000004b6d18 : idiv bh ; sbb al, 0xd ; xchg eax, esi ; jrcxz 0x4b6d1b ; jmp qword ptr [rdx]
0x00000000004b66e8 : idiv bh ; sbb al, 0xd ; xor al, 0xb7 ; cmc ; jmp qword ptr [rdx]
0x00000000004b70c0 : idiv bh ; sbb al, 0xd ; xor ch, 0xf5 ; jmp qword ptr [rdx]
0x000000000043c296 : idiv byte ptr [rax - 1] ; cmovns eax, edx ; ret
0x0000000000401cf6 : idiv byte ptr [rdi + 1] ; call rax
0x00000000004971e9 : idiv eax ; call qword ptr [rax - 0x1f000708]
0x000000000047ebab : idiv eax ; dec dword ptr [rax - 0x77] ; ret 0x894c
0x000000000047513d : idiv ecx ; pop r15 ; ret
0x00000000004763eb : idiv edi ; dec ecx ; ret
0x00000000004b8ea0 : idiv edi ; sbb al, 0xd ; ret 0xf7ec
0x000000000047513c : idiv r9 ; pop r15 ; ret
0x0000000000477877 : imul al ; ret
0x0000000000422a54 : imul byte ptr [rcx] ; add byte ptr [rcx + 0x39], cl ; ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x0000000000475d67 : imul eax ; ret
0x000000000044be88 : imul eax ; ret 0xfc91
0x000000000045a496 : imul eax ; test dword ptr fs:[rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xb848
0x00000000004be7e4 : imul eax, dword ptr [rcx], -4 ; jmp qword ptr [rdx]
0x0000000000431801 : imul eax, dword ptr [rcx], 0 ; add dh, dh ; ret 0x7502
0x0000000000410495 : imul ebx, dword ptr [rax], 0x48 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004b8f12 : imul ecx, dword ptr [rsi], 0x10 ; add dword ptr [rdx], 0x59 ; ret
0x000000000046491e : imul esi, edx ; add eax, esi ; ret
0x0000000000430c7c : imul esp, dword ptr [rsi + 0xf], 0x74 ; ret 0xff3
0x0000000000414008 : in al, -0x18 ; ret 0xffcb
0x00000000004b2a98 : in al, -0x3c ; std ; inc dword ptr [rdx + rax*8] ; std ; jmp rsp
0x00000000004b2a84 : in al, -0x3c ; std ; jmp rsp
0x00000000004b2a48 : in al, -0x40 ; std ; jmp rsp
0x000000000048ed9b : in al, -0x7d ; call qword ptr [rcx]
0x00000000004b6df5 : in al, -0xb ; jmp qword ptr [rdx]
0x000000000042ac9a : in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437315 : in al, -1 ; dec dword ptr [rax - 0x75] ; jge 0x437324 ; call r12
0x0000000000419e2c : in al, 0x74 ; or dword ptr [rax - 1], ecx ; ret 0xc148
0x00000000004bcddf : in al, 0xa ; ret
0x0000000000436580 : in al, 0xc ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000040037a : in al, dx ; add byte ptr [r15], cl ; xchg eax, esp ; ret
0x00000000004071c4 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0x308
0x00000000004b4184 : in al, dx ; add dword ptr [rax], eax ; add byte ptr [rax + 0x46], bh ; cmc ; call qword ptr [rax]
0x00000000004196d0 : in al, dx ; add eax, 0x83480000 ; ret 0xeb10
0x00000000004b6c86 : in al, dx ; add eax, 0xd1cfff6 ; mov bh, 0xe1 ; cmc ; jmp qword ptr [rdx]
0x0000000000497075 : in al, dx ; clc ; call rax
0x0000000000496fb1 : in al, dx ; clc ; jmp qword ptr [rcx + 0x21fff8ec]
0x0000000000496fb5 : in al, dx ; clc ; jmp qword ptr [rcx]
0x0000000000476068 : in al, dx ; cmp dh, dh ; ret 0x7401
0x000000000048f707 : in al, dx ; cwde ; add dword ptr [rax], eax ; add dh, dh ; ret
0x000000000048ca99 : in al, dx ; fld xword ptr [rsp - 0x18] ; ret
0x00000000004b2edc : in al, dx ; int1 ; std ; jmp qword ptr [rax]
0x0000000000468076 : in al, dx ; jo 0x468072 ; ret 0x4840
0x000000000042830a : in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042b09a : in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000462837 : in al, dx ; or al, ch ; ret 1
0x0000000000415afa : in al, dx ; or byte ptr [rax + 0x39], cl ; ret 0x870f
0x000000000041463a : in al, dx ; or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x00000000004b8764 : in al, dx ; push rdi ; add byte ptr [rax], al ; ret 0xfff7
0x0000000000464176 : in al, dx ; sbb byte ptr [rbx + 0x48], 0x29 ; call 0xffffffffc3a282e6
0x0000000000463c5f : in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000004bb1bd : in al, dx ; stc ; jmp qword ptr [rdx]
0x00000000004b091e : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4b08b1 ; ret 0x48f
0x00000000004b091d : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4b08b2 ; ret 0x48f
0x00000000004b6064 : in al, dx ; xor byte ptr [rax], al ; add al, cl ; pushfq ; cmc ; call qword ptr [rsi]
0x0000000000409525 : in al, dx ; xor byte ptr [rcx - 0x77], cl ; ret 0xb941
0x00000000004b0ed9 : in eax, -0x1e ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000004b53b4 : in eax, -0x7b ; cmc ; jmp qword ptr [rdx]
0x00000000004b6e3d : in eax, -0xb ; jmp qword ptr [rdx]
0x000000000042ad1a : in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000042294a : in eax, -0xd ; ret
0x0000000000453259 : in eax, -1 ; dec dword ptr [rax - 0x39] ; ret 0xffc0
0x0000000000454834 : in eax, -1 ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x00000000004b03a1 : in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x000000000040ce22 : in eax, 0 ; adc byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004af023 : in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x0000000000413b5a : in eax, 0x2a ; add byte ptr [rax - 0x77], cl ; ret 0x58b
0x000000000041ceba : in eax, 0x48 ; mov eax, edi ; ret
0x0000000000447232 : in eax, 0x48 ; mov eax, esi ; ret
0x00000000004b4be4 : in eax, 0x66 ; cmc ; jmp qword ptr [rdx]
0x00000000004ae2b9 : in eax, 0x6a ; mov eax, 0x45155e93 ; ret 0x591c
0x0000000000463b83 : in eax, 0xf ; je 0x463ba8 ; add rax, 2 ; ret
0x00000000004065f4 : in eax, 3 ; mov rdx, r12 ; call 0x4228d7
0x000000000046642e : in eax, dx ; and eax, 0xc8d4800 ; ret 0x840f
0x000000000049707d : in eax, dx ; clc ; call rax
0x0000000000496fb9 : in eax, dx ; clc ; jmp qword ptr [rcx + 0x21fff8ed]
0x0000000000496fbd : in eax, dx ; clc ; jmp qword ptr [rcx]
0x000000000049260f : in eax, dx ; jne 0x4925f1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004334c2 : in eax, dx ; lea rax, qword ptr [rcx - 1] ; ret
0x000000000042811a : in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042b11a : in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000482f70 : in eax, dx ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000048ace2 : in eax, dx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004927f2 : in eax, dx ; pop rbx ; ret
0x000000000040dbf2 : in eax, dx ; ret
0x0000000000433612 : in eax, dx ; sub rax, 1 ; ret
0x000000000041ce25 : inc bl ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000049711b : inc dword ptr [rax + 0x10fff919] ; or al, 0xf9 ; call rax
0x000000000049714f : inc dword ptr [rax + 0x13] ; stc ; call qword ptr [rax]
0x0000000000496d13 : inc dword ptr [rax + 0x2e] ; clc ; call qword ptr [rax]
0x000000000049749b : inc dword ptr [rax + 0x40] ; stc ; jmp rax
0x0000000000497283 : inc dword ptr [rax + 0x43] ; stc ; call rax
0x00000000004970c3 : inc dword ptr [rax + 0xe] ; stc ; jmp qword ptr [rax]
0x00000000004b221b : inc dword ptr [rax + 0xe] ; std ; jmp qword ptr [rax]
0x0000000000497167 : inc dword ptr [rax + 0xf] ; stc ; jmp qword ptr [rax]
0x000000000045aa46 : inc dword ptr [rax - 0x10b143] ; jmp qword ptr [rax]
0x00000000004b2277 : inc dword ptr [rax - 0x2f000329] ; frndint ; jmp qword ptr [rax]
0x000000000049724b : inc dword ptr [rax - 0x2f0006fd] ; add al, 0xf9 ; jmp qword ptr [rax]
0x00000000004971f7 : inc dword ptr [rax - 0x2f000704] ; std ; clc ; jmp qword ptr [rax]
0x0000000000496e3b : inc dword ptr [rax - 0x2f000751] ; mov al, 0xf8 ; jmp qword ptr [rax]
0x0000000000447da1 : inc dword ptr [rax - 0x4dd43] ; jmp qword ptr [rax]
0x0000000000448806 : inc dword ptr [rax - 0x4df43] ; jmp qword ptr [rax]
0x0000000000496e2b : inc dword ptr [rax - 0x56] ; clc ; call qword ptr [rax - 0x1f000755]
0x0000000000496e0b : inc dword ptr [rax - 0x63] ; clc ; jmp rax
0x0000000000496deb : inc dword ptr [rax - 0x70] ; clc ; jmp rax
0x0000000000497117 : inc dword ptr [rax - 0x7f0006e9] ; sbb ecx, edi ; call qword ptr [rax]
0x00000000004b21fb : inc dword ptr [rax - 1] ; cld ; jmp qword ptr [rax]
0x000000000049723b : inc dword ptr [rax - 2] ; clc ; call qword ptr [rax - 0x1f000701]
0x00000000004971e7 : inc dword ptr [rax - 9] ; clc ; call qword ptr [rax - 0x1f000708]
0x00000000004b2223 : inc dword ptr [rax] ; adc bh, ch ; jmp rax
0x00000000004970cb : inc dword ptr [rax] ; adc bh, cl ; jmp rax
0x00000000004970e7 : inc dword ptr [rax] ; adc cl, bh ; jmp rax
0x000000000049716f : inc dword ptr [rax] ; adc edi, ecx ; call rax
0x000000000045dfe4 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x22e9
0x000000000045d165 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0xa1e9
0x0000000000426287 : inc dword ptr [rax] ; add byte ptr [rax], al ; sub eax, ecx ; ret
0x00000000004b2203 : inc dword ptr [rax] ; add edi, ebp ; jmp rax
0x0000000000496e73 : inc dword ptr [rax] ; jae 0x496e73 ; call qword ptr [rax]
0x00000000004554d8 : inc dword ptr [rax] ; jmp 0x4517bc
0x000000000049785b : inc dword ptr [rax] ; popfq ; stc ; call qword ptr [rax]
0x000000000049787f : inc dword ptr [rax] ; sahf ; stc ; jmp qword ptr [rax]
0x000000000049748b : inc dword ptr [rax] ; stc ; call qword ptr [rax + 0x20fff941]
0x0000000000497273 : inc dword ptr [rax] ; stc ; call qword ptr [rax + 0x20fff944]
0x0000000000496d03 : inc dword ptr [rax] ; sub edi, eax ; call rax
0x00000000004977df : inc dword ptr [rax] ; xchg eax, edi ; stc ; call qword ptr [rax]
0x000000000049779f : inc dword ptr [rax] ; xchg eax, esi ; stc ; call qword ptr [rax]
0x000000000046e549 : inc dword ptr [rbp + 0x5b0278c0] ; ret
0x00000000004b2e43 : inc dword ptr [rbp + rdi*4 - 0x3c6b0003] ; std ; jmp rcx
0x0000000000404370 : inc dword ptr [rbx + 0xfff0878] ; xchg eax, ebp ; ret 0x81e9
0x000000000045a255 : inc dword ptr [rbx - 0x110b43] ; jmp qword ptr [rax]
0x00000000004135ce : inc dword ptr [rbx - 0x73] ; sub eax, 0x448d48fe ; ret
0x000000000046bd21 : inc dword ptr [rbx - 0x76be0008] ; ret 0x5b74
0x000000000046ba57 : inc dword ptr [rbx - 0x76be0008] ; ret 0x840f
0x000000000046be77 : inc dword ptr [rbx - 0x76be0008] ; ret 0x850f
0x000000000046bb6a : inc dword ptr [rbx - 0x76be0008] ; ret 0x940f
0x000000000045f9a7 : inc dword ptr [rbx - 0x7bf09608] ; ret 0xfffe
0x000000000044bbbc : inc dword ptr [rbx - 0x7bf0fe40] ; pop rdi ; ret
0x0000000000443be4 : inc dword ptr [rbx - 0x7cb7fe40] ; ret 0x8308
0x0000000000433c01 : inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x0000000000433b1f : inc dword ptr [rbx] ; pop rbx ; ret
0x000000000045bb2f : inc dword ptr [rcx + 0x29] ; ret 0x3945
0x000000000045a59d : inc dword ptr [rcx + 0x39] ; ret
0x0000000000409d99 : inc dword ptr [rcx + 0x5f] ; ret
0x000000000040c973 : inc dword ptr [rcx + 0xf] ; les r11d, ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000004b2a43 : inc dword ptr [rcx + rax*8 - 0x3f1b0003] ; std ; jmp rsp
0x0000000000473c30 : inc dword ptr [rcx + rcx*4 - 0x3e] ; sub edx, ecx ; mov eax, edx ; ret
0x0000000000473242 : inc dword ptr [rcx - 0x77] ; enter -0x74b2, 4 ; ret 0xf641
0x000000000046bde2 : inc dword ptr [rcx - 0x77] ; ret 0x3e9
0x000000000046bd24 : inc dword ptr [rcx - 0x77] ; ret 0x5b74
0x000000000046ba5a : inc dword ptr [rcx - 0x77] ; ret 0x840f
0x000000000046be7a : inc dword ptr [rcx - 0x77] ; ret 0x850f
0x000000000046bb6d : inc dword ptr [rcx - 0x77] ; ret 0x940f
0x000000000044d65f : inc dword ptr [rcx - 0x77] ; sahf ; or byte ptr [rax - 0x7d], cl ; ret
0x00000000004411c2 : inc dword ptr [rcx - 0x78] ; add rcx, qword ptr [r9 + 0x39] ; ret
0x00000000004c01b5 : inc dword ptr [rcx] ; or ebp, edx ; add dword ptr [rbx], eax ; ret
0x000000000046bbda : inc dword ptr [rdi + rcx - 0x4a] ; je 0x46bc0d ; sub byte ptr [rcx - 0x77], al ; ret 0x8341
0x000000000048c806 : inc dword ptr [rdx + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049732f : inc dword ptr [rdx + 0x45] ; stc ; call rdx
0x00000000004b2a8b : inc dword ptr [rdx + rax*8] ; std ; inc dword ptr [rdx + rax*8] ; std ; jmp rsp
0x00000000004b2a73 : inc dword ptr [rdx + rax*8] ; std ; jmp rsp
0x00000000004b2e27 : inc dword ptr [rdx - 0x3d] ; std ; call qword ptr [rax - 0x3d]
0x000000000042224d : inc dword ptr [rip - 0x7cb80000] ; ret 0x4910
0x00000000004972cb : inc dword ptr [rsi + 0x42] ; stc ; call rsi
0x00000000004972bb : inc dword ptr [rsi] ; stc ; call qword ptr [rsi + 0x26fff943]
0x00000000004973f7 : inc dword ptr [rsp + rax*2 - 7] ; call rsp
0x0000000000497207 : inc eax ; add ecx, edi ; call qword ptr [rax]
0x00000000004b2287 : inc eax ; loopne 0x4b228b ; call qword ptr [rax]
0x0000000000496e4b : inc eax ; mov ah, 0xf8 ; call qword ptr [rax]
0x0000000000497877 : inc eax ; popfq ; stc ; jmp rax
0x0000000000496e63 : inc eax ; push 0xf8 ; call rax
0x0000000000497853 : inc eax ; pushfq ; stc ; jmp rax
0x0000000000497897 : inc eax ; sahf ; stc ; jmp rax
0x0000000000497827 : inc eax ; wait ; stc ; call rax
0x00000000004977cf : inc eax ; xchg eax, esi ; stc ; call rax
0x0000000000460bdc : inc ebx ; nop ; xor eax, eax ; ret
0x0000000000433199 : inc ebx ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000004b2e13 : inc ebx ; ret
0x00000000004b2bcf : inc esp ; ret
0x0000000000473241 : inc qword ptr [rcx - 0x77] ; enter -0x74b2, 4 ; ret 0xf641
0x00000000004411c1 : inc qword ptr [rcx - 0x78] ; add rcx, qword ptr [r9 + 0x39] ; ret
0x000000000040f544 : insb byte ptr [rdi], dx ; add al, byte ptr [rax] ; add bl, dh ; ret
0x000000000047357e : insb byte ptr [rdi], dx ; add bh, bh ; loopne 0x4735e3 ; ret
0x0000000000402c57 : insb byte ptr [rdi], dx ; add bh, bh ; sar dword ptr [rdi + 0x6c30c0], cl ; call rbx
0x00000000004b96e4 : insb byte ptr [rdi], dx ; add byte ptr [eax], al ; test al, 0x16 ; clc ; call rdx
0x0000000000401c3d : insb byte ptr [rdi], dx ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000046dff5 : insb byte ptr [rdi], dx ; add byte ptr [rbx + 0x5d], bl ; jmp rax
0x0000000000413368 : insb byte ptr [rdi], dx ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x8348
0x000000000041493a : insb byte ptr [rdi], dx ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x948
0x000000000048ca9b : insb byte ptr [rdi], dx ; and al, 0xe8 ; ret
0x000000000044537a : insb byte ptr [rdi], dx ; and al, 0xfe ; ret
0x0000000000496e69 : insb byte ptr [rdi], dx ; clc ; jmp rax
0x00000000004b0ede : insb byte ptr [rdi], dx ; insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x00000000004bde21 : insb byte ptr [rdi], dx ; sti ; call qword ptr [rax]
0x00000000004827f0 : insd dword ptr [rdi], dx ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004836f0 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004635c5 : insd dword ptr [rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004b4624 : insd dword ptr [rdi], dx ; cmc ; jmp qword ptr [rdx]
0x00000000004b0edf : insd dword ptr [rdi], dx ; pop rbx ; ret 0x6f9
0x00000000004af28d : insd dword ptr [rdi], dx ; ret 0xb9b9
0x00000000004b019f : insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000004bc51c : insd dword ptr [rdi], dx ; xchg eax, edi ; cli ; jmp qword ptr [rdx]
0x00000000004b0367 : int 0x80
0x0000000000474eed : int 0xff
0x000000000044efee : int1 ; add r8d, eax ; mov eax, r8d ; ret
0x000000000041cc8e : int1 ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046f892 : int1 ; call rcx
0x0000000000497099 : int1 ; clc ; call rax
0x0000000000496fd9 : int1 ; clc ; jmp qword ptr [rcx]
0x00000000004b6a4c : int1 ; fdivrp st(5) ; jmp qword ptr [rdx]
0x000000000040ebeb : int1 ; jne 0x40ebe6 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000004643eb : int1 ; lea rsi, qword ptr [rsp + 0x30] ; mov rdi, r12 ; call rbx
0x0000000000417096 : int1 ; mov eax, 0x16 ; je 0x4170a8 ; ret
0x000000000042ab0b : int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004288df : int1 ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000432c73 : int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000433bef : int1 ; pop rbx ; mov eax, eax ; ret
0x0000000000437a82 : int1 ; pop rdx ; pop r10 ; ret
0x00000000004b08b6 : int1 ; ret 0x5803
0x00000000004550c4 : int1 ; ret 0xffff
0x00000000004b2edd : int1 ; std ; jmp qword ptr [rax]
0x0000000000432c77 : int1 ; sub eax, edx ; ret
0x0000000000400f93 : ja 0x400f9a ; pop rbp ; ret
0x000000000041cd78 : ja 0x41cd83 ; ret
0x00000000004228d8 : ja 0x4228d2 ; ret 0x7401
0x000000000042372d : ja 0x42370e ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000430dc7 : ja 0x430dcd ; ret
0x0000000000430de3 : ja 0x430ded ; mov dword ptr [rdi], ecx ; ret
0x0000000000430e24 : ja 0x430e33 ; mov qword ptr [rdi], rcx ; ret
0x0000000000430ea9 : ja 0x430ebd ; ret
0x0000000000430eff : ja 0x430f17 ; ret
0x0000000000430f81 : ja 0x430f9d ; ret
0x00000000004313e7 : ja 0x4313f1 ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000431403 : ja 0x431411 ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000431454 : ja 0x431467 ; mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000431539 : ja 0x431551 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000004315af : ja 0x4315cb ; lea rax, qword ptr [rdi + 0x14] ; ret
0x0000000000431631 : ja 0x431651 ; lea rax, qword ptr [rdi + 0x18] ; ret
0x0000000000434a3b : ja 0x434a57 ; ret
0x0000000000434a8a : ja 0x434aa7 ; ret
0x0000000000434c1f : ja 0x434c95 ; ret
0x000000000044544f : ja 0x44546d ; ret
0x00000000004456e6 : ja 0x4456ed ; ret
0x00000000004456e6 : ja 0x4456f0 ; ret
0x000000000044efd7 : ja 0x44efbd ; mov eax, r8d ; ret
0x0000000000460322 : ja 0x460386 ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x0000000000467fbb : ja 0x467fd7 ; ret
0x0000000000468010 : ja 0x46802f ; ret
0x0000000000468056 : ja 0x46805d ; ret
0x0000000000468056 : ja 0x468060 ; ret
0x000000000046809f : ja 0x4680dd ; add rsp, 0x70 ; pop rbx ; ret
0x0000000000468263 : ja 0x468273 ; ret
0x00000000004682bd : ja 0x4682c2 ; ret
0x00000000004682bd : ja 0x4682c5 ; ret
0x00000000004739bb : ja 0x4739e4 ; mov rdi, qword ptr [rdi + 0x28] ; call r11
0x0000000000473b29 : ja 0x473b52 ; mov rdi, qword ptr [rdi + 0x28] ; call r11
0x000000000047550e : ja 0x475560 ; shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000048b7c7 : ja 0x48b7f5 ; add byte ptr [r8 - 0x77], cl ; ret
0x000000000048d071 : ja 0x48d09b ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000004b0924 : ja 0x4b08ab ; ret 0x48f
0x000000000040f80b : jae 0x40f835 ; movzx eax, byte ptr [rax] ; ret
0x0000000000438fb4 : jae 0x438f97 ; mov eax, 1 ; ret
0x00000000004349bd : jae 0x4391d6 ; ret
0x0000000000461c21 : jae 0x461b7b ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x00000000004714c7 : jae 0x471485 ; xor eax, eax ; ret
0x00000000004714c6 : jae 0x471486 ; xor eax, eax ; ret
0x0000000000496e75 : jae 0x496e71 ; call qword ptr [rax]
0x00000000004aeee2 : jae 0x4aeec4 ; jo 0x4aef60 ; mov ebp, 0xfb67d10d ; ret
0x00000000004afd7e : jae 0x4afd59 ; push rsi ; pop rdx ; je 0x4afd4e ; ret 0xacfc
0x00000000004ba2ad : jae 0x4ba2b5 ; add al, dl ; scasd eax, dword ptr [rdi] ; clc ; call qword ptr [rdi]
0x00000000004ba2c5 : jae 0x4ba2cd ; add al, bl ; scasd eax, dword ptr [rdi] ; clc ; call qword ptr [rcx]
0x00000000004ba2c4 : jae 0x4ba2ce ; add al, bl ; scasd eax, dword ptr [rdi] ; clc ; call qword ptr [rcx]
0x00000000004ba2dd : jae 0x4ba2e5 ; add al, ah ; scasd eax, dword ptr [rdi] ; clc ; call qword ptr [rcx]
0x00000000004ba2dc : jae 0x4ba2e6 ; add al, ah ; scasd eax, dword ptr [rdi] ; clc ; call qword ptr [rcx]
0x00000000004ba2f5 : jae 0x4ba2fd ; add al, ch ; scasd eax, dword ptr [rdi] ; clc ; call qword ptr [rcx]
0x00000000004268ea : jb 0x4268fa ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000426a3a : jb 0x426a4a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000426b8a : jb 0x426b9a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000426cda : jb 0x426cea ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000426e2a : jb 0x426e3a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000426f7a : jb 0x426f8a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004270ca : jb 0x4270da ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042721a : jb 0x42722a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042736a : jb 0x42737a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004274ba : jb 0x4274ca ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042760a : jb 0x42761a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000042775a : jb 0x42776a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004278aa : jb 0x4278ba ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004279fa : jb 0x427a0a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000427b4a : jb 0x427b5a ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000046259c : jb 0x462595 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000004735f2 : jb 0x4735fa ; add byte ptr [rcx - 0x77], cl ; ret
0x0000000000473793 : jb 0x47379b ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000004b714e : jb 0x4b715a ; idiv bh ; sbb al, 0xd ; div bp ; jmp qword ptr [rdx]
0x00000000004ba21d : jb 0x4ba225 ; add al, al ; stosb byte ptr [rdi], al ; clc ; call qword ptr [rcx]
0x000000000040ddfb : jbe 0x40dd9b ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x0000000000419f19 : jbe 0x419f68 ; bsf eax, edx ; ret
0x000000000041c6a6 : jbe 0x41c6e5 ; add rax, rdi ; ret
0x000000000041c6b6 : jbe 0x41c6e7 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000041c6c6 : jbe 0x41c6e7 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000041c6d6 : jbe 0x41c6e7 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000422943 : jbe 0x42295e ; lea rdi, qword ptr [rdi + 0x10] ; jne 0x422939 ; ret
0x0000000000467db2 : jbe 0x467db3 ; dec dword ptr [rax - 0x77] ; ret
0x0000000000467de9 : jbe 0x467dea ; dec dword ptr [rax - 0x77] ; ret
0x0000000000467df1 : jbe 0x467df2 ; dec dword ptr [rax + 0x39] ; ret
0x00000000004745ef : jbe 0x4745fa ; ret
0x00000000004b80b1 : jbe 0x4b80ab ; call qword ptr [rax]
0x00000000004ba58c : jbe 0x4ba553 ; clc ; jmp qword ptr [rdx]
0x0000000000400f9f : je 0x400f9d ; pop rbp ; mov edi, 0x6c2c30 ; jmp rax
0x000000000040100a : je 0x40101a ; mov edi, 0x4b2f78 ; call rax
0x000000000040104f : je 0x40105f ; mov edi, 0x6c0ef0 ; call rax
0x0000000000401911 : je 0x401939 ; add rsp, 8 ; ret
0x0000000000401cf3 : je 0x401d07 ; xor esi, esi ; mov edi, 1 ; call rax
0x00000000004022e9 : je 0x4022fd ; lea rdi, qword ptr [rbx + 0x80] ; call rax
0x0000000000402353 : je 0x402367 ; lea rdi, qword ptr [rbx + 0x80] ; call rax
0x000000000040257b : je 0x40258f ; lea rdi, qword ptr [rbx + 0x80] ; call rax
0x0000000000402b8e : je 0x402ba2 ; lea rdi, qword ptr [rbx + 0x80] ; call rax
0x0000000000402c52 : je 0x402c69 ; mov edi, 0x6c42a0 ; call rbx
0x0000000000402d09 : je 0x402d19 ; mov edi, 0x6c3140 ; call rax
0x0000000000403433 : je 0x40344a ; mov edi, 0x6c3140 ; call rax
0x000000000040356c : je 0x40357c ; mov edi, 0x6c31a0 ; call rax
0x00000000004036e3 : je 0x4036f3 ; mov edi, 0x6c31a0 ; call rax
0x000000000040d24b : je 0x40d1f1 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040ddc3 : je 0x40dd80 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040df43 : je 0x40df00 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040e0ec : je 0x40e0fe ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040eb64 : je 0x40eb6f ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000410354 : je 0x410194 ; ret
0x000000000041027e : je 0x41028c ; xor eax, eax ; ret
0x00000000004111e8 : je 0x4111ee ; call rdx
0x0000000000411a12 : je 0x411a23 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000041517c : je 0x4151a8 ; sbb byte ptr [rdx + 0x5b], bl ; pop rbp ; jmp rax
0x0000000000415d50 : je 0x415d7c ; sub byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x0000000000416106 : je 0x41610c ; call rax
0x000000000041709c : je 0x4170a2 ; ret
0x00000000004170b5 : je 0x4170c4 ; pop rbx ; ret
0x0000000000417101 : je 0x417117 ; add rsp, 0x70 ; pop rbx ; ret
0x00000000004178bf : je 0x4178d1 ; lea rax, qword ptr [rip + 0x19e58] ; ret
0x0000000000419003 : je 0x418fcd ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000419cd5 : je 0x419cdd ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000419d52 : je 0x419d64 ; lea rax, qword ptr [rip + 0x13d25] ; ret
0x0000000000419ecb : je 0x419ed5 ; bsf eax, edx ; ret
0x0000000000419ecb : je 0x419ed6 ; bsf eax, edx ; ret
0x0000000000419f74 : je 0x419f85 ; bsf rax, rdx ; ret
0x0000000000419f74 : je 0x419f86 ; bsf rax, rdx ; ret
0x0000000000419f18 : je 0x419f96 ; bsf rax, rdx ; ret
0x000000000041c59c : je 0x41c5f3 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000041c71c : je 0x41c72f ; lea rax, qword ptr [rip + 0x852b] ; ret
0x000000000041d2d2 : je 0x41d2e4 ; lea rax, qword ptr [rip + 0x11f55] ; ret
0x000000000041f7c3 : je 0x41f78d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000421353 : je 0x42131d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000042341a : je 0x423471 ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000004234d1 : je 0x4234e9 ; bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x0000000000425fe7 : je 0x425ff1 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000433b2d : je 0x433af6 ; movzx eax, dl ; pop rbx ; ret
0x0000000000433b05 : je 0x433af8 ; movzx eax, cl ; pop rbx ; ret
0x0000000000433b2d : je 0x433af8 ; movzx eax, dl ; pop rbx ; ret
0x0000000000433c46 : je 0x433c70 ; xor eax, eax ; add rsp, 0x18 ; ret
0x0000000000433cbf : je 0x433ca3 ; ret
0x0000000000433da8 : je 0x433db8 ; mov edi, 0x6c42a0 ; call rax
0x0000000000433ed4 : je 0x433ee4 ; mov edi, 0x6c42a0 ; call rax
0x0000000000434140 : je 0x434121 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000434e58 : je 0x434ea1 ; add byte ptr [rax], al ; ret
0x00000000004355fa : je 0x435601 ; ret
0x00000000004369f0 : je 0x436a00 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x00000000004373c8 : je 0x4373d9 ; lea rax, qword ptr [r12 - 1] ; jmp 0x43739c
0x0000000000437ad9 : je 0x437ade ; ret
0x0000000000437b3d : je 0x437b42 ; ret
0x0000000000438cc6 : je 0x438cd6 ; mov edi, 0x6c21e0 ; call rax
0x0000000000438e43 : je 0x438e53 ; mov edi, 0x6c21e0 ; call rax
0x0000000000438fd8 : je 0x438fe2 ; ret
0x0000000000438ff4 : je 0x439009 ; mov dword ptr [rip + 0x287f9c], edx ; pop rbx ; ret
0x00000000004394c8 : je 0x4394d7 ; mov eax, 0x6c5000 ; ret
0x000000000043e846 : je 0x43e874 ; or byte ptr [rax - 0x75], cl ; je 0x43e879 ; pop rax ; call rax
0x000000000043e84b : je 0x43e874 ; pop rax ; call rax
0x0000000000443222 : je 0x4431ec ; pop rbx ; ret
0x0000000000443761 : je 0x443771 ; mov edi, 0x6c42a0 ; call rax
0x0000000000443786 : je 0x443796 ; mov edi, 0x6c42a0 ; call rax
0x0000000000443892 : je 0x443898 ; call rax
0x00000000004438f1 : je 0x443901 ; mov edi, 0x6c42a0 ; call rax
0x00000000004439f8 : je 0x443a08 ; mov edi, 0x6c42a0 ; call rax
0x0000000000443b72 : je 0x443b78 ; call rax
0x0000000000443bfe : je 0x443c0e ; mov edi, 0x6c42a0 ; call rax
0x0000000000443cdd : je 0x443cf4 ; mov edi, 0x6c42a0 ; call rax
0x0000000000444c8b : je 0x444c91 ; call rax
0x000000000044524b : je 0x445253 ; ret
0x0000000000461610 : je 0x461661 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000046160f : je 0x461662 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004622b3 : je 0x4622c6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004622e3 : je 0x462345 ; pop rbp ; pop r12 ; ret
0x00000000004624fd : je 0x462508 ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000462541 : je 0x46254c ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000462b13 : je 0x462b35 ; bsf rax, rdx ; ret
0x0000000000462b13 : je 0x462b36 ; bsf rax, rdx ; ret
0x0000000000462aa3 : je 0x462b49 ; bsf rax, rdx ; ret
0x0000000000463b69 : je 0x463b89 ; mov cl, dl ; and cl, 0xf ; je 0x463b99 ; ret
0x0000000000463b70 : je 0x463b92 ; ret
0x0000000000463b85 : je 0x463ba6 ; add rax, 2 ; ret
0x0000000000463eb8 : je 0x463ee6 ; mov rdi, qword ptr [r13] ; call r12
0x00000000004640c9 : je 0x4640f2 ; call rbx
0x0000000000464152 : je 0x46417f ; lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000004642c4 : je 0x4642f0 ; xor byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x00000000004643ee : je 0x46441a ; xor byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x0000000000467cce : je 0x467cd4 ; call rax
0x0000000000467e53 : je 0x467e5d ; call rdx
0x0000000000467ed3 : je 0x467edd ; call rax
0x0000000000468665 : je 0x468623 ; ret
0x000000000046865f : je 0x468631 ; cmp r10b, 0x3a ; je 0x468629 ; ret
0x000000000046bbde : je 0x46bc09 ; sub byte ptr [rcx - 0x77], al ; ret 0x8341
0x000000000046ce92 : je 0x46cbf1 ; call rax
0x000000000046cc4d : je 0x46cc53 ; call rax
0x000000000046d286 : je 0x46d296 ; mov rdi, qword ptr [rsp + 0x30] ; call rax
0x000000000046df84 : je 0x46df94 ; mov edi, 0x6c21a0 ; call rax
0x0000000000471bce : je 0x471bde ; mov edi, 0x6c21e0 ; call rax
0x0000000000471c52 : je 0x471c62 ; mov edi, 0x6c21e0 ; call rax
0x0000000000471d17 : je 0x471d27 ; mov edi, 0x6c21e0 ; call rax
0x000000000047305c : je 0x47306c ; mov edi, 0x6c21a0 ; call rax
0x000000000047355f : je 0x47356f ; mov edi, 0x6c21e0 ; call rax
0x0000000000473578 : je 0x47358a ; pop rbx ; mov edi, 0x6c21e0 ; jmp rax
0x0000000000473fb8 : je 0x473fe3 ; sub byte ptr [rax + 0x63], cl ; ret
0x0000000000474afb : je 0x474acc ; mov edi, 0x6c21e0 ; call rax
0x0000000000474adc : je 0x474b0a ; sbb byte ptr [rdi + 0x6c21e0], bh ; call rax
0x0000000000474c36 : je 0x474c42 ; ret
0x0000000000474c4c : je 0x474c5c ; mov edi, 0x6c21e0 ; call rax
0x000000000047ea94 : je 0x47eaa6 ; mov rax, rdx ; pop rbx ; ret
0x000000000047f152 : je 0x47f15f ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004819f3 : je 0x4819bd ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000004839a3 : je 0x48396d ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000487857 : je 0x487833 ; ret
0x000000000048b14f : je 0x48b15f ; mov edi, 0x6c21e0 ; call rax
0x000000000048b365 : je 0x48b375 ; mov edi, 0x6c21e0 ; call rax
0x000000000048b40d : je 0x48b421 ; mov rax, qword ptr [rax + 8] ; add rax, qword ptr [rbx] ; call rax
0x000000000048cecb : je 0x48cedb ; mov edi, 0x6c21e0 ; call rax
0x000000000048cef2 : je 0x48cf02 ; mov edi, 0x6c21e0 ; call rax
0x000000000048cf73 : je 0x48cf83 ; mov edi, 0x6c21e0 ; call rax
0x000000000048cf9c : je 0x48cfac ; mov edi, 0x6c21e0 ; call rax
0x000000000048e2f2 : je 0x48e31d ; cmp byte ptr [rax - 0x7d], cl ; ret
0x000000000048fce8 : je 0x48fcda ; add rsp, 8 ; ret
0x0000000000491d4d : je 0x491da7 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000049243a : je 0x49244a ; mov edi, 0x6c21a0 ; call rax
0x00000000004924fb : je 0x49250b ; mov edi, 0x6c21a0 ; call rax
0x0000000000493a8f : je 0x493a9a ; call rdx
0x00000000004af048 : je 0x4af013 ; xor al, 0xd8 ; ret
0x00000000004af287 : je 0x4af284 ; jmp 0x4af25e
0x00000000004afd82 : je 0x4afd4a ; ret 0xacfc
0x00000000004b2a70 : je 0x4b2a3a ; std ; inc dword ptr [rdx + rax*8] ; std ; jmp rsp
0x00000000004b2c54 : je 0x4b2c1a ; std ; call rsp
0x00000000004b2dd0 : je 0x4b2d98 ; std ; call qword ptr [rdx + rax*8 - 3]
0x00000000004b2dcc : je 0x4b2d98 ; std ; push qword ptr [rcx + rax*8 - 3] ; call qword ptr [rdx + rax*8 - 3]
0x0000000000400a7c : jg 0x400a0e ; add cl, byte ptr [rax - 0x7d] ; ret 0x8304
0x000000000040b781 : jg 0x40b7f7 ; jmp 0x4379a4
0x000000000041ceb7 : jg 0x41ced0 ; jne 0x41cea7 ; mov rax, rdi ; ret
0x0000000000422947 : jg 0x42295e ; jne 0x422935 ; ret
0x00000000004284c9 : jg 0x42851c ; ret
0x000000000042854f : jg 0x42859a ; ret
0x00000000004286c9 : jg 0x42871c ; ret 0x894c
0x000000000042874f : jg 0x42879a ; ret 0x894c
0x000000000042aae8 : jg 0x42ab39 ; loope 0x42aae7 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000042ab5f : jg 0x42abaa ; ret 0xff2
0x000000000042ab78 : jg 0x42abc9 ; loop 0x42ab77 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000042abef : jg 0x42ac3a ; ret
0x000000000042ac08 : jg 0x42ac59 ; jrcxz 0x42ac07 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000042ac98 : jg 0x42ace9 ; in al, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000042ad18 : jg 0x42ad69 ; in eax, -0xd ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000042ad98 : jg 0x42ade9 ; out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000042ae18 : jg 0x42ae69 ; out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000042ae98 : jg 0x42aee9 ; call 0x4fc1be9a
0x000000000042af18 : jg 0x42af69 ; jmp 0x4fc1bf1a
0x000000000042b098 : jg 0x42b0e9 ; in al, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042b118 : jg 0x42b169 ; in eax, dx ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042b1a8 : jg 0x42b1f9 ; out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042b228 : jg 0x42b279 ; out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042b29c : jg 0x42b2a7 ; ret
0x000000000042b2f6 : jg 0x42b309 ; ret
0x000000000042b2f1 : jg 0x42b341 ; psllq mm1, qword ptr [rdi] ; jg 0x42b30e ; ret
0x000000000042b366 : jg 0x42b379 ; ret
0x000000000042b3d6 : jg 0x42b3e9 ; ret
0x000000000042b3d1 : jg 0x42b421 ; or eax, 0xf7f0ff3 ; ret
0x000000000042b446 : jg 0x42b459 ; ret
0x000000000042b441 : jg 0x42b491 ; or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000042b4b6 : jg 0x42b4c9 ; ret
0x000000000042b4b1 : jg 0x42b501 ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000042b526 : jg 0x42b539 ; ret
0x000000000042b521 : jg 0x42b571 ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000042b596 : jg 0x42b5a9 ; ret
0x000000000042b591 : jg 0x42b5e1 ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000042b606 : jg 0x42b619 ; ret
0x000000000042b601 : jg 0x42b651 ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000042b676 : jg 0x42b689 ; ret
0x000000000042b6e6 : jg 0x42b6f9 ; ret
0x000000000042b756 : jg 0x42b769 ; ret
0x000000000042b751 : jg 0x42b7a1 ; add eax, 0xf7f0ff3 ; ret
0x000000000042b7c6 : jg 0x42b7d9 ; ret
0x000000000042b7c1 : jg 0x42b811 ; add al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000042b836 : jg 0x42b849 ; ret
0x000000000042b831 : jg 0x42b881 ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000042b8a6 : jg 0x42b8b9 ; ret
0x000000000042b8a1 : jg 0x42b8f1 ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000042b916 : jg 0x42b929 ; ret
0x000000000042b911 : jg 0x42b961 ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000430e96 : jg 0x430ea1 ; ret
0x0000000000430ea6 : jg 0x430eb4 ; mov byte ptr [rdi + 0x10], dh ; ret
0x0000000000430eba : jg 0x430ec9 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000430ed9 : jg 0x430ee7 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000430ee9 : jg 0x430ef7 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000430ef9 : jg 0x430f0a ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x0000000000430f1a : jg 0x430f29 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x0000000000430f3a : jg 0x430f49 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000430f5a : jg 0x430f69 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000430f7a : jg 0x430f8c ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x0000000000430fbd : jg 0x430fcf ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x0000000000430fdd : jg 0x430fef ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000430ffb : jg 0x43100b ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000043101b : jg 0x43102b ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000043103b : jg 0x43104b ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000043105b : jg 0x43106b ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x0000000000431526 : jg 0x431535 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000431536 : jg 0x431548 ; mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x0000000000431569 : jg 0x43157b ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x0000000000431589 : jg 0x43159b ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000004316af : jg 0x43170f ; or eax, 0x1c478d48 ; ret
0x0000000000433ac0 : jg 0x433afd ; ret 0x2b77
0x00000000004739bf : jg 0x4739ec ; call r11
0x0000000000473b2d : jg 0x473b5a ; call r11
0x0000000000474e3a : jg 0x474e40 ; add byte ptr [rcx], cl ; ret 0xd089
0x0000000000474dfb : jg 0x474e4d ; sub eax, edx ; shr rax, 0x3f ; ret
0x000000000048c743 : jg 0x48c76f ; add byte ptr [rcx - 0x75], al ; adc edi, dword ptr [rcx] ; ret 0x850f
0x00000000004bae7d : jg 0x4bae85 ; add byte ptr [rax + 0x5f], dh ; stc ; call rdi
0x000000000043554f : jge 0x435591 ; add byte ptr [rax], al ; ret
0x000000000043583b : jge 0x43583f ; call rbx
0x000000000043594f : jge 0x435955 ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000435962 : jge 0x435966 ; call rbx
0x0000000000435970 : jge 0x435974 ; call rbx
0x0000000000435aa5 : jge 0x435aa9 ; call rbx
0x0000000000435c15 : jge 0x435c19 ; call rbx
0x0000000000435c23 : jge 0x435c27 ; call rbx
0x000000000043602f : jge 0x435ffa ; mov r15d, r14d ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x000000000043731a : jge 0x43731f ; call r12
0x00000000004399f4 : jge 0x4399bd ; mov rsi, qword ptr [rdx + rbx + 0x20] ; call rax
0x0000000000463ebd : jge 0x463ec2 ; call r12
0x00000000004652a6 : jge 0x46524f ; movzx esi, word ptr [rbp - 0x70] ; jmp 0x465278
0x000000000046c8a6 : jge 0x46c8b3 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5385
0x000000000048ffdf : jge 0x48ffdc ; leave ; ret
0x000000000049007a : jge 0x49007d ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x000000000049010b : jge 0x490108 ; leave ; ret
0x000000000049015a : jge 0x49015d ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x0000000000490227 : jge 0x49022a ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x00000000004902bf : jge 0x4902bc ; leave ; ret
0x0000000000490313 : jge 0x490316 ; mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x00000000004bad1d : jge 0x4bad25 ; add byte ptr [rax], ah ; stc ; call qword ptr [rsi]
0x0000000000401762 : jl 0x401790 ; or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x0000000000409462 : jl 0x40948d ; cmp al, ch ; ret 0
0x000000000041b907 : jl 0x41b932 ; or byte ptr [rax + 0x39], cl ; ret
0x0000000000434c59 : jl 0x434c85 ; cwde ; add cl, byte ptr [rdi] ; ret 0xfc3
0x0000000000434d69 : jl 0x434d95 ; adc byte ptr [rdx], al ; cmove eax, edx ; jmp 0x434d31
0x0000000000435d06 : jl 0x435d34 ; or byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x000000000043c60c : jl 0x43c63a ; cmp byte ptr [rcx + 0x41082444], cl ; call rsi
0x000000000043c960 : jl 0x43c98d ; mov qword ptr [rsp + 8], rax ; call rbx
0x000000000043cc4b : jl 0x43cc79 ; mov qword ptr [rsp + 8], rax ; call r14
0x000000000043cf2b : jl 0x43cf59 ; cmp byte ptr [rcx + 0x41082444], cl ; call rdi
0x000000000043d01d : jl 0x43d04b ; cmp byte ptr [rcx + 0x41082444], cl ; call rsi
0x000000000043d380 : jl 0x43d3ad ; mov qword ptr [rsp + 8], rax ; call rbx
0x000000000043d5c9 : jl 0x43d5f7 ; mov qword ptr [rsp + 8], rax ; call r14
0x000000000043d8d0 : jl 0x43d8fe ; mov qword ptr [rsp + 8], rax ; call r14
0x000000000043dadb : jl 0x43db09 ; mov qword ptr [rsp + 8], rax ; call r14
0x000000000043e1a5 : jl 0x43e1d2 ; push rax ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000043ee32 : jl 0x43ee5f ; push rax ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000043f46c : jl 0x43f49a ; mov qword ptr [rsp + 8], rax ; call r12
0x000000000043fe1d : jl 0x43fe4b ; mov qword ptr [rsp + 8], rax ; call r15
0x000000000044077b : jl 0x4407a9 ; push rax ; mov dword ptr [rsp + 8], eax ; call r14
0x0000000000440c41 : jl 0x440c6e ; push rax ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000440f39 : jl 0x440f66 ; push rax ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000044183c : jl 0x44186a ; push rax ; mov dword ptr [rsp + 8], eax ; call r14
0x0000000000441ce9 : jl 0x441d16 ; push rax ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000441fd9 : jl 0x442006 ; push rax ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000445fa6 : jl 0x445fd4 ; sbb byte ptr [rax - 0x77], cl ; pop rax ; or cl, ch ; ret
0x000000000044d476 : jl 0x44d440 ; clc ; add byte ptr [rax + 0xf], cl ; ret 0x8948
0x00000000004703e9 : jl 0x470418 ; cmp byte ptr [rbx + rcx*4 + 0x4c], cl ; and al, 0x30 ; call r9
0x000000000047cbca : jl 0x47cbf5 ; xor byte ptr [rax + 0x29], cl ; ret 0x2948
0x0000000000488991 : jl 0x4889bc ; sbb byte ptr [rcx + 0x29], cl ; ret 0x6348
0x000000000048ae1a : jl 0x48ae19 ; or byte ptr [rax - 0x77], cl ; ret
0x000000000048ce36 : jl 0x48ce60 ; adc al, ch ; ret 0xfe7b
0x000000000049731c : jl 0x497361 ; stc ; jmp qword ptr [rdx]
0x00000000004ba2f4 : jl 0x4ba370 ; add byte ptr [rax], al ; call 0x124b9bb3
0x00000000004bc319 : jl 0x4bc317 ; call rax
0x0000000000443232 : jle 0x443245 ; sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x00000000004471d7 : jle 0x447193 ; jmp 0x4471a0
0x00000000004471d6 : jle 0x447194 ; jmp 0x4471a1
0x000000000048910d : jle 0x489114 ; ret
0x0000000000490445 : jle 0x490454 ; cmovbe eax, ecx ; ret
0x00000000004b6ad6 : jle 0x4b6ae8 ; idiv bh ; sbb al, 0xd ; retf ; fdivrp st(5) ; jmp qword ptr [rdx]
0x00000000004b2a14 : jmp 0x2b4b27df
0x0000000000400ed3 : jmp 0x400e98
0x0000000000404686 : jmp 0x403966
0x0000000000404709 : jmp 0x403c2a
0x0000000000404f9b : jmp 0x40519f
0x0000000000406f27 : jmp 0x406f3c
0x0000000000407f5d : jmp 0x407e8a
0x000000000040b283 : jmp 0x40b248
0x000000000040ce09 : jmp 0x40ce10
0x0000000000415494 : jmp 0x4154a7
0x0000000000417974 : jmp 0x41793a
0x0000000000417ac8 : jmp 0x417a8d
0x000000000042352c : jmp 0x4234f2
0x0000000000423678 : jmp 0x42363d
0x000000000043346e : jmp 0x433434
0x000000000043353f : jmp 0x433505
0x00000000004335ae : jmp 0x433574
0x0000000000434da1 : jmp 0x434d2f
0x0000000000434dfa : jmp 0x434d32
0x00000000004373cf : jmp 0x437395
0x000000000040b783 : jmp 0x4379a2
0x0000000000439df2 : jmp 0x439de7
0x000000000043b34d : jmp 0x43b313
0x000000000043cfb6 : jmp 0x43cf7b
0x000000000043d9ad : jmp 0x43d973
0x000000000043d9f7 : jmp 0x43d9bc
0x00000000004404dd : jmp 0x4404a2
0x0000000000441615 : jmp 0x4415da
0x0000000000445468 : jmp 0x44543d
0x0000000000446c01 : jmp 0x446608
0x0000000000446ff6 : jmp 0x446eda
0x00000000004471d9 : jmp 0x44719e
0x00000000004550c3 : jmp 0x4513bb
0x00000000004554da : jmp 0x4517ba
0x0000000000453257 : jmp 0x4517bf
0x0000000000455a29 : jmp 0x451c9a
0x0000000000455a0e : jmp 0x452564
0x0000000000456731 : jmp 0x452982
0x0000000000452f28 : jmp 0x452eed
0x00000000004539cb : jmp 0x4538c0
0x00000000004588ff : jmp 0x454b0f
0x0000000000457369 : jmp 0x4567e7
0x00000000004589d7 : jmp 0x45835b
0x0000000000458945 : jmp 0x45868c
0x0000000000458dee : jmp 0x458c07
0x000000000045de50 : jmp 0x45a0df
0x000000000045e936 : jmp 0x45ac23
0x000000000046282b : jmp 0x4627f1
0x000000000046282a : jmp 0x4627f2
0x000000000046332b : jmp 0x463189
0x00000000004652ac : jmp 0x465272
0x0000000000467a20 : jmp 0x4679e6
0x00000000004680d4 : jmp 0x468086
0x000000000046980b : jmp 0x46979f
0x0000000000473ff3 : jmp 0x474004
0x00000000004740c1 : jmp 0x4740d2
0x000000000047423a : jmp 0x47424f
0x00000000004742e4 : jmp 0x4742f9
0x0000000000476522 : jmp 0x476574
0x0000000000489b19 : jmp 0x489b29
0x000000000048b5e7 : jmp 0x48b613
0x000000000048c942 : jmp 0x48c994
0x000000000048e01b : jmp 0x48dfe1
0x000000000048e096 : jmp 0x48dfe7
0x000000000048ea25 : jmp 0x48e4cc
0x00000000004539cc : jmp 0x494539d5
0x00000000004ae54a : jmp 0x4ae589
0x00000000004af289 : jmp 0x4af25c
0x00000000004b0280 : jmp 0x4b0214
0x00000000004b027f : jmp 0x4b0215
0x000000000042af1a : jmp 0x4fc1bf18
0x000000000042af19 : jmp 0x4fc1bf19
0x0000000000470f78 : jmp 0x50a0583
0x0000000000471318 : jmp 0x50a0923
0x000000000048e19f : jmp 0x50bd7aa
0x0000000000475511 : jmp 0xffffffffc356de66
0x00000000004102b6 : jmp 0xffffffffc3ca4fc0
0x00000000004976cf : jmp qword ptr [rax + 0x10fff937]
0x00000000004976c7 : jmp qword ptr [rax + 0x20fff938]
0x00000000004976bf : jmp qword ptr [rax + 0x20fff939]
0x00000000004976b7 : jmp qword ptr [rax + 0x20fff93a]
0x00000000004976af : jmp qword ptr [rax + 0x20fff93b]
0x00000000004974a3 : jmp qword ptr [rax + 0x20fff93d]
0x00000000004477e5 : jmp qword ptr [rax]
0x0000000000496f9f : jmp qword ptr [rbp + 0x51fff8e8]
0x00000000004b83ab : jmp qword ptr [rbx]
0x00000000004b28e3 : jmp qword ptr [rcx + 0x17fffdb1]
0x0000000000496fb3 : jmp qword ptr [rcx + 0x21fff8ec]
0x0000000000496fbb : jmp qword ptr [rcx + 0x21fff8ed]
0x0000000000496fa7 : jmp qword ptr [rcx]
0x00000000004b0b44 : jmp qword ptr [rdi]
0x000000000049731f : jmp qword ptr [rdx]
0x00000000004b28c3 : jmp qword ptr [rsi + 0x11fffdaf]
0x0000000000443679 : jmp qword ptr [rsi + 0xf]
0x00000000004972c3 : jmp qword ptr [rsi]
0x0000000000417bb9 : jmp r10
0x000000000047361e : jmp r11
0x000000000048ef39 : jmp r8
0x00000000004262d0 : jmp r9
0x0000000000400fa7 : jmp rax
0x000000000047361f : jmp rbx
0x0000000000496fd3 : jmp rcx
0x00000000004bd07b : jmp rdi
0x000000000049754f : jmp rdx
0x00000000004972b3 : jmp rsi
0x00000000004b2a87 : jmp rsp
0x0000000000400cdb : jne 0x400ce0 ; ret
0x0000000000400fd0 : jne 0x400fd7 ; pop rbp ; ret
0x0000000000404f99 : jne 0x404fb8 ; jmp 0x4051a1
0x0000000000406ed4 : jne 0x406eb2 ; ret
0x00000000004081c3 : jne 0x4081a8 ; lea rax, qword ptr [rbp + 2] ; mov rdx, r8 ; jmp 0x4081e9
0x0000000000408b4a : jne 0x408bc5 ; nop dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x0000000000409282 : jne 0x409301 ; mov eax, edx ; pop rbx ; ret
0x000000000040a8ac : jne 0x40a8b3 ; pop rbx ; ret
0x000000000040dbf1 : jne 0x40dbe3 ; ret
0x000000000040ebb2 : jne 0x40eb9d ; pop rbx ; ret
0x000000000040ebec : jne 0x40ebe5 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000040f166 : jne 0x40f15b ; ret
0x000000000040d327 : jne 0x40f592 ; ret
0x000000000040f542 : jne 0x40f7bb ; ret
0x0000000000410655 : jne 0x410649 ; mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000410aea : jne 0x417271 ; ret
0x0000000000417b22 : jne 0x417b34 ; lea rax, qword ptr [rip + 5] ; ret
0x000000000041c659 : jne 0x41c6b5 ; xor rax, rax ; ret
0x000000000041c619 : jne 0x41c6d9 ; xor rax, rax ; ret
0x000000000041c708 : jne 0x41c71b ; lea rax, qword ptr [rip + 0x1f] ; ret
0x000000000041cdfe : jne 0x41cde3 ; ret
0x000000000041cf63 : jne 0x41ce4f ; mov rax, rdi ; ret
0x000000000041ceb9 : jne 0x41cea5 ; mov rax, rdi ; ret
0x000000000041d3fe : jne 0x41d410 ; lea rax, qword ptr [rip + 0x79] ; ret
0x000000000041d461 : jne 0x41d473 ; lea rax, qword ptr [rip + 6] ; ret
0x0000000000422a08 : jne 0x4228e0 ; ret
0x0000000000422949 : jne 0x422933 ; ret
0x00000000004236d6 : jne 0x4236c1 ; pop rbx ; pop rbp ; mov rax, r12 ; pop r12 ; ret
0x0000000000424c3c : jne 0x424c26 ; xor eax, eax ; sub eax, ecx ; ret
0x000000000042622d : jne 0x426257 ; xor eax, eax ; ret
0x0000000000425821 : jne 0x42625b ; xor eax, eax ; ret
0x0000000000425849 : jne 0x426267 ; xor eax, eax ; ret
0x0000000000431815 : jne 0x4317a6 ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000004317e7 : jne 0x4317a6 ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000004317e6 : jne 0x4317a7 ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000432f74 : jne 0x433188 ; xor eax, eax ; ret
0x0000000000433179 : jne 0x433199 ; xor eax, eax ; ret
0x0000000000433021 : jne 0x43319d ; xor eax, eax ; ret
0x0000000000433191 : jne 0x43319e ; cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x00000000004332a1 : jne 0x433292 ; ret
0x0000000000433351 : jne 0x433342 ; ret
0x00000000004334c1 : jne 0x4334b6 ; lea rax, qword ptr [rcx - 1] ; ret
0x0000000000433611 : jne 0x433606 ; sub rax, 1 ; ret
0x0000000000435f98 : jne 0x435f80 ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x000000000043776f : jne 0x437729 ; mov qword ptr [rbp - 0x68], rax ; mov rdx, rax ; jmp 0x4377aa
0x000000000043780d : jne 0x4377c7 ; mov qword ptr [rbp - 0x68], rax ; mov rdx, rax ; jmp 0x43784c
0x0000000000437a81 : jne 0x437a79 ; pop rdx ; pop r10 ; ret
0x0000000000437ce4 : jne 0x437cc3 ; ret
0x0000000000437e7d : jne 0x437e7e ; nop ; xor eax, eax ; leave ; ret
0x000000000043b34b : jne 0x43b323 ; jmp 0x43b315
0x0000000000447231 : jne 0x44721d ; mov rax, rsi ; ret
0x00000000004472b5 : jne 0x447295 ; mov rax, rsi ; ret
0x0000000000451056 : jne 0x4510b9 ; mov eax, edx ; pop rbx ; ret
0x0000000000459b17 : jne 0x459b1e ; ret
0x000000000045de4a : jne 0x45b696 ; jmp 0x45a0e5
0x0000000000460321 : jne 0x4603a2 ; pop rbx ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x0000000000461541 : jne 0x461533 ; ret
0x0000000000462a03 : jne 0x462a0e ; xor rax, rax ; ret
0x0000000000463974 : jne 0x46397f ; mov dword ptr [rcx + 8], esi ; ret
0x000000000046451b : jne 0x4644d6 ; nop dword ptr [rax] ; ret
0x000000000046455c : jne 0x464553 ; ret
0x00000000004652aa : jne 0x46523f ; jmp 0x465274
0x0000000000467b01 : jne 0x467b21 ; pop rbx ; ret
0x0000000000468623 : jne 0x46868a ; mov rax, r9 ; ret
0x0000000000469806 : jne 0x469793 ; mov byte ptr [rax], 0 ; jmp 0x4697a4
0x000000000046f9d5 : jne 0x46ed0c ; add rcx, rsi ; call rcx
0x000000000046f88a : jne 0x46f28a ; add rcx, rsi ; call rcx
0x0000000000470e19 : jne 0x470dcd ; mov eax, dword ptr [rdx] ; ret
0x00000000004728e9 : jne 0x4734f6 ; ret
0x00000000004728e8 : jne 0x4734f7 ; ret
0x00000000004747b3 : jne 0x4747c6 ; add rsp, 0x48 ; ret
0x0000000000474854 : jne 0x474868 ; xor eax, eax ; add rsp, 0x58 ; ret
0x000000000047492d : jne 0x474948 ; xor eax, eax ; add rsp, 0x78 ; ret
0x00000000004749e4 : jne 0x4749f8 ; xor eax, eax ; add rsp, 0x58 ; ret
0x000000000047eb96 : jne 0x47eba6 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000047eed7 : jne 0x47ef34 ; and al, 0 ; call rax
0x000000000047f1fe : jne 0x47f210 ; lea rax, qword ptr [rip + 0x79] ; ret
0x000000000047f261 : jne 0x47f273 ; lea rax, qword ptr [rip + 6] ; ret
0x000000000048aba8 : jne 0x48ab57 ; call rbx
0x000000000048ffdb : jne 0x48ffd4 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x0000000000490107 : jne 0x490100 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x00000000004902bb : jne 0x4902b4 ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x00000000004904ed : jne 0x4904f2 ; call r14
0x0000000000490899 : jne 0x4908c9 ; mov rax, qword ptr [rdx] ; add rsp, 8 ; ret
0x0000000000491619 : jne 0x491649 ; mov rax, qword ptr [rdx] ; add rsp, 8 ; ret
0x0000000000491bb8 : jne 0x491bc3 ; pop rbx ; ret
0x0000000000491dc4 : jne 0x491dd3 ; ret
0x00000000004925c5 : jne 0x4925b3 ; pop rbx ; ret
0x0000000000492610 : jne 0x4925f0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000492759 : jne 0x492727 ; add rsp, 8 ; ret
0x00000000004927f1 : jne 0x4927e4 ; pop rbx ; ret
0x00000000004927f1 : jne 0x4927e8 ; pop rbx ; ret
0x000000000049419c : jne 0x4941bf ; ret
0x0000000000496e79 : jne 0x496e75 ; jmp qword ptr [rax]
0x00000000004b4594 : jne 0x4b45e5 ; cmc ; jmp qword ptr [rdx]
0x00000000004bc8be : jne 0x4bc8cc ; ret
0x00000000004bc8be : jne 0x4bc8d2 ; ret
0x00000000004bc8ee : jne 0x4bc8fc ; ret
0x00000000004bc8ee : jne 0x4bc902 ; ret
0x0000000000425ade : jno 0x425aed ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000434c20 : jno 0x434c17 ; ret
0x0000000000463972 : jno 0x463980 ; jne 0x463981 ; mov dword ptr [rcx + 8], esi ; ret
0x0000000000463977 : jno 0x463984 ; ret
0x000000000046e547 : jno 0x46e54d ; inc dword ptr [rbp + 0x5b0278c0] ; ret
0x000000000046e546 : jno 0x46e54e ; inc dword ptr [rbp + 0x5b0278c0] ; ret
0x0000000000475404 : jno 0x475456 ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000004a8a20 : jno 0x4a89ee ; add byte ptr [r8], r8b ; add byte ptr [rax], al ; add byte ptr [rdx], ch ; ret
0x00000000004a8b20 : jno 0x4a8aee ; add byte ptr [r8], r8b ; add byte ptr [rax], al ; add byte ptr [rdx], ch ; ret
0x00000000004a8c20 : jno 0x4a8bee ; add byte ptr [r8], r8b ; add byte ptr [rax], al ; add byte ptr [rdx], ch ; ret
0x000000000043a20b : jnp 0x43a227 ; call rax
0x000000000047ebdd : jnp 0x47ec41 ; and al, 0 ; add byte ptr [rsi + 0x6c], 0 ; ret
0x00000000004aed65 : jnp 0x4aed22 ; ret
0x00000000004b5791 : jnp 0x4b578a ; jmp rbx
0x00000000004bb014 : jnp 0x4bb081 ; stc ; jmp qword ptr [rdx]
0x0000000000400ecd : jns 0x400db0 ; jmp 0x400e9e
0x000000000041d403 : jns 0x41d409 ; add byte ptr [rax], al ; ret
0x0000000000433bac : jns 0x433c00 ; add byte ptr [rax + 0x10], bh ; pop rbx ; ret
0x00000000004455a8 : jns 0x4455c1 ; add rsp, 0xd0 ; ret
0x00000000004744f5 : jns 0x47447c ; ret
0x000000000047f203 : jns 0x47f209 ; add byte ptr [rax], al ; ret
0x00000000004920b6 : jns 0x4920c4 ; mov r8, qword ptr [r8] ; mov qword ptr [rbx], r8 ; pop rbx ; ret
0x00000000004ade6e : jns 0x4ade04 ; ret 0xf869
0x00000000004ade6d : jns 0x4ade05 ; ret 0xf869
0x00000000004b027e : jns 0x4b02d5 ; jmp 0x4b0216
0x000000000040c624 : jo 0x40c675 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000417106 : jo 0x417165 ; ret
0x0000000000434d2e : jo 0x434d8d ; ret
0x000000000043595c : jo 0x435963 ; std ; dec dword ptr [rcx - 0x75] ; jge 0x43596c ; call rbx
0x000000000045b94c : jo 0x45b953 ; add byte ptr [rax - 0x77], cl ; ret 0xb848
0x00000000004615ba : jo 0x4615d2 ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000468077 : jo 0x468071 ; ret 0x4840
0x00000000004680a4 : jo 0x468103 ; ret
0x000000000047e87a : jo 0x47e807 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x000000000047e879 : jo 0x47e808 ; sar byte ptr [rax + 9], 0xf3 ; ret
0x000000000048e015 : jo 0x48e01f ; add rax, 3 ; jmp 0x48dfe7
0x0000000000496d10 : jo 0x496d46 ; clc ; inc dword ptr [rax + 0x2e] ; clc ; call qword ptr [rax]
0x0000000000496e48 : jo 0x496e04 ; clc ; inc eax ; mov ah, 0xf8 ; call qword ptr [rax]
0x0000000000496e71 : jo 0x496e71 ; inc dword ptr [rax] ; jae 0x496e75 ; call qword ptr [rax]
0x0000000000497204 : jo 0x49720d ; stc ; inc eax ; add ecx, edi ; call qword ptr [rax]
0x00000000004aeee4 : jo 0x4aef5e ; mov ebp, 0xfb67d10d ; ret
0x00000000004b21f8 : jo 0x4b21fe ; cld ; inc dword ptr [rax - 1] ; cld ; jmp qword ptr [rax]
0x00000000004b2284 : jo 0x4b226b ; cld ; inc eax ; loopne 0x4b228e ; call qword ptr [rax]
0x00000000004b4e81 : jo 0x4b4e7a ; jmp rax
0x00000000004b645e : jo 0x4b6476 ; idiv bh ; sbb al, 0xd ; repe cmpsd dword ptr [rsi], dword ptr [rdi] ; cmc ; jmp qword ptr [rdx]
0x00000000004bae80 : jo 0x4baee4 ; stc ; call rdi
0x00000000004bde20 : jo 0x4bde91 ; sti ; call qword ptr [rax]
0x0000000000410aec : jp 0x410b5a ; add byte ptr [rax], al ; ret
0x00000000004170b0 : jp 0x4170ba ; test rdx, rdi ; je 0x4170c9 ; pop rbx ; ret
0x000000000041ce45 : jp 0x41ce3f ; ret 0x7401
0x0000000000458f52 : jp 0x458ef3 ; cld ; dec dword ptr [rcx - 0x77] ; ret 0x92e9
0x000000000046d444 : jp 0x46d46f ; add bh, dh ; ret 0x804
0x00000000004b36dc : jp 0x4b36fd ; cmc ; jmp qword ptr [rdx]
0x00000000004b4484 : jp 0x4b44d4 ; cmc ; jmp qword ptr [rdx]
0x00000000004b6fa4 : jp 0x4b6f93 ; cmc ; jmp qword ptr [rdx]
0x00000000004be131 : jp 0x4be130 ; jmp rbx
0x00000000004170cf : jrcxz 0x4170d5 ; dec dword ptr [rax - 0x77] ; ret 0xcb8
0x000000000042ac0a : jrcxz 0x42ac05 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000042ac09 : jrcxz 0x42ac06 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x0000000000437ad3 : jrcxz 0x437a98 ; cmp r11d, 0xa ; je 0x437ae4 ; ret
0x0000000000464e31 : jrcxz 0x464dc3 ; or ecx, dword ptr [rax - 0x7d] ; ret
0x00000000004adcc5 : jrcxz 0x4add1f ; ret
0x00000000004b3059 : jrcxz 0x4b3051 ; call qword ptr [rax]
0x00000000004b5564 : jrcxz 0x4b54ff ; cmc ; jmp qword ptr [rdx]
0x00000000004b6d1d : jrcxz 0x4b6d16 ; jmp qword ptr [rdx]
0x00000000004b6d65 : jrcxz 0x4b6d5e ; jmp qword ptr [rdx]
0x00000000004b6dad : jrcxz 0x4b6da6 ; jmp qword ptr [rdx]
0x0000000000404372 : js 0x404381 ; dec dword ptr [rdi] ; xchg eax, ebp ; ret 0x81e9
0x000000000043662c : js 0x436643 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000439284 : js 0x439248 ; sub byte ptr [rax], al ; pop rbx ; ret
0x0000000000439ed6 : js 0x439ef6 ; mov qword ptr [rbp - 0x68], rax ; call rcx
0x00000000004471d1 : js 0x44721e ; cmp dword ptr [rdx + rsi*4], 0x40 ; jle 0x447199 ; jmp 0x4471a6
0x00000000004622b0 : js 0x4622eb ; add byte ptr [rbx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x0000000000462829 : js 0x46286e ; jmp 0x4627f3
0x000000000046e54c : js 0x46e553 ; pop rbx ; ret
0x0000000000479294 : js 0x479227 ; clc ; dec dword ptr [rax - 0x77] ; ret
0x000000000047e87d : js 0x47e88b ; ret
0x000000000048e094 : js 0x48e082 ; jmp 0x48dfe9
0x000000000048ff09 : js 0x48ff16 ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000048ff16 : js 0x48ff22 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000004b28e0 : js 0x4b289a ; std ; jmp qword ptr [rcx + 0x17fffdb1]
0x00000000004b4188 : js 0x4b41d3 ; cmc ; call qword ptr [rax]
0x00000000004b45dc : js 0x4b462d ; cmc ; jmp qword ptr [rdx]
0x00000000004bb79d : js 0x4bb7a5 ; add byte ptr [rax], dl ; cli ; jmp rsi
0x000000000041c2fd : lahf ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x00000000004b03a3 : lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000421fad : lahf ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000435d72 : lahf ; ret
0x0000000000435d79 : lahf ; ret 0x3845
0x00000000004adbfd : lahf ; ret 0x871e
0x0000000000454158 : lahf ; ret 0x9529
0x000000000042263d : lar eax, word ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004716bd : lcall ptr [rbx + 0x48] ; mov eax, ebp ; pop rbp ; pop r12 ; ret
0x00000000004156a1 : lcall ptr [rbx + 0x5d] ; pop r12 ; jmp rax
0x0000000000463f31 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000446b46 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x00000000004429bb : lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000040ab18 : lcall ptr [rbx + 0x5d] ; ret
0x000000000047182c : lcall ptr [rbx + 0x64] ; mov eax, dword ptr [rax] ; ret
0x00000000004b296f : lcall ptr [rcx - 0x61000251] ; scasd eax, dword ptr [rdi] ; std ; jmp rbx
0x000000000042b296 : lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000040ebfb : lea eax, dword ptr [r8 - 1] ; ret
0x000000000041c684 : lea eax, dword ptr [rax + rdi + 0x10] ; ret
0x000000000041c694 : lea eax, dword ptr [rax + rdi + 0x20] ; ret
0x000000000041c664 : lea eax, dword ptr [rax + rdi - 0x10] ; ret
0x000000000040230e : lea eax, dword ptr [rax + rdx*8 - 0x18] ; mov rdx, rax ; jmp 0x402333
0x0000000000456914 : lea eax, dword ptr [rax - 0x17000003] ; ret 0xfb75
0x000000000040ebfc : lea eax, dword ptr [rax - 1] ; ret
0x00000000004081c6 : lea eax, dword ptr [rbp + 2] ; mov rdx, r8 ; jmp 0x4081e6
0x000000000043386b : lea eax, dword ptr [rcx + 1] ; pop rbp ; ret
0x0000000000462e0d : lea eax, dword ptr [rcx + rsi] ; ret
0x00000000004334c4 : lea eax, dword ptr [rcx - 1] ; ret
0x000000000043153c : lea eax, dword ptr [rdi + 0x10] ; ret
0x0000000000431551 : lea eax, dword ptr [rdi + 0x11] ; ret
0x000000000043156f : lea eax, dword ptr [rdi + 0x12] ; ret
0x000000000043158f : lea eax, dword ptr [rdi + 0x13] ; ret
0x00000000004315b2 : lea eax, dword ptr [rdi + 0x14] ; ret
0x00000000004315d1 : lea eax, dword ptr [rdi + 0x15] ; ret
0x00000000004315f1 : lea eax, dword ptr [rdi + 0x16] ; ret
0x0000000000431611 : lea eax, dword ptr [rdi + 0x17] ; ret
0x0000000000431634 : lea eax, dword ptr [rdi + 0x18] ; ret
0x0000000000431659 : lea eax, dword ptr [rdi + 0x19] ; ret
0x0000000000431677 : lea eax, dword ptr [rdi + 0x1a] ; ret
0x0000000000431697 : lea eax, dword ptr [rdi + 0x1b] ; ret
0x00000000004316b3 : lea eax, dword ptr [rdi + 0x1c] ; ret
0x00000000004316d3 : lea eax, dword ptr [rdi + 0x1d] ; ret
0x00000000004316f3 : lea eax, dword ptr [rdi + 0x1e] ; ret
0x0000000000431713 : lea eax, dword ptr [rdi + 0x1f] ; ret
0x000000000043148d : lea eax, dword ptr [rdi + 0xa] ; ret
0x00000000004314ad : lea eax, dword ptr [rdi + 0xb] ; ret
0x00000000004314cf : lea eax, dword ptr [rdi + 0xc] ; ret
0x00000000004314ef : lea eax, dword ptr [rdi + 0xd] ; ret
0x000000000043150f : lea eax, dword ptr [rdi + 0xe] ; ret
0x0000000000431529 : lea eax, dword ptr [rdi + 0xf] ; ret
0x00000000004313d7 : lea eax, dword ptr [rdi + 1] ; ret
0x00000000004313ea : lea eax, dword ptr [rdi + 2] ; ret
0x00000000004313f5 : lea eax, dword ptr [rdi + 3] ; ret
0x0000000000431408 : lea eax, dword ptr [rdi + 4] ; ret
0x000000000043141d : lea eax, dword ptr [rdi + 5] ; ret
0x000000000043143b : lea eax, dword ptr [rdi + 6] ; ret
0x0000000000431447 : lea eax, dword ptr [rdi + 7] ; ret
0x000000000043145a : lea eax, dword ptr [rdi + 8] ; ret
0x000000000043146f : lea eax, dword ptr [rdi + 9] ; ret
0x000000000041c6b9 : lea eax, dword ptr [rdi + rax + 0x10] ; ret
0x000000000041c6c9 : lea eax, dword ptr [rdi + rax + 0x20] ; ret
0x000000000041c5b3 : lea eax, dword ptr [rdi + rax + 0x30] ; ret
0x0000000000417a3a : lea eax, dword ptr [rdi + rax] ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000004234d7 : lea eax, dword ptr [rdi + rax] ; ret
0x0000000000462d09 : lea eax, dword ptr [rdi + rsi] ; ret
0x00000000004745e8 : lea eax, dword ptr [rdi - 1] ; cmp rax, 0xfd ; jbe 0x474601 ; ret
0x00000000004313c3 : lea eax, dword ptr [rdi] ; ret
0x00000000004309ad : lea eax, dword ptr [rdx + 0xa] ; ret
0x00000000004309cd : lea eax, dword ptr [rdx + 0xb] ; ret
0x00000000004309ef : lea eax, dword ptr [rdx + 0xc] ; ret
0x0000000000430a0f : lea eax, dword ptr [rdx + 0xd] ; ret
0x0000000000430a2f : lea eax, dword ptr [rdx + 0xe] ; ret
0x00000000004308bf : lea eax, dword ptr [rdx + 0xf] ; ret
0x00000000004308e7 : lea eax, dword ptr [rdx + 1] ; ret
0x00000000004308fd : lea eax, dword ptr [rdx + 2] ; ret
0x0000000000430915 : lea eax, dword ptr [rdx + 3] ; ret
0x000000000043092b : lea eax, dword ptr [rdx + 4] ; ret
0x000000000043093d : lea eax, dword ptr [rdx + 5] ; ret
0x000000000043095b : lea eax, dword ptr [rdx + 6] ; ret
0x0000000000430867 : lea eax, dword ptr [rdx + 7] ; ret
0x000000000043096d : lea eax, dword ptr [rdx + 8] ; ret
0x000000000043098d : lea eax, dword ptr [rdx + 9] ; ret
0x000000000040ebee : lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000433b8c : lea eax, dword ptr [rdx + rdx] ; pop rbx ; and eax, 0x7ff80000 ; ret
0x0000000000415e01 : lea eax, dword ptr [rdx - 0x10] ; add rsp, 8 ; ret
0x00000000004031db : lea eax, dword ptr [rdx] ; add byte ptr [rax], al ; mov edi, 0x6c42a0 ; call rax
0x0000000000436db7 : lea eax, dword ptr [rdx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000004308d5 : lea eax, dword ptr [rdx] ; ret
0x000000000041d2d5 : lea eax, dword ptr [rip + 0x11f55] ; ret
0x0000000000419d55 : lea eax, dword ptr [rip + 0x13d25] ; ret
0x000000000041c727 : lea eax, dword ptr [rip + 0x15313] ; ret
0x00000000004178c2 : lea eax, dword ptr [rip + 0x19e58] ; ret
0x000000000041c70b : lea eax, dword ptr [rip + 0x1f] ; ret
0x000000000041d401 : lea eax, dword ptr [rip + 0x79] ; ret
0x000000000041c71f : lea eax, dword ptr [rip + 0x852b] ; ret
0x0000000000417b25 : lea eax, dword ptr [rip + 5] ; ret
0x000000000041d464 : lea eax, dword ptr [rip + 6] ; ret
0x00000000004373cb : lea eax, dword ptr [rsp - 1] ; jmp 0x437399
0x000000000048efdf : lea ebp, dword ptr [rbx + rdi*8 + 0x2948ffff] ; ret 0x8941
0x000000000044eb1f : lea ebx, dword ptr [rdi + rdi*8 - 1] ; dec dword ptr [rax - 0x77] ; ret 0x3ae9
0x000000000044e25e : lea ebx, dword ptr [rdi + rdi*8 - 1] ; dec dword ptr [rax - 0x77] ; ret 0x858b
0x00000000004ae4b1 : lea ebx, dword ptr [rsi - 0x3271f33] ; test al, 0x97 ; xchg eax, esp ; ret
0x0000000000463d78 : lea ecx, dword ptr [rax + 1] ; call rbx
0x0000000000464156 : lea ecx, dword ptr [rax + 4] ; call rbx
0x0000000000426327 : lea ecx, dword ptr [rbx + rcx] ; jmp r9
0x0000000000430c5e : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x0000000000461b01 : lea ecx, dword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x0000000000476520 : lea ecx, dword ptr [rdx] ; jmp 0x476576
0x000000000048c940 : lea ecx, dword ptr [rdx] ; jmp 0x48c996
0x000000000045c55d : lea ecx, dword ptr [rsi + rdx] ; add rdx, r12 ; call qword ptr [r11 + rax*8]
0x0000000000449f5a : lea ecx, dword ptr [rsi + rdx] ; add rdx, rbx ; call qword ptr [r11 + rax*8]
0x00000000004640c3 : lea ecx, dword ptr [rsp + 0x28] ; lea rsi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000403a43 : lea edi, dword ptr [rbp + 0x80] ; xor esi, esi ; call rax
0x00000000004399f3 : lea edi, dword ptr [rbp - 0x40] ; mov rsi, qword ptr [rdx + rbx + 0x20] ; call rax
0x00000000004022ec : lea edi, dword ptr [rbx + 0x80] ; call rax
0x000000000041ceb6 : lea edi, dword ptr [rdi + 0x10] ; jne 0x41cea8 ; mov rax, rdi ; ret
0x0000000000422946 : lea edi, dword ptr [rdi + 0x10] ; jne 0x422936 ; ret
0x00000000004882d4 : lea edi, dword ptr [rsp + 0x90] ; call r12
0x0000000000490494 : lea edi, dword ptr [rsp + rcx*8] ; mov rsi, qword ptr [r15] ; call r14
0x0000000000458874 : lea edx, dword ptr [rax - 0x17000003] ; ret 0xfb62
0x00000000004263f4 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000468407 : lea edx, dword ptr [rdx + rcx*4] ; add eax, dword ptr [rsi + rdx] ; ret
0x000000000046272d : lea edx, dword ptr [rdx + rcx*4] ; mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x0000000000417bb6 : lea edx, dword ptr [rdx + rcx] ; jmp r10
0x00000000004267e8 : lea edx, dword ptr [rdx - 0x40] ; jmp r9
0x0000000000461a5c : lea edx, dword ptr [rsi + 4] ; mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000043776e : lea esi, dword ptr [rbp - 0x50] ; mov qword ptr [rbp - 0x68], rax ; mov rdx, rax ; jmp 0x4377ab
0x000000000043780c : lea esi, dword ptr [rbp - 0x50] ; mov qword ptr [rbp - 0x68], rax ; mov rdx, rax ; jmp 0x43784d
0x00000000004670e5 : lea esi, dword ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004642c3 : lea esi, dword ptr [rsp + 0x30] ; mov rdi, r12 ; call rbx
0x00000000004640c8 : lea esi, dword ptr [rsp + 0x40] ; call rbx
0x0000000000464151 : lea esi, dword ptr [rsp + 0x40] ; lea rcx, qword ptr [rax + 4] ; call rbx
0x0000000000463eb7 : lea esi, dword ptr [rsp + 0x40] ; mov rdi, qword ptr [r13] ; call r12
0x00000000004b5516 : lea esp, dword ptr [rax + 0xd1cfff5] ; mov bl, 0x96 ; cmc ; jmp qword ptr [rdx]
0x00000000004687c0 : lea esp, dword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000004087b0 : lea esp, dword ptr [rbp - 0x18] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000417bb5 : lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000490493 : lea r15, qword ptr [r12 + rcx*8] ; mov rsi, qword ptr [r15] ; call r14
0x0000000000426326 : lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000047651f : lea r9, qword ptr [rdx] ; jmp 0x476577
0x000000000048c93f : lea r9, qword ptr [rdx] ; jmp 0x48c997
0x00000000004373ca : lea rax, qword ptr [r12 - 1] ; jmp 0x43739a
0x000000000043386a : lea rax, qword ptr [r9 + 1] ; pop rbp ; ret
0x000000000041c683 : lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x000000000041c693 : lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x000000000041c663 : lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x000000000040230d : lea rax, qword ptr [rax + rdx*8 - 0x18] ; mov rdx, rax ; jmp 0x402334
0x00000000004081c5 : lea rax, qword ptr [rbp + 2] ; mov rdx, r8 ; jmp 0x4081e7
0x0000000000462e0c : lea rax, qword ptr [rcx + rsi] ; ret
0x00000000004334c3 : lea rax, qword ptr [rcx - 1] ; ret
0x000000000043153b : lea rax, qword ptr [rdi + 0x10] ; ret
0x0000000000431550 : lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000043156e : lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000043158e : lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000004315b1 : lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000004315d0 : lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000004315f0 : lea rax, qword ptr [rdi + 0x16] ; ret
0x0000000000431610 : lea rax, qword ptr [rdi + 0x17] ; ret
0x0000000000431633 : lea rax, qword ptr [rdi + 0x18] ; ret
0x0000000000431658 : lea rax, qword ptr [rdi + 0x19] ; ret
0x0000000000431676 : lea rax, qword ptr [rdi + 0x1a] ; ret
0x0000000000431696 : lea rax, qword ptr [rdi + 0x1b] ; ret
0x00000000004316b2 : lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000004316d2 : lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000004316f2 : lea rax, qword ptr [rdi + 0x1e] ; ret
0x0000000000431712 : lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000043148c : lea rax, qword ptr [rdi + 0xa] ; ret
0x00000000004314ac : lea rax, qword ptr [rdi + 0xb] ; ret
0x00000000004314ce : lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000004314ee : lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000043150e : lea rax, qword ptr [rdi + 0xe] ; ret
0x0000000000431528 : lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000004313d6 : lea rax, qword ptr [rdi + 1] ; ret
0x00000000004313e9 : lea rax, qword ptr [rdi + 2] ; ret
0x00000000004313f4 : lea rax, qword ptr [rdi + 3] ; ret
0x0000000000431407 : lea rax, qword ptr [rdi + 4] ; ret
0x000000000043141c : lea rax, qword ptr [rdi + 5] ; ret
0x000000000043143a : lea rax, qword ptr [rdi + 6] ; ret
0x0000000000431446 : lea rax, qword ptr [rdi + 7] ; ret
0x0000000000431459 : lea rax, qword ptr [rdi + 8] ; ret
0x000000000043146e : lea rax, qword ptr [rdi + 9] ; ret
0x000000000041c6b8 : lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000041c6c8 : lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000041c5b2 : lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000004234d6 : lea rax, qword ptr [rdi + rax] ; ret
0x0000000000462d08 : lea rax, qword ptr [rdi + rsi] ; ret
0x00000000004313c2 : lea rax, qword ptr [rdi] ; ret
0x00000000004309ac : lea rax, qword ptr [rdx + 0xa] ; ret
0x00000000004309cc : lea rax, qword ptr [rdx + 0xb] ; ret
0x00000000004309ee : lea rax, qword ptr [rdx + 0xc] ; ret
0x0000000000430a0e : lea rax, qword ptr [rdx + 0xd] ; ret
0x0000000000430a2e : lea rax, qword ptr [rdx + 0xe] ; ret
0x00000000004308be : lea rax, qword ptr [rdx + 0xf] ; ret
0x00000000004308e6 : lea rax, qword ptr [rdx + 1] ; ret
0x00000000004308fc : lea rax, qword ptr [rdx + 2] ; ret
0x0000000000430914 : lea rax, qword ptr [rdx + 3] ; ret
0x000000000043092a : lea rax, qword ptr [rdx + 4] ; ret
0x000000000043093c : lea rax, qword ptr [rdx + 5] ; ret
0x000000000043095a : lea rax, qword ptr [rdx + 6] ; ret
0x0000000000430866 : lea rax, qword ptr [rdx + 7] ; ret
0x000000000043096c : lea rax, qword ptr [rdx + 8] ; ret
0x000000000043098c : lea rax, qword ptr [rdx + 9] ; ret
0x0000000000415e00 : lea rax, qword ptr [rdx - 0x10] ; add rsp, 8 ; ret
0x00000000004308d4 : lea rax, qword ptr [rdx] ; ret
0x000000000041d2d4 : lea rax, qword ptr [rip + 0x11f55] ; ret
0x0000000000419d54 : lea rax, qword ptr [rip + 0x13d25] ; ret
0x000000000041c726 : lea rax, qword ptr [rip + 0x15313] ; ret
0x00000000004178c1 : lea rax, qword ptr [rip + 0x19e58] ; ret
0x000000000041c70a : lea rax, qword ptr [rip + 0x1f] ; ret
0x000000000041d400 : lea rax, qword ptr [rip + 0x79] ; ret
0x000000000041c71e : lea rax, qword ptr [rip + 0x852b] ; ret
0x0000000000417b24 : lea rax, qword ptr [rip + 5] ; ret
0x000000000041d463 : lea rax, qword ptr [rip + 6] ; ret
0x0000000000430c5d : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x0000000000463d77 : lea rcx, qword ptr [rax + 1] ; call rbx
0x0000000000464155 : lea rcx, qword ptr [rax + 4] ; call rbx
0x0000000000403a42 : lea rdi, qword ptr [r13 + 0x80] ; xor esi, esi ; call rax
0x00000000004399f2 : lea rdi, qword ptr [rbp - 0x40] ; mov rsi, qword ptr [rdx + rbx + 0x20] ; call rax
0x00000000004022eb : lea rdi, qword ptr [rbx + 0x80] ; call rax
0x000000000041ceb5 : lea rdi, qword ptr [rdi + 0x10] ; jne 0x41cea9 ; mov rax, rdi ; ret
0x0000000000422945 : lea rdi, qword ptr [rdi + 0x10] ; jne 0x422937 ; ret
0x00000000004882d3 : lea rdi, qword ptr [rsp + 0x90] ; call r12
0x00000000004263f3 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x0000000000468406 : lea rdx, qword ptr [rdx + rcx*4] ; add eax, dword ptr [rsi + rdx] ; ret
0x00000000004267e7 : lea rdx, qword ptr [rdx - 0x40] ; jmp r9
0x00000000004642c2 : lea rsi, qword ptr [rsp + 0x30] ; mov rdi, r12 ; call rbx
0x00000000004640c7 : lea rsi, qword ptr [rsp + 0x40] ; call rbx
0x0000000000464150 : lea rsi, qword ptr [rsp + 0x40] ; lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000004687bf : lea rsp, qword ptr [rbp - 0x10] ; pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000411e2a : leave ; add dword ptr [rax + 0x39], ecx ; ret
0x00000000004baaf1 : leave ; clc ; call rax
0x000000000048d056 : leave ; cmove rax, rdx ; ret
0x0000000000490442 : leave ; cmp qword ptr [rsi + 8], rdi ; cmovbe eax, ecx ; ret
0x0000000000467a1f : leave ; jmp 0x4679e7
0x00000000004332a0 : leave ; jne 0x433293 ; ret
0x0000000000433350 : leave ; jne 0x433343 ; ret
0x0000000000433610 : leave ; jne 0x433607 ; sub rax, 1 ; ret
0x000000000048d8c7 : leave ; movsxd rcx, dword ptr [rdi + rcx*4] ; add rcx, rdi ; jmp rcx
0x0000000000401080 : leave ; ret
0x000000000040c976 : les r11d, ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000405225 : ljmp ptr [rbx] ; add byte ptr [rcx - 0x77], cl ; ret 0x75e9
0x000000000040055a : ljmp ptr [rcx] ; salc ; add edx, ecx ; cmp esi, ecx ; cmovge eax, edx ; jmp 0x40053a
0x00000000004b29f7 : ljmp ptr [rdx] ; mov edi, 0xbb20fffd ; std ; jmp qword ptr [rax]
0x0000000000408c60 : lock add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000460bb5 : lock add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000042502e : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000048c805 : lock inc dword ptr [rdx + 0x10] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000419a10 : lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000432c20 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00000000004bdc45 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; call 0x234bd7bc
0x000000000048d070 : lodsb al, byte ptr [rsi] ; ja 0x48d09c ; add byte ptr [rax - 0x77], cl ; ret 0xc148
0x000000000040945f : lodsb al, byte ptr [rsi] ; mov rdi, qword ptr [rsp + 0x38] ; call 0x4156d8
0x00000000004bc024 : lodsb al, byte ptr [rsi] ; nop ; add byte ptr [rax], al ; fsubr dword ptr [rcx - 6] ; jmp qword ptr [rax]
0x00000000004b0b3d : lodsb al, byte ptr [rsi] ; or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000004bf324 : lodsb al, byte ptr [rsi] ; ret
0x0000000000406fac : lodsb al, byte ptr [rsi] ; ret 0x2b
0x0000000000476824 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004bdd3d : lodsd eax, dword ptr [rsi] ; add byte ptr [rax], al ; loopne 0x4bdda6 ; std ; call rcx
0x0000000000445247 : lodsd eax, dword ptr [rsi] ; fsub dword ptr [rdi] ; add byte ptr [rbx + rax - 0xd], dh ; ret
0x0000000000482bb0 : lodsd eax, dword ptr [rsi] ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045940f : lodsd eax, dword ptr [rsi] ; ret
0x000000000043a274 : lodsd eax, dword ptr [rsi] ; sub byte ptr [rax], al ; ret
0x0000000000424c3d : loop 0x424c75 ; shr byte ptr [rcx], 0xc8 ; ret
0x000000000042ab7a : loop 0x42ab75 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000042ab79 : loop 0x42ab76 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000044669f : loop 0x4466f3 ; mov edi, esi ; call 0x4228d6
0x000000000045c562 : loop 0x45c5a9 ; call qword ptr [rbx + rax*8]
0x000000000048d2b2 : loop 0x48d334 ; and eax, dword ptr [rax] ; ret
0x000000000048d6cf : loop 0x48d721 ; or eax, edx ; mov qword ptr [rsi], r8 ; ret
0x000000000049041f : loop 0x490471 ; or eax, edx ; mov qword ptr [rsi], r8 ; ret
0x00000000004b0eda : loop 0x4b0f2f ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000004b6cd5 : loop 0x4b6cce ; jmp qword ptr [rdx]
0x00000000004b6da6 : loop 0x4b6db5 ; idiv bh ; sbb al, 0xd ; shl bl, cl ; cmc ; jmp qword ptr [rdx]
0x00000000004bb5fc : loop 0x4bb64f ; cli ; jmp qword ptr [rdx]
0x000000000042aaea : loope 0x42aae5 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000042aae9 : loope 0x42aae6 ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000043194b : loope 0x431955 ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000043393e : loope 0x433946 ; add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; scasd eax, dword ptr [rdi] ; ret 0x8341
0x00000000004390bf : loope 0x4390ca ; pop rbx ; shl eax, cl ; pop rbp ; ret
0x000000000043a03f : loope 0x43a092 ; mov edx, ebp ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x0000000000463b6e : loope 0x463b83 ; je 0x463b94 ; ret
0x0000000000467c1c : loope 0x467ba9 ; ret 0xf631
0x0000000000475407 : loope 0x475459 ; mov dword ptr [rdi], ecx ; ret
0x0000000000475438 : loope 0x47548b ; mov dword ptr [rdi - 8], ecx ; ret
0x00000000004754ad : loope 0x475500 ; mov dword ptr [rdi - 0x10], ecx ; ret
0x00000000004785d7 : loope 0x4785dd ; dec dword ptr [rax - 0x77] ; ret
0x0000000000493b1e : loope 0x493b84 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004b2e4c : loope 0x4b2e16 ; std ; push rdx ; ret
0x00000000004b6b6d : loope 0x4b6b66 ; jmp qword ptr [rdx]
0x00000000004b6bb5 : loope 0x4b6bae ; jmp qword ptr [rdx]
0x00000000004b6bfc : loope 0x4b6be2 ; cmc ; jmp qword ptr [rdx]
0x00000000004b6bfd : loope 0x4b6bf6 ; jmp qword ptr [rdx]
0x00000000004b6c45 : loope 0x4b6c3e ; jmp qword ptr [rdx]
0x00000000004b6c44 : loope 0x4b6c3f ; jmp qword ptr [rdx]
0x00000000004b6c8d : loope 0x4b6c86 ; jmp qword ptr [rdx]
0x000000000040bdba : loopne 0x40be04 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000040be68 : loopne 0x40beb2 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000040d6ad : loopne 0x40d711 ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000041343e : loopne 0x4133cb ; rol byte ptr [rcx + 0xf], 0x94 ; ret
0x0000000000416e7f : loopne 0x416ee1 ; pop rbp ; pop r12 ; ret
0x000000000041cdff : loopne 0x41cdf6 ; ret
0x00000000004236dc : loopne 0x423722 ; pop rsp ; ret
0x00000000004236d7 : loopne 0x42373c ; pop rbp ; mov rax, r12 ; pop r12 ; ret
0x0000000000426841 : loopne 0x426858 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000426840 : loopne 0x426859 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000426991 : loopne 0x4269a8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000426990 : loopne 0x4269a9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000426ae1 : loopne 0x426af8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000426ae0 : loopne 0x426af9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000426c31 : loopne 0x426c48 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000426c30 : loopne 0x426c49 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000426d81 : loopne 0x426d98 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000426d80 : loopne 0x426d99 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000426ed1 : loopne 0x426ee8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000426ed0 : loopne 0x426ee9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000427021 : loopne 0x427038 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000427020 : loopne 0x427039 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042716f : loopne 0x427186 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042716e : loopne 0x427187 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004272c1 : loopne 0x4272d8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004272c0 : loopne 0x4272d9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000427411 : loopne 0x427428 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000427410 : loopne 0x427429 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000427561 : loopne 0x427578 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000427560 : loopne 0x427579 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004276b1 : loopne 0x4276c8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004276b0 : loopne 0x4276c9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000427801 : loopne 0x427818 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000427800 : loopne 0x427819 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000427951 : loopne 0x427968 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000427950 : loopne 0x427969 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000427aa1 : loopne 0x427ab8 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x0000000000427aa0 : loopne 0x427ab9 ; sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x00000000004379ec : loopne 0x437a09 ; add byte ptr [rax], al ; ret
0x0000000000437b38 : loopne 0x437b4d ; cmp eax, 4 ; je 0x437b47 ; ret
0x0000000000437c67 : loopne 0x437c79 ; pop r12 ; ret
0x00000000004390c3 : loopne 0x439124 ; ret
0x000000000044c6ba : loopne 0x44c71e ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000045f475 : loopne 0x45f4d7 ; pop rbp ; pop r12 ; ret
0x000000000045f841 : loopne 0x45f887 ; pop rsp ; ret
0x000000000045fee9 : loopne 0x45ff4b ; pop rbp ; pop r12 ; ret
0x000000000045ff09 : loopne 0x45ff4f ; pop rsp ; ret
0x00000000004649cc : loopne 0x464a16 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000004649b8 : loopne 0x464a1e ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000465d26 : loopne 0x465d31 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000047357c : loopne 0x4735a6 ; insb byte ptr [rdi], dx ; add bh, bh ; loopne 0x4735e5 ; ret
0x0000000000473581 : loopne 0x4735e0 ; ret
0x0000000000474c69 : loopne 0x474cc5 ; ret
0x0000000000474f1d : loopne 0x474f26 ; sub eax, 1 ; ret
0x0000000000475246 : loopne 0x475292 ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000047ea5a : loopne 0x47ea61 ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x000000000047ea59 : loopne 0x47ea62 ; add byte ptr [rax - 0x77], cl ; ret 0x38b
0x000000000047edf2 : loopne 0x47ee51 ; ret
0x000000000048aba4 : loopne 0x48abbb ; cmp al, 0xa ; jne 0x48ab5b ; call rbx
0x00000000004970d0 : loopne 0x4970e8 ; stc ; call rax
0x00000000004970d0 : loopne 0x4970ec ; stc ; call rax
0x00000000004974a0 : loopne 0x4974de ; stc ; jmp qword ptr [rax + 0x20fff93d]
0x0000000000497830 : loopne 0x4977d4 ; stc ; push rax ; wait ; stc ; call qword ptr [rax]
0x0000000000497858 : loopne 0x4977fd ; stc ; inc dword ptr [rax] ; popfq ; stc ; call qword ptr [rax]
0x000000000049787c : loopne 0x497822 ; stc ; inc dword ptr [rax] ; sahf ; stc ; jmp qword ptr [rax]
0x00000000004ae4b4 : loopne 0x4ae494 ; cld ; test al, 0x97 ; xchg eax, esp ; ret
0x00000000004b2228 : loopne 0x4b2240 ; std ; call qword ptr [rax]
0x00000000004b2289 : loopne 0x4b2289 ; call qword ptr [rax]
0x00000000004b29d8 : loopne 0x4b299b ; std ; call rdx
0x00000000004b341c : loopne 0x4b3417 ; hlt ; jmp qword ptr [rdx]
0x00000000004b7a19 : loopne 0x4b7a12 ; call rdx
0x00000000004ba2e0 : loopne 0x4ba294 ; clc ; call qword ptr [rcx]
0x00000000004ba800 : loopne 0x4ba7c9 ; clc ; call qword ptr [rbx]
0x00000000004ba830 : loopne 0x4ba7f9 ; clc ; call qword ptr [rdx]
0x00000000004bc040 : loopne 0x4bc0b0 ; cli ; jmp rdx
0x00000000004bdd40 : loopne 0x4bdda3 ; std ; call rcx
0x00000000004adeca : mov ah, 0x13 ; ret
0x000000000048d801 : mov ah, 0x24 ; pop rax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rcx]
0x00000000004973f4 : mov ah, 0x44 ; stc ; inc dword ptr [rsp + rax*2 - 7] ; call rsp
0x0000000000467de8 : mov ah, 0x76 ; cli ; dec dword ptr [rax - 0x77] ; ret
0x00000000004ba82c : mov ah, 0x78 ; add byte ptr [rax], al ; loopne 0x4ba7fd ; clc ; call qword ptr [rdx]
0x00000000004ae370 : mov ah, 0xa5 ; ret
0x00000000004be12c : mov ah, 0xb1 ; add byte ptr [rax], al ; push rax ; jp 0x4be135 ; jmp rbx
0x00000000004b2ab0 : mov ah, 0xc4 ; std ; jmp rsp
0x0000000000496e4d : mov ah, 0xf8 ; call qword ptr [rax]
0x00000000004574c0 : mov ah, 0xff ; dec dword ptr [rax - 0x39] ; ret 0xffc0
0x0000000000436e50 : mov ah, 2 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000004adcc4 : mov ah, bl ; push rsi ; ret
0x000000000048fdf3 : mov al, 0 ; add byte ptr [rax], al ; ret
0x0000000000497690 : mov al, 0x37 ; stc ; jmp qword ptr [rax]
0x00000000004976a8 : mov al, 0x3c ; stc ; jmp qword ptr [rax]
0x0000000000497498 : mov al, 0x40 ; stc ; inc dword ptr [rax + 0x40] ; stc ; jmp rax
0x0000000000497280 : mov al, 0x43 ; stc ; inc dword ptr [rax + 0x43] ; stc ; call rax
0x0000000000437770 : mov al, 0x48 ; mov dword ptr [rbp - 0x68], eax ; mov rdx, rax ; jmp 0x4377a9
0x000000000043780e : mov al, 0x48 ; mov dword ptr [rbp - 0x68], eax ; mov rdx, rax ; jmp 0x43784b
0x0000000000496e60 : mov al, 0x68 ; clc ; inc eax ; push 0xf8 ; call rax
0x00000000004977cc : mov al, 0x96 ; stc ; inc eax ; xchg eax, esi ; stc ; call rax
0x00000000004977fc : mov al, 0x97 ; stc ; call rax
0x0000000000497824 : mov al, 0x9b ; stc ; inc eax ; wait ; stc ; call rax
0x000000000043adab : mov al, 0xba ; add byte ptr [r15 + 0x6c4220], dil ; call rax
0x0000000000496f2c : mov al, 0xcc ; clc ; call rax
0x0000000000496f4c : mov al, 0xd5 ; clc ; call rax
0x0000000000496f6c : mov al, 0xeb ; clc ; jmp rcx
0x00000000004b0176 : mov al, 0xee ; fcmovb st(0), st(3) ; ret
0x00000000004b3670 : mov al, 0xef ; std ; call rdi
0x0000000000496e41 : mov al, 0xf8 ; jmp qword ptr [rax]
0x00000000004ba359 : mov al, 0xf8 ; jmp qword ptr [rsi]
0x00000000004bc98d : mov al, 0xfa ; jmp qword ptr [rdx]
0x000000000045955c : mov al, 0xff ; call qword ptr [rax + 0x8c28348]
0x00000000004577f8 : mov al, 0xff ; dec dword ptr [rax - 0x39] ; ret 0xffc0
0x0000000000436a34 : mov al, 6 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000004b2e84 : mov al, bl ; std ; dec dword ptr [rax] ; fdivr st(5) ; call rax
0x0000000000408c24 : mov al, byte ptr [rax + 1] ; add byte ptr [rax], al ; ret
0x00000000004bb9ad : mov al, byte ptr [rax] ; add byte ptr [rax + 0x53], al ; cli ; call rcx
0x0000000000468409 : mov al, byte ptr [rbx] ; add al, 0x16 ; ret
0x00000000004b6f0e : mov al, byte ptr [rbx] ; idiv bh ; sbb al, 0xd ; sub eax, ebp ; cmc ; jmp qword ptr [rdx]
0x000000000042f146 : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x000000000042f164 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x00000000004308d0 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x000000000042f120 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x0000000000408c5f : mov al, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x000000000042f130 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x000000000042b8b1 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x0000000000470f0d : mov bh, 0x3b ; and eax, 0x6894800 ; ret
0x0000000000467b97 : mov bh, 0x43 ; adc byte ptr [rax + rcx*4 + 0x63], al ; adc cl, byte ptr [rax + 1] ; ret
0x00000000004317e8 : mov bh, 0x48 ; lea eax, dword ptr [rdi + 7] ; ret
0x00000000004652a9 : mov bh, 0x75 ; nop ; jmp 0x465275
0x00000000004af1a4 : mov bh, 0xb4 ; mov edi, dword ptr [rdx] ; ret
0x00000000004b6c8c : mov bh, 0xe1 ; cmc ; jmp qword ptr [rdx]
0x00000000004471d8 : mov bh, 0xeb ; ret 0x1f0f
0x0000000000465381 : mov bh, 0xf0 ; and eax, 0x100 ; add al, ch ; ret 0xfa24
0x00000000004b66ed : mov bh, 0xf5 ; jmp qword ptr [rdx]
0x00000000004b7106 : mov bh, 1 ; idiv bh ; sbb al, 0xd ; cmp dh, dh ; cmc ; jmp qword ptr [rdx]
0x00000000004b08b3 : mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004330de : mov bl, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004b0283 : mov bl, 0x8e ; ret 0xdcd9
0x00000000004b551c : mov bl, 0x96 ; cmc ; jmp qword ptr [rdx]
0x0000000000436479 : mov bl, 0xa ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, rbp ; call rbx
0x00000000004b2e10 : mov bl, 0xc3 ; std ; inc ebx ; ret
0x0000000000496e49 : mov bl, 0xf8 ; inc eax ; mov ah, 0xf8 ; call qword ptr [rax]
0x00000000004b6bae : mov bl, 6 ; idiv bh ; sbb al, 0xd ; movsd dword ptr [rdi], dword ptr [rsi] ; loope 0x4b6bb5 ; jmp qword ptr [rdx]
0x0000000000468224 : mov byte ptr [r8 + 0x23], cl ; ret
0x0000000000468225 : mov byte ptr [rax + 0x23], cl ; ret
0x0000000000445185 : mov byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000004152b4 : mov byte ptr [rax + rbx], dh ; pop rbx ; ret
0x00000000004152b3 : mov byte ptr [rax + rbx], sil ; pop rbx ; ret
0x00000000004554d5 : mov byte ptr [rax + rdi - 1], 0 ; jmp 0x4517bf
0x0000000000434da2 : mov byte ptr [rax - 0x39], cl ; ret 0xffc0
0x0000000000469808 : mov byte ptr [rax], 0 ; jmp 0x4697a2
0x00000000004972ac : mov byte ptr [rbp - 7], 0xff ; push rsi ; stc ; jmp rsi
0x00000000004b9434 : mov byte ptr [rbx], bl ; clc ; jmp qword ptr [rdx]
0x00000000004b8028 : mov byte ptr [rcx], al ; ret
0x0000000000431538 : mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x0000000000430ea8 : mov byte ptr [rdi + 0x10], dh ; ret
0x00000000004315ae : mov byte ptr [rdi + 0x14], dh ; lea rax, qword ptr [rdi + 0x14] ; ret
0x0000000000430efe : mov byte ptr [rdi + 0x14], dh ; ret
0x0000000000431630 : mov byte ptr [rdi + 0x18], dh ; lea rax, qword ptr [rdi + 0x18] ; ret
0x0000000000430f80 : mov byte ptr [rdi + 0x18], dh ; ret
0x0000000000473a94 : mov byte ptr [rdi + 1], ch ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000004313e6 : mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000430dc6 : mov byte ptr [rdi + 2], dh ; ret
0x0000000000431402 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000430de2 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x0000000000430e23 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000427e6b : mov byte ptr [rdi - 1], dl ; ret
0x000000000040051e : mov byte ptr [rdi], 0 ; ret
0x00000000004313c0 : mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x0000000000430da0 : mov byte ptr [rdi], dh ; ret
0x000000000042b923 : mov byte ptr [rdi], dl ; ret
0x00000000004308f9 : mov byte ptr [rdx + 2], al ; lea rax, qword ptr [rdx + 2] ; ret
0x000000000042f149 : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x0000000000430927 : mov byte ptr [rdx + 4], al ; lea rax, qword ptr [rdx + 4] ; ret
0x000000000042f167 : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x00000000004308d2 : mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x000000000042f122 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x000000000045bed0 : mov byte ptr [rdx], cl ; jmp rdx
0x000000000048e150 : mov byte ptr [rip + 0x236729], 8 ; ret
0x0000000000401014 : mov byte ptr [rip + 0x2c1c25], 1 ; ret
0x00000000004598f9 : mov byte ptr [rsi + 0x1f0fffff], dl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb08
0x000000000041440d : mov byte ptr [rsi + rbx], bh ; mov rax, rsi ; pop rbx ; ret
0x000000000041440c : mov byte ptr [rsi + rbx], dil ; mov rax, rsi ; pop rbx ; ret
0x000000000041713d : mov byte ptr [rsi - 0x41000000], cl ; ret 0x4956
0x00000000004472b3 : mov byte ptr [rsi], al ; jne 0x447297 ; mov rax, rsi ; ret
0x000000000044722f : mov byte ptr [rsi], dl ; jne 0x44721f ; mov rax, rsi ; ret
0x00000000004adcc2 : mov ch, 0x31 ; mov ah, bl ; push rsi ; ret
0x00000000004af003 : mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004a8629 : mov ch, 0x45 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx], al ; ret 0x45
0x00000000004b4374 : mov ch, 0x4a ; cmc ; jmp qword ptr [rdx]
0x00000000004baf44 : mov ch, 0x60 ; stc ; jmp qword ptr [rdx]
0x000000000046480a : mov ch, 0x89 ; ret 0xe283
0x000000000043b177 : mov ch, 0x94 ; add eax, dword ptr [rax] ; mov rdi, rbx ; call r14
0x00000000004b039f : mov ch, 0x99 ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x00000000004b0d4a : mov ch, 0xab ; ret
0x0000000000425ba6 : mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004be12d : mov cl, 0 ; add byte ptr [rax + 0x7a], dl ; sti ; jmp rbx
0x000000000041c61b : mov cl, 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000410ed7 : mov cl, 0xd ; ret
0x00000000004b28e5 : mov cl, 0xfd ; call qword ptr [rdi]
0x00000000004b28e1 : mov cl, 0xfd ; jmp qword ptr [rcx + 0x17fffdb1]
0x000000000041f685 : mov cl, byte ptr [rbx - 0x37d67dfc] ; ret
0x0000000000417bb4 : mov cl, byte ptr [rdi - 0x73] ; adc al, 0xa ; jmp r10
0x000000000045be32 : mov cl, byte ptr [rdx] ; jmp rdx
0x00000000004b0172 : mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x000000000046d68a : mov cl, ch ; ret
0x0000000000463b6b : mov cl, dl ; and cl, 0xf ; je 0x463b97 ; ret
0x000000000043f734 : mov cs, ebx ; add al, byte ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000004b042c : mov cs, edi ; ret 0x8b36
0x000000000046980c : mov cs, word ptr [rax - 0x7d] ; ret
0x0000000000421abe : mov cs, word ptr [rip - 0x7cb80000] ; ret 0xe910
0x000000000043dd4d : mov cs, word ptr [rsp + rax + 0x29480000] ; ret 0x8b49
0x0000000000430dc0 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000490841 : mov dh, 0 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000040b226 : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040e1b0 : mov dh, 0 ; pop rbx ; ret
0x000000000040f80e : mov dh, 0 ; ret
0x000000000042b921 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000041c804 : mov dh, 0x16 ; sub eax, edx ; ret
0x0000000000406ed0 : mov dh, 0x17 ; test dl, dl ; jne 0x406eb6 ; ret
0x0000000000452f22 : mov dh, 0x30 ; add r12, 1 ; jmp 0x452ef3
0x00000000004972c8 : mov dh, 0x42 ; stc ; inc dword ptr [rsi + 0x42] ; stc ; call rsi
0x000000000048e75f : mov dh, 0x43 ; add dword ptr [rax - 0x7d], ecx ; ret
0x0000000000456a8f : mov dh, 0x45 ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004482f4 : mov dh, 0x46 ; or al, 0x89 ; ret 0xeac0
0x0000000000432cb1 : mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000432ca1 : mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000432c71 : mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x0000000000432c91 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000432c81 : mov dh, 0x47 ; movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x000000000043e35a : mov dh, 0x48 ; dec dword ptr [rcx - 0x7d] ; ret
0x000000000043e3a4 : mov dh, 0x4a ; dec dword ptr [rax - 0x7d] ; ret 0x4101
0x00000000004411c0 : mov dh, 0x4a ; inc dword ptr [rcx - 0x78] ; add rcx, qword ptr [r9 + 0x39] ; ret
0x0000000000468220 : mov dh, 0x4c ; and al, 0xeb ; mov byte ptr [r8 + 0x23], cl ; ret
0x00000000004af162 : mov dh, 0x4e ; ret 0x474c
0x0000000000404fba : mov dh, 0x53 ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000045f874 : mov dh, 0x53 ; or al, 0xf6 ; ret 0x7404
0x000000000045fe41 : mov dh, 0x53 ; or al, 0xf6 ; ret 0xf04
0x0000000000432cb5 : mov dh, 0x56 ; cmc ; sub eax, edx ; ret
0x0000000000432ca5 : mov dh, 0x56 ; hlt ; sub eax, edx ; ret
0x0000000000432c75 : mov dh, 0x56 ; int1 ; sub eax, edx ; ret
0x0000000000432c85 : mov dh, 0x56 ; sub eax, edx ; ret
0x0000000000435e31 : mov dh, 0x57 ; sbb byte ptr [rcx - 0xa], al ; ret 0x7401
0x0000000000476fcc : mov dh, 0x75 ; add byte ptr [rax - 0x7c], al ; test byte ptr [rdi], 0x84 ; ret 0x15
0x00000000004b64ac : mov dh, 0xa8 ; cmc ; jmp qword ptr [rdx]
0x00000000004453fd : mov dh, 0xc0 ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x000000000048e3e0 : mov dh, 0xc0 ; movsxd rax, dword ptr [r11 + rax*4] ; add rax, r11 ; jmp rax
0x000000000048e4e1 : mov dh, 0xc0 ; movsxd rax, dword ptr [rcx + rax*4] ; add rcx, rax ; jmp rcx
0x000000000047f06d : mov dh, 0xc0 ; neg eax ; ret
0x000000000047ee73 : mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000468186 : mov dh, 0xc0 ; ret
0x0000000000488e74 : mov dh, 0xc1 ; cli ; add ebp, dword ptr [rcx] ; ret 0x294c
0x0000000000433b08 : mov dh, 0xc1 ; pop rbx ; ret
0x0000000000433b30 : mov dh, 0xc2 ; pop rbx ; ret
0x000000000040d006 : mov dh, 0xc5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004b03a4 : mov dh, 0xc7 ; ret 0xe71f
0x000000000048d8c6 : mov dh, 0xc9 ; movsxd rcx, dword ptr [rdi + rcx*4] ; add rcx, rdi ; jmp rcx
0x000000000041c82a : mov dh, 0xd2 ; sub eax, edx ; ret
0x0000000000418f61 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000424c84 : mov dh, 0xe ; sub eax, ecx ; ret
0x00000000004b66a5 : mov dh, 0xf5 ; jmp qword ptr [rdx]
0x000000000046231f : mov dh, 0xf6 ; ret 0x7508
0x00000000004565af : mov dh, 0xff ; dec dword ptr [rax - 0x39] ; ret 0xffc0
0x000000000040b231 : mov dh, 2 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040ddfe : mov dh, 2 ; pop rbx ; ret
0x0000000000424c81 : mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000041c801 : mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000418f64 : mov dh, 7 ; sub eax, ecx ; ret
0x0000000000433cbe : mov dh, byte ptr [rdi + rbx*8 - 0xd] ; ret
0x0000000000473792 : mov dh, byte ptr [rdx + 1] ; add byte ptr [rcx - 0x77], cl ; ret
0x00000000004471d5 : mov dl, 0x40 ; jle 0x447195 ; jmp 0x4471a2
0x00000000004a8bd1 : mov dl, 0x45 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, bl ; ret 0x45
0x000000000049732c : mov dl, 0x45 ; stc ; inc dword ptr [rdx + 0x45] ; stc ; call rdx
0x0000000000401661 : mov dl, 1 ; add byte ptr [rax], al ; call qword ptr [rbx + 0x10]
0x0000000000436cb2 : mov dl, 4 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000436bd2 : mov dl, 5 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000427ef0 : mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000496de9 : mov dr1, eax ; inc dword ptr [rax - 0x70] ; clc ; jmp rax
0x00000000004bc719 : mov dr1, edx ; jmp rbx
0x0000000000489133 : mov dword ptr [0x2d0], esi ; mov eax, esi ; ret
0x0000000000461579 : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x00000000004615b9 : mov dword ptr [rax + 0x10], esi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000462419 : mov dword ptr [rax + 0x18], edx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000467725 : mov dword ptr [rax + 0x28], 0 ; pop rbx ; ret
0x000000000046157d : mov dword ptr [rax + 0x40], ecx ; ret
0x00000000004624b7 : mov dword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x000000000040e94a : mov dword ptr [rax + 8], 0 ; ret
0x00000000004064dc : mov dword ptr [rax + 8], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004704f6 : mov dword ptr [rax + 8], edx ; ret
0x000000000041ce22 : mov dword ptr [rax + rdx - 2], ecx ; ret
0x0000000000470475 : mov dword ptr [rax], 0 ; call r12
0x00000000004456c5 : mov dword ptr [rax], 0x16 ; or eax, 0xffffffff ; ret
0x0000000000414430 : mov dword ptr [rax], 0xc ; xor eax, eax ; pop rbx ; ret
0x00000000004145e0 : mov dword ptr [rax], 0xc ; xor eax, eax ; ret
0x00000000004bf73d : mov dword ptr [rax], 0xfd031000 ; jmp rsp
0x0000000000467772 : mov dword ptr [rax], 2 ; xor eax, eax ; ret
0x00000000004bb93d : mov dword ptr [rax], eax ; add al, al ; push rdx ; cli ; jmp rbx
0x000000000043d9f5 : mov dword ptr [rax], ebx ; jmp 0x43d9be
0x00000000004404d7 : mov dword ptr [rax], ebx ; mov eax, dword ptr [rsp + 0x24] ; jmp 0x4404a8
0x000000000044160f : mov dword ptr [rax], ebx ; mov eax, dword ptr [rsp + 0x2c] ; jmp 0x4415e0
0x000000000043cfaf : mov dword ptr [rax], ecx ; mov eax, 7 ; jmp 0x43cf82
0x0000000000461b05 : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x000000000047efc5 : mov dword ptr [rax], edi ; pop rbx ; ret
0x0000000000461a60 : mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x0000000000468233 : mov dword ptr [rax], edx ; or eax, 0xffffffff ; ret
0x000000000047efb9 : mov dword ptr [rax], edx ; pop rbx ; ret
0x000000000044526f : mov dword ptr [rax], edx ; ret
0x0000000000467760 : mov dword ptr [rax], edx ; xor eax, eax ; pop rbx ; ret
0x0000000000462731 : mov dword ptr [rax], edx ; xor eax, eax ; ret
0x000000000047151f : mov dword ptr [rbp + 0x10], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046f949 : mov dword ptr [rbp - 0x100], eax ; call rsi
0x0000000000456624 : mov dword ptr [rbp - 0x1e0], eax ; call 0x4228d8
0x0000000000456623 : mov dword ptr [rbp - 0x1e0], r8d ; call 0x4228d9
0x0000000000439ed9 : mov dword ptr [rbp - 0x68], eax ; call rcx
0x0000000000437772 : mov dword ptr [rbp - 0x68], eax ; mov rdx, rax ; jmp 0x4377a7
0x0000000000437810 : mov dword ptr [rbp - 0x68], eax ; mov rdx, rax ; jmp 0x437849
0x000000000044e1de : mov dword ptr [rbp - 0xb0], eax ; mov rdi, rbx ; call rax
0x000000000046ee79 : mov dword ptr [rbp - 0xe0], ebx ; call rax
0x000000000046f5a1 : mov dword ptr [rbp - 0xe0], ebx ; call rsi
0x0000000000443217 : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x000000000047475e : mov dword ptr [rbx + 0x10], eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000474712 : mov dword ptr [rbx + 0x10], eax ; add rsp, 0x30 ; pop rbx ; ret
0x000000000040b0c7 : mov dword ptr [rbx + 0x10], eax ; mov rax, rbx ; pop rbx ; ret
0x0000000000467a18 : mov dword ptr [rbx + 0x10], eax ; mov rdx, rbp ; xor ecx, ecx ; jmp 0x4679ee
0x000000000040b7c9 : mov dword ptr [rbx + 0x10], eax ; xor eax, eax ; pop rbx ; ret
0x0000000000411a3b : mov dword ptr [rbx + 0x14], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000474698 : mov dword ptr [rbx + 0x18], eax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000048cea5 : mov dword ptr [rbx + 0x18], eax ; pop rbx ; ret
0x000000000040dc93 : mov dword ptr [rbx + 0x20], eax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x0000000000489173 : mov dword ptr [rbx + 0x20], eax ; pop rbx ; ret
0x00000000004453ff : mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x000000000040e13f : mov dword ptr [rbx + 0x40], esp ; mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040dd1a : mov dword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x000000000040f0b1 : mov dword ptr [rbx + 0x60], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040c622 : mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000046160e : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000004622e1 : mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040b077 : mov dword ptr [rbx + 0x90], eax ; pop rbx ; ret
0x000000000040dfe5 : mov dword ptr [rbx + 8], eax ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x0000000000443237 : mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000040e1ac : mov dword ptr [rbx + 8], edx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000048d2f6 : mov dword ptr [rbx], eax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000048a981 : mov dword ptr [rbx], eax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000040e142 : mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004920bc : mov dword ptr [rbx], eax ; pop rbx ; ret
0x000000000046241c : mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000040e0a0 : mov dword ptr [rbx], edx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000040994c : mov dword ptr [rbx], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040dc96 : mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x0000000000404503 : mov dword ptr [rcx + 1], ebx ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000463971 : mov dword ptr [rcx + 4], esi ; jne 0x463982 ; mov dword ptr [rcx + 8], esi ; ret
0x0000000000463976 : mov dword ptr [rcx + 8], esi ; ret
0x0000000000468660 : mov dword ptr [rcx - 0x80], 0xb9743afa ; ret
0x0000000000468710 : mov dword ptr [rcx], 0x8348c889 ; ret 0x8401
0x000000000048fd59 : mov dword ptr [rcx], edx ; add rsp, 8 ; ret
0x000000000043154d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000043158b : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x000000000043160d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x0000000000430efb : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x0000000000430f7d : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x0000000000430ebd : mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000430fc0 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x0000000000430fe0 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000430fa1 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x0000000000431673 : mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x0000000000430fc3 : mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000040dc23 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x00000000004231aa : mov dword ptr [rdi + 0x18], eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000431655 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x0000000000431693 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x0000000000430fa5 : mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000046df48 : mov dword ptr [rdi + 0x300], eax ; ret
0x000000000046df1c : mov dword ptr [rdi + 0x308], eax ; ret
0x0000000000423099 : mov dword ptr [rdi + 0x38], ecx ; ret
0x000000000040dc53 : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000048fd91 : mov dword ptr [rdi + 0x98], esi ; ret
0x00000000004315cd : mov dword ptr [rdi + 0xe], ecx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x0000000000430f1d : mov dword ptr [rdi + 0xe], ecx ; ret
0x000000000043156b : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000004315ed : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x0000000000430edb : mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000042b765 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000042b5a8 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000042b848 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x000000000042b6f5 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000042b538 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000431437 : mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000042b685 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000042b4c8 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000430e07 : mov dword ptr [rdi + 3], edx ; ret
0x0000000000431419 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000042b458 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000430df9 : mov dword ptr [rdi + 4], edx ; ret
0x00000000004314cb : mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000042b3e8 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000430e6b : mov dword ptr [rdi + 5], edx ; ret
0x00000000004314eb : mov dword ptr [rdi + 6], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000042b378 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000430e7b : mov dword ptr [rdi + 6], edx ; ret
0x0000000000431489 : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000043150b : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000042b308 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000430e49 : mov dword ptr [rdi + 7], edx ; ret
0x000000000040dc27 : mov dword ptr [rdi + 8], eax ; ret
0x0000000000475544 : mov dword ptr [rdi + 8], ecx ; ret
0x00000000004314a9 : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000043146b : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 9] ; ret
0x0000000000476484 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000430e3b : mov dword ptr [rdi + 8], edx ; ret
0x000000000041ce29 : mov dword ptr [rdi + rdx - 4], ecx ; ret
0x000000000041ce32 : mov dword ptr [rdi + rdx - 8], ecx ; ret
0x000000000048fd4b : mov dword ptr [rdi + rsi*8], edx ; add rsp, 8 ; ret
0x0000000000427bb5 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000427bf3 : mov dword ptr [rdi - 0x10], ebx ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004754af : mov dword ptr [rdi - 0x10], ecx ; ret
0x0000000000427f3c : mov dword ptr [rdi - 0xa], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042adb8 : mov dword ptr [rdi - 0xa], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042811c : mov dword ptr [rdi - 0xb], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042ad38 : mov dword ptr [rdi - 0xb], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042830c : mov dword ptr [rdi - 0xc], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042acb8 : mov dword ptr [rdi - 0xc], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004284dd : mov dword ptr [rdi - 0xd], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000042ac29 : mov dword ptr [rdi - 0xd], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004286dd : mov dword ptr [rdi - 0xe], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000042ab99 : mov dword ptr [rdi - 0xe], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004288dd : mov dword ptr [rdi - 0xf], ecx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000042ab09 : mov dword ptr [rdi - 0xf], edx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004282bd : mov dword ptr [rdi - 2], ecx ; ret
0x00000000004280d5 : mov dword ptr [rdi - 2], edx ; ret
0x00000000004282b9 : mov dword ptr [rdi - 3], edx ; mov word ptr [rdi - 2], cx ; ret
0x0000000000428699 : mov dword ptr [rdi - 4], ecx ; ret
0x0000000000427d6f : mov dword ptr [rdi - 4], edx ; ret
0x0000000000428696 : mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000428896 : mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000428a96 : mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000427bb9 : mov dword ptr [rdi - 8], ecx ; ret
0x0000000000427bf7 : mov dword ptr [rdi - 8], edx ; ret
0x0000000000427d6c : mov dword ptr [rdi - 9], eax ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000427e68 : mov dword ptr [rdi - 9], ecx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000427db4 : mov dword ptr [rdi - 9], ecx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042ae38 : mov dword ptr [rdi - 9], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000047664e : mov dword ptr [rdi], eax ; mov eax, 1 ; ret
0x0000000000422eea : mov dword ptr [rdi], eax ; pop rbx ; pop rbp ; ret
0x0000000000475434 : mov dword ptr [rdi], eax ; shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x000000000047553e : mov dword ptr [rdi], eax ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000450f76 : mov dword ptr [rdi], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000431405 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000431457 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 8] ; ret
0x00000000004313e4 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000430dc4 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x0000000000431435 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x0000000000430e05 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x0000000000431487 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x0000000000430e47 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x00000000004314a7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x0000000000430e57 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000041ce27 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx - 4], ecx ; ret
0x0000000000430e68 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x0000000000430e78 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x0000000000430e88 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x000000000041ce2f : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x0000000000430df6 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x0000000000430e38 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000422e69 : mov dword ptr [rdi], ecx ; ret
0x00000000004313d4 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000004313f2 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000431444 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000400abb : mov dword ptr [rdi], edx ; ret
0x000000000047662f : mov dword ptr [rdi], esi ; mov eax, 1 ; mov dword ptr [rdx], ecx ; ret
0x0000000000408c23 : mov dword ptr [rdx + 0x140], ecx ; ret
0x000000000043c1d5 : mov dword ptr [rdx + 0x50], ecx ; mov dword ptr [rdx + 0x54], eax ; ret
0x000000000043c1d8 : mov dword ptr [rdx + 0x54], eax ; ret
0x0000000000430957 : mov dword ptr [rdx + 3], eax ; lea rax, qword ptr [rdx + 6] ; ret
0x000000000042f187 : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x0000000000430939 : mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x000000000042f179 : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x00000000004309eb : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x0000000000430969 : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 8] ; ret
0x000000000042f199 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x0000000000430a0b : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x0000000000430989 : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 9] ; ret
0x000000000042f1a9 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x00000000004309a9 : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xa] ; ret
0x0000000000430a2b : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x000000000042f1b9 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x00000000004309c9 : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xb] ; ret
0x00000000004308bb : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x000000000042f10b : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x000000000040f208 : mov dword ptr [rdx + 8], ecx ; ret
0x0000000000455a27 : mov dword ptr [rdx], eax ; jmp 0x451c9c
0x00000000004308e4 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 1] ; ret
0x0000000000430912 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x0000000000430864 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 7] ; ret
0x0000000000434cb2 : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x00000000004766e3 : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000042f0b4 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x0000000000434a5e : mov dword ptr [rdx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000047efa5 : mov dword ptr [rdx], eax ; pop rbx ; ret
0x000000000045be8e : mov dword ptr [rdx], ecx ; jmp rdx
0x00000000004618f6 : mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000040f174 : mov dword ptr [rdx], ecx ; ret
0x00000000004110e4 : mov dword ptr [rdx], esp ; add byte ptr [rax + 0x6c1860], bh ; ret
0x0000000000445245 : mov dword ptr [rip + 0x27d8ad], eax ; je 0x445259 ; ret
0x0000000000438ff6 : mov dword ptr [rip + 0x287f9c], edx ; pop rbx ; ret
0x000000000043965b : mov dword ptr [rip + 0x28b99f], edi ; pop rbx ; ret
0x0000000000439282 : mov dword ptr [rip + 0x28bd78], eax ; pop rbx ; ret
0x0000000000439281 : mov dword ptr [rip + 0x28bd78], r8d ; pop rbx ; ret
0x0000000000401bda : mov dword ptr [rip + 0x2bf490], eax ; xor eax, eax ; ret
0x0000000000400e0b : mov dword ptr [rip + 0x2c131f], eax ; pop r12 ; ret
0x0000000000465b30 : mov dword ptr [rsi + 0x28], eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000491b99 : mov dword ptr [rsi + 0x28], eax ; pop rbx ; ret
0x000000000048fd7b : mov dword ptr [rsi], eax ; mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000041020b : mov dword ptr [rsi], eax ; mov rax, r8 ; ret
0x0000000000470f12 : mov dword ptr [rsi], eax ; ret
0x0000000000406616 : mov dword ptr [rsp + 0x10], eax ; mov rdi, r10 ; call 0x4228d9
0x0000000000413d71 : mov dword ptr [rsp + 0x10], ecx ; call rdx
0x00000000004904e7 : mov dword ptr [rsp + 0x10], ecx ; mov rsi, qword ptr [rbp] ; call r14
0x0000000000474adb : mov dword ptr [rsp + 0x18], esi ; mov edi, 0x6c21e0 ; call rax
0x0000000000413d6c : mov dword ptr [rsp + 0x20], eax ; mov qword ptr [rsp + 0x10], rcx ; call rdx
0x0000000000413b8a : mov dword ptr [rsp + 0x28], ebx ; call rax
0x0000000000413b89 : mov dword ptr [rsp + 0x28], r11d ; call rax
0x00000000004680d0 : mov dword ptr [rsp + 0x30], eax ; jmp 0x46808a
0x0000000000413b85 : mov dword ptr [rsp + 0x30], edx ; mov dword ptr [rsp + 0x28], r11d ; call rax
0x00000000004885cb : mov dword ptr [rsp + 0x90], ebx ; call r12
0x000000000043f46f : mov dword ptr [rsp + 8], eax ; call r12
0x000000000043c60f : mov dword ptr [rsp + 8], eax ; call r14
0x000000000043cf2e : mov dword ptr [rsp + 8], eax ; call r15
0x0000000000435be6 : mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000414ecd : mov dword ptr [rsp + 8], edx ; call 0x411136
0x000000000043e845 : mov dword ptr [rsp + 8], esi ; mov rsi, qword ptr [rsp + 0x58] ; call rax
0x000000000048ca96 : mov dword ptr [rsp - 0x14], eax ; fld xword ptr [rsp - 0x18] ; ret
0x0000000000445375 : mov dword ptr [rsp - 2], edi ; fldcw word ptr [rsp - 2] ; ret
0x00000000004796a1 : mov dword ptr [rsp], eax ; call 0x475965
0x000000000043dfbc : mov dword ptr [rsp], eax ; call qword ptr [rbx]
0x000000000043a0e5 : mov dword ptr [rsp], eax ; call rbx
0x00000000004145df : mov dword ptr fs:[rax], 0xc ; xor eax, eax ; ret
0x0000000000467771 : mov dword ptr fs:[rax], 2 ; xor eax, eax ; ret
0x0000000000468232 : mov dword ptr fs:[rax], edx ; or eax, 0xffffffff ; ret
0x000000000046775f : mov dword ptr fs:[rax], edx ; xor eax, eax ; pop rbx ; ret
0x0000000000468298 : mov dword ptr fs:[rax], edx ; xor eax, eax ; ret
0x0000000000455a26 : mov dword ptr fs:[rdx], eax ; jmp 0x451c9d
0x0000000000434cb1 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000434a5d : mov dword ptr fs:[rdx], eax ; or rax, 0xffffffffffffffff ; ret
0x00000000004280d0 : mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000430db0 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000401583 : mov eax, 0 ; leave ; ret
0x0000000000433baf : mov eax, 0x10 ; pop rbx ; ret
0x0000000000417097 : mov eax, 0x16 ; je 0x4170a7 ; ret
0x0000000000433bd2 : mov eax, 0x20 ; pop rbx ; ret
0x0000000000433bcb : mov eax, 0x30 ; pop rbx ; ret
0x0000000000433bc4 : mov eax, 0x40 ; pop rbx ; ret
0x0000000000490675 : mov eax, 0x41c00149 ; jmp rax
0x00000000004ae2bb : mov eax, 0x45155e93 ; ret 0x591c
0x000000000041d28a : mov eax, 0x48fffffb ; mov eax, edi ; ret
0x0000000000433bbd : mov eax, 0x60 ; pop rbx ; ret
0x0000000000437936 : mov eax, 0x64 ; test edx, edx ; cmovne eax, edx ; ret
0x0000000000467f60 : mov eax, 0x66 ; syscall ; ret
0x0000000000467f80 : mov eax, 0x68 ; syscall ; ret
0x0000000000467f70 : mov eax, 0x6b ; syscall ; ret
0x0000000000467f90 : mov eax, 0x6c ; syscall ; ret
0x00000000004110e8 : mov eax, 0x6c1860 ; ret
0x00000000004394ca : mov eax, 0x6c5000 ; ret
0x0000000000433bb6 : mov eax, 0x80 ; pop rbx ; ret
0x000000000046be74 : mov eax, 0x83ffffd4 ; clc ; inc dword ptr [rcx - 0x77] ; ret 0x850f
0x0000000000434c06 : mov eax, 0x894c1f74 ; ret 0x6348
0x0000000000470875 : mov eax, 0x89fffffb ; ret 0xc083
0x000000000046e003 : mov eax, 0x8c48348 ; pop rbx ; pop rbp ; ret
0x00000000004648e0 : mov eax, 0xc9 ; syscall ; ret
0x0000000000437aa2 : mov eax, 0xca ; syscall ; pop rdx ; pop rsi ; ret
0x000000000043c297 : mov eax, 0xffffffff ; cmovns eax, edx ; ret
0x0000000000409d95 : mov eax, 0xffffffff ; pop r15 ; ret
0x000000000040a81d : mov eax, 0xffffffff ; pop rbp ; ret
0x00000000004429b7 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040ab14 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x000000000040b081 : mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040e180 : mov eax, 0xffffffff ; ret
0x0000000000476631 : mov eax, 1 ; mov dword ptr [rdx], ecx ; ret
0x0000000000450f8d : mov eax, 1 ; pop r13 ; ret
0x0000000000450ebf : mov eax, 1 ; pop r14 ; ret
0x000000000046b51a : mov eax, 1 ; pop r15 ; ret
0x000000000040e7b2 : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043415b : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x000000000047181f : mov eax, 1 ; pop rbx ; ret
0x0000000000438fb6 : mov eax, 1 ; ret
0x0000000000490620 : mov eax, 2 ; add rsp, 8 ; ret
0x0000000000463bd1 : mov eax, 2 ; ret
0x0000000000463be1 : mov eax, 3 ; ret
0x0000000000490610 : mov eax, 4 ; add rsp, 8 ; ret
0x0000000000463bf1 : mov eax, 4 ; ret
0x0000000000463c01 : mov eax, 5 ; ret
0x0000000000463c11 : mov eax, 6 ; ret
0x000000000043cfb1 : mov eax, 7 ; jmp 0x43cf80
0x0000000000463c21 : mov eax, 7 ; ret
0x00000000004905f2 : mov eax, 8 ; add rsp, 8 ; ret
0x0000000000433bd9 : mov eax, 8 ; pop rbx ; ret
0x000000000046192c : mov eax, dword ptr [rax + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000040dd4c : mov eax, dword ptr [rax + 0x18] ; jmp rax
0x000000000040a8c3 : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x000000000040df38 : mov eax, dword ptr [rax + 0x28] ; jmp rax
0x000000000040e2f8 : mov eax, dword ptr [rax + 0x40] ; jmp rax
0x000000000048cb03 : mov eax, dword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000040e74c : mov eax, dword ptr [rax + 0x48] ; jmp rax
0x0000000000460bf4 : mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000048b410 : mov eax, dword ptr [rax + 8] ; add rax, qword ptr [rbx] ; call rax
0x0000000000474c91 : mov eax, dword ptr [rax + 8] ; ret
0x000000000044528f : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x00000000004bbb15 : mov eax, dword ptr [rax] ; add al, bl ; push rsi ; cli ; call rcx
0x00000000004bbaad : mov eax, dword ptr [rax] ; add al, dl ; push rsp ; cli ; call rsp
0x000000000048fcf1 : mov eax, dword ptr [rax] ; add rsp, 8 ; ret
0x00000000004554d3 : mov eax, dword ptr [rax] ; mov byte ptr [rax + rdi - 1], 0 ; jmp 0x4517c1
0x00000000004920b9 : mov eax, dword ptr [rax] ; mov qword ptr [rbx], r8 ; pop rbx ; ret
0x000000000047182f : mov eax, dword ptr [rax] ; ret
0x0000000000436035 : mov eax, dword ptr [rbp - 0x48] ; call rax
0x000000000043aa71 : mov eax, dword ptr [rbp - 0x60] ; call rax
0x0000000000472c68 : mov eax, dword ptr [rbp] ; add rax, qword ptr [rdx + 8] ; call rax
0x000000000047efc1 : mov eax, dword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x0000000000467cc8 : mov eax, dword ptr [rbx + 8] ; test rax, rax ; je 0x467cda ; call rax
0x000000000048f43d : mov eax, dword ptr [rbx] ; movsxd rax, dword ptr [r15 + rax*4] ; add rax, r15 ; jmp rax
0x0000000000467ecd : mov eax, dword ptr [rcx + 0x10] ; test rax, rax ; je 0x467ee3 ; call rax
0x000000000042f184 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x0000000000433811 : mov eax, dword ptr [rcx + 4] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000042f196 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x000000000042f1a6 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x000000000042f1b6 : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x000000000042f1c6 : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x000000000041f92a : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x0000000000421202 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000430910 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x000000000042f150 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x0000000000430861 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x000000000042f0b1 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x00000000004308e1 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x000000000042f131 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x000000000046f282 : mov eax, dword ptr [rdi + 0x10] ; add rax, qword ptr [r14] ; call rax
0x00000000004626af : mov eax, dword ptr [rdi + 0x10] ; shr rdx, 2 ; sub eax, edx ; ret
0x000000000040f180 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000040f1a8 : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000460bf1 : mov eax, dword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000040f4a1 : mov eax, dword ptr [rdi + 0x68] ; ret
0x000000000047e878 : mov eax, dword ptr [rdi + 0x70] ; test eax, eax ; js 0x47e890 ; ret
0x000000000048fd01 : mov eax, dword ptr [rdi + 0x90] ; ret
0x000000000048fd61 : mov eax, dword ptr [rdi + 0x98] ; ret
0x000000000048fda1 : mov eax, dword ptr [rdi + 0xa0] ; ret
0x000000000048fe01 : mov eax, dword ptr [rdi + 0xa8] ; ret
0x000000000048fdf1 : mov eax, dword ptr [rdi + 0xb0] ; ret
0x000000000048fdb1 : mov eax, dword ptr [rdi + 0xb8] ; ret
0x0000000000474c31 : mov eax, dword ptr [rdi] ; cmp rax, rsi ; je 0x474c47 ; ret
0x0000000000491dc0 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x491dd7 ; ret
0x0000000000460bcb : mov eax, dword ptr [rdx + 0x48] ; cmp eax, dword ptr [rdx + 0x4c] ; cmovne eax, ecx ; ret
0x0000000000433cb9 : mov eax, dword ptr [rdx + rax*4] ; sub eax, dword ptr [rdx + rcx*4] ; je 0x433ca9 ; ret
0x000000000041f686 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000040bfa4 : mov eax, dword ptr [rdx] ; add byte ptr [rdx + 0x48], bl ; cwde ; ret
0x000000000040a828 : mov eax, dword ptr [rdx] ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000049089c : mov eax, dword ptr [rdx] ; add rsp, 8 ; ret
0x0000000000461b07 : mov eax, dword ptr [rdx] ; pop rbx ; ret
0x0000000000470e1b : mov eax, dword ptr [rdx] ; ret
0x000000000040f161 : mov eax, dword ptr [rdx] ; test rax, rax ; jne 0x40f160 ; ret
0x000000000048d2b0 : mov eax, dword ptr [rip + 0x237ce2] ; ret
0x0000000000470f0b : mov eax, dword ptr [rip + 0x253bb7] ; mov qword ptr [rsi], rax ; ret
0x0000000000442871 : mov eax, dword ptr [rip + 0x2819f9] ; ret
0x000000000043a271 : mov eax, dword ptr [rip + 0x28add1] ; ret
0x000000000040f481 : mov eax, dword ptr [rip + 0x2b1c19] ; ret
0x000000000046ed04 : mov eax, dword ptr [rsi + 0x10] ; add rax, qword ptr [r15] ; call rax
0x00000000004b3f84 : mov eax, dword ptr [rsi - 0xb] ; jmp qword ptr [rdx]
0x00000000004908e1 : mov eax, dword ptr [rsi] ; add rsp, 8 ; ret
0x0000000000461a62 : mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000046f3b4 : mov eax, dword ptr [rsp + 0x10] ; add rax, qword ptr [rbx] ; call rax
0x0000000000433d74 : mov eax, dword ptr [rsp + 0x10] ; add rsp, 0x20 ; pop rbx ; ret
0x000000000048fdd6 : mov eax, dword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x0000000000435d0a : mov eax, dword ptr [rsp + 0x10] ; call rax
0x0000000000401766 : mov eax, dword ptr [rsp + 0x18] ; call rax
0x00000000004404d9 : mov eax, dword ptr [rsp + 0x24] ; jmp 0x4404a6
0x0000000000441611 : mov eax, dword ptr [rsp + 0x2c] ; jmp 0x4415de
0x000000000043d9f0 : mov eax, dword ptr [rsp + 0x30] ; mov qword ptr [rax], rbx ; jmp 0x43d9c3
0x000000000047496b : mov eax, dword ptr [rsp + 0x48] ; add rsp, 0x78 ; ret
0x00000000004747dd : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x48 ; ret
0x0000000000468316 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x28 ; ret
0x000000000047ec8f : mov eax, dword ptr [rsp] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000043adc8 : mov eax, dword ptr [rsp] ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x0000000000473617 : mov eax, dword ptr [rsp] ; add rsp, 0x48 ; jmp r11
0x000000000047182e : mov eax, dword ptr fs:[rax] ; ret
0x000000000044f088 : mov eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000414782 : mov eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000458dec : mov eax, eax ; jmp 0x458c09
0x0000000000410323 : mov eax, eax ; nop dword ptr [rax] ; ret
0x000000000041020e : mov eax, eax ; ret
0x000000000040bf2a : mov eax, ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040994a : mov eax, ebp ; mov dword ptr [rbx], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000460b39 : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000408956 : mov eax, ebp ; pop rbp ; pop r12 ; ret
0x000000000044c873 : mov eax, ebp ; pop rbp ; ret
0x0000000000467e7b : mov eax, ebp ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000435730 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000040fbe5 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000471642 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000044c7f5 : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000004765c3 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x0000000000471ac8 : mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000408ce4 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000408db9 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043559e : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000040b0cb : mov eax, ebx ; pop rbx ; ret
0x0000000000476487 : mov eax, ecx ; adc eax, eax ; ret
0x0000000000463329 : mov eax, ecx ; jmp 0x46318b
0x0000000000401f43 : mov eax, ecx ; pop r13 ; ret
0x0000000000401ec9 : mov eax, ecx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000447347 : mov eax, ecx ; pop rbx ; ret
0x0000000000464529 : mov eax, ecx ; ret
0x0000000000468410 : mov eax, edi ; nop word ptr [rax + rax] ; ret
0x0000000000410658 : mov eax, edi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040f4b1 : mov eax, edi ; ret
0x000000000048ce4e : mov eax, edx ; add rsp, 0x28 ; ret
0x000000000047f133 : mov eax, edx ; add rsp, 0x38 ; ret
0x000000000048910b : mov eax, edx ; jle 0x489116 ; ret
0x0000000000409089 : mov eax, edx ; pop r12 ; ret
0x00000000004638ec : mov eax, edx ; pop r14 ; ret
0x0000000000470da7 : mov eax, edx ; pop rbp ; ret
0x0000000000450d7b : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004155b9 : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000410d6f : mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000040860b : mov eax, edx ; pop rbx ; ret
0x0000000000417898 : mov eax, edx ; ret
0x0000000000474ee6 : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; jmp rdx
0x0000000000467bad : mov eax, esi ; pop r14 ; ret
0x0000000000407b7a : mov eax, esi ; pop rbx ; pop rbp ; ret
0x0000000000414411 : mov eax, esi ; pop rbx ; ret
0x0000000000447234 : mov eax, esi ; ret
0x00000000004649cb : mov eax, esp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004236db : mov eax, esp ; pop r12 ; ret
0x000000000040d6ac : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000416e7e : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040d6ab : mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000467e7a : mov eax, r13d ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000044f087 : mov eax, r8d ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000044efd9 : mov eax, r8d ; ret
0x0000000000435c0f : mov ebp, 0x49fffdfa ; mov edi, dword ptr [rbp] ; call rbx
0x0000000000403a44 : mov ebp, 0x80 ; xor esi, esi ; call rax
0x00000000004bec85 : mov ebp, 0x8be80000 ; cld ; call qword ptr [rax]
0x00000000004a749d : mov ebp, 0xc1c0bfbe ; ret 0xc4c3
0x00000000004b2e25 : mov ebp, 0xc342fffd ; std ; call qword ptr [rax - 0x3d]
0x00000000004b2e45 : mov ebp, 0xc394fffd ; std ; jmp rcx
0x000000000041c37c : mov ebp, 0xf480041 ; ret 0x8348
0x0000000000462c78 : mov ebp, 0xf80148c0 ; ret
0x0000000000462efc : mov ebp, 0xf80148c6 ; ret
0x00000000004aeee6 : mov ebp, 0xfb67d10d ; ret
0x00000000004b5b09 : mov ebp, dr0 ; call qword ptr [rcx]
0x0000000000489b13 : mov ebp, dword ptr [rbp - 0xa8] ; jmp 0x489b2f
0x000000000049007d : mov ebp, dword ptr [rbp] ; mov rsp, rcx ; ret
0x0000000000474eec : mov ebp, ecx ; jmp rdx
0x000000000046b773 : mov ebp, edx ; mov r9, rdx ; mov r10, rax ; jmp 0x46b709
0x0000000000400f91 : mov ebp, esp ; ja 0x400f9c ; pop rbp ; ret
0x00000000004beb75 : mov ebx, 0x2d480000 ; cld ; call qword ptr [rax]
0x000000000041549e : mov ebx, 0x48000021 ; mov eax, ebx ; pop rbx ; ret
0x00000000004022ed : mov ebx, 0x80 ; call rax
0x0000000000437ad4 : mov ebx, 0xafb8341 ; je 0x437ae3 ; ret
0x00000000004b29fd : mov ebx, 0xbb20fffd ; std ; jmp qword ptr [rax]
0x00000000004b29d1 : mov ebx, 0xbb54fffd ; std ; jmp rax
0x00000000004b29d5 : mov ebx, 0xbee0fffd ; std ; call rdx
0x00000000004a749b : mov ebx, 0xbfbebdbc ; rol cl, 0xc2 ; ret
0x000000000043b345 : mov ebx, dword ptr [rbx + 0x28] ; test rbx, rbx ; jne 0x43b329 ; jmp 0x43b31b
0x000000000047398f : mov ebx, dword ptr [rsp] ; add rsp, 0x30 ; jmp r11
0x0000000000473a6f : mov ebx, dword ptr [rsp] ; add rsp, 0x30 ; ret
0x000000000040e0ea : mov ebx, edi ; je 0x40e100 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000491bb4 : mov ebx, edi ; test eax, eax ; jne 0x491bc7 ; pop rbx ; ret
0x0000000000444c86 : mov ebx, edi ; test rax, rax ; je 0x444c96 ; call rax
0x0000000000476a29 : mov ecx, 0x1b8 ; add byte ptr [rax + 1], cl ; ret
0x0000000000467dae : mov ecx, 0x76cbe8ff ; cli ; dec dword ptr [rax - 0x77] ; ret
0x00000000004a7499 : mov ecx, 0xbdbcbbba ; mov esi, 0xc2c1c0bf ; ret
0x00000000004b44cc : mov ecx, dword ptr [rbx - 0xb] ; jmp qword ptr [rdx]
0x0000000000426325 : mov ecx, dword ptr [rdi - 0x73] ; or al, 0xb ; jmp r9
0x000000000040f171 : mov ecx, dword ptr [rdi] ; mov qword ptr [rdx], rcx ; ret
0x000000000041f683 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x000000000045b210 : mov ecx, dword ptr [rdx] ; jmp rdx
0x0000000000459fbe : mov ecx, dword ptr [rdx] ; mov r14d, 0x10 ; jmp rdx
0x0000000000428693 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 5], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000428893 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 6], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000428a93 : mov ecx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 7], edx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000430de0 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x0000000000430e21 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x000000000042b763 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000042b6f3 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000042b683 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000042b5a5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000042b535 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000042b4c5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000042b455 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000042b3e5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000042b375 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000042b305 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000042b845 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x0000000000430dc1 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000004703ed : mov ecx, dword ptr [rsp + 0x30] ; call r9
0x0000000000474d87 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x0000000000474d15 : mov ecx, dword ptr [rsp + 0x40] ; add rsp, 0x50 ; jmp qword ptr [rax]
0x0000000000446ff4 : mov ecx, eax ; jmp 0x446edc
0x0000000000407f5b : mov ecx, edx ; jmp 0x407e8c
0x000000000046b776 : mov ecx, edx ; mov r10, rax ; jmp 0x46b706
0x000000000040e747 : mov ecx, edx ; xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x0000000000417095 : mov ecx, esi ; mov eax, 0x16 ; je 0x4170a9 ; ret
0x00000000004a7941 : mov edi, 0x44 ; add byte ptr [rax], al ; outsd dx, dword ptr [rsi] ; ret
0x00000000004a8639 : mov edi, 0x45 ; add byte ptr [rax], al ; ret 0x45
0x000000000040100c : mov edi, 0x4b2f78 ; call rax
0x0000000000401051 : mov edi, 0x6c0ef0 ; call rax
0x000000000046df86 : mov edi, 0x6c21a0 ; call rax
0x000000000046dff2 : mov edi, 0x6c21a0 ; pop rbx ; pop rbp ; jmp rax
0x0000000000474c5f : mov edi, 0x6c21e0 ; add rsp, 8 ; jmp rax
0x0000000000438cc8 : mov edi, 0x6c21e0 ; call rax
0x000000000047357b : mov edi, 0x6c21e0 ; jmp rax
0x0000000000400fa2 : mov edi, 0x6c2c30 ; jmp rax
0x0000000000400fe2 : mov edi, 0x6c2c30 ; jmp rdx
0x0000000000402c5b : mov edi, 0x6c30c0 ; call rbx
0x0000000000402d0b : mov edi, 0x6c3140 ; call rax
0x000000000040356e : mov edi, 0x6c31a0 ; call rax
0x000000000043adaf : mov edi, 0x6c4220 ; call rax
0x000000000040300f : mov edi, 0x6c42a0 ; call rax
0x0000000000402c54 : mov edi, 0x6c42a0 ; call rbx
0x000000000047ec31 : mov edi, 0x6c4640 ; call rax
0x000000000048e014 : mov edi, 0x83480170 ; rol byte ptr [rbx], 0xeb ; ret
0x0000000000446981 : mov edi, 0x8948fffd ; ret
0x00000000004b29f9 : mov edi, 0xbb20fffd ; std ; jmp qword ptr [rax]
0x00000000004b29f5 : mov edi, 0xbf2afffd ; std ; jmp qword ptr [rax]
0x00000000004b2a15 : mov edi, 0xbf2afffd ; std ; jmp rsp
0x000000000040d928 : mov edi, 0xc48348ff ; sub byte ptr [rbx + 0x5d], bl ; ret
0x0000000000433ab4 : mov edi, 0xf000000 ; popfq ; ret 0xea81
0x000000000048faa5 : mov edi, 1 ; call r14
0x0000000000401cf7 : mov edi, 1 ; call rax
0x000000000049032c : mov edi, 1 ; jmp rax
0x0000000000439ed5 : mov edi, dword ptr [rax + 0x18] ; mov qword ptr [rbp - 0x68], rax ; call rcx
0x0000000000462828 : mov edi, dword ptr [rax + 0x40] ; jmp 0x4627f4
0x0000000000435be3 : mov edi, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x000000000048ffde : mov edi, dword ptr [rbp - 8] ; leave ; ret
0x0000000000437319 : mov edi, dword ptr [rbp] ; call r12
0x000000000043583a : mov edi, dword ptr [rbp] ; call rbx
0x000000000043a20a : mov edi, dword ptr [rbx + 0x18] ; call rax
0x0000000000437328 : mov edi, dword ptr [rbx] ; call r12
0x00000000004739be : mov edi, dword ptr [rdi + 0x28] ; call r11
0x000000000040b780 : mov edi, dword ptr [rdi + 0x70] ; jmp 0x4379a5
0x00000000004357e8 : mov edi, dword ptr [rdi] ; call rbx
0x00000000004af1a6 : mov edi, dword ptr [rdx] ; ret
0x000000000047eed5 : mov edi, dword ptr [rip + 0x245775] ; call rax
0x000000000047edeb : mov edi, dword ptr [rip + 0x24585f] ; jmp rax
0x00000000004357a7 : mov edi, dword ptr [rsi] ; call rbx
0x0000000000442620 : mov edi, dword ptr [rsp + 0x10] ; call r12
0x00000000004426fd : mov edi, dword ptr [rsp + 0x10] ; call r15
0x000000000046cd31 : mov edi, dword ptr [rsp + 0x30] ; call rax
0x0000000000409461 : mov edi, dword ptr [rsp + 0x38] ; call 0x4156d6
0x000000000043c60b : mov edi, dword ptr [rsp + 0x38] ; mov dword ptr [rsp + 8], eax ; call r14
0x000000000043cf2a : mov edi, dword ptr [rsp + 0x38] ; mov dword ptr [rsp + 8], eax ; call r15
0x000000000043c512 : mov edi, dword ptr [rsp + 0x38] ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000043f46b : mov edi, dword ptr [rsp + 0x48] ; mov dword ptr [rsp + 8], eax ; call r12
0x000000000043cc4a : mov edi, dword ptr [rsp + 0x48] ; mov dword ptr [rsp + 8], eax ; call r14
0x000000000043fe1c : mov edi, dword ptr [rsp + 0x48] ; mov dword ptr [rsp + 8], eax ; call r15
0x000000000043c95f : mov edi, dword ptr [rsp + 0x48] ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000044077a : mov edi, dword ptr [rsp + 0x50] ; mov dword ptr [rsp + 8], eax ; call r14
0x000000000043e1a4 : mov edi, dword ptr [rsp + 0x50] ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000401761 : mov edi, dword ptr [rsp + 0xc] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000435d05 : mov edi, dword ptr [rsp + 8] ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000435c30 : mov edi, dword ptr [rsp] ; call rbx
0x0000000000463d74 : mov edi, dword ptr [rsp] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x0000000000479295 : mov edi, eax ; dec dword ptr [rax - 0x77] ; ret
0x000000000044722d : mov edi, eax ; mov byte ptr [rsi], dl ; jne 0x447221 ; mov rax, rsi ; ret
0x0000000000409445 : mov edi, ebp ; call 0x4156d4
0x0000000000475ad7 : mov edi, ebp ; call 0x48c909
0x000000000048acd6 : mov edi, ebp ; call qword ptr [rbx]
0x000000000048ac99 : mov edi, ebp ; call rax
0x0000000000436f79 : mov edi, ebp ; call rbx
0x0000000000460f54 : mov edi, ebp ; xor r8d, r8d ; call r12
0x0000000000442827 : mov edi, ebx ; call r12
0x000000000043b17c : mov edi, ebx ; call r14
0x000000000043a3ea : mov edi, ebx ; call r15
0x00000000004600f0 : mov edi, ebx ; call r8
0x000000000040a465 : mov edi, ebx ; call rax
0x000000000043572d : mov edi, ebx ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000040ddb4 : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000040df34 : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x0000000000400c1f : mov edi, edi ; call 0x41ce44
0x000000000043650e : mov edi, edi ; call rbx
0x000000000047969e : mov edi, edi ; mov qword ptr [rsp], r8 ; call 0x475968
0x000000000040661b : mov edi, edx ; call 0x4228d4
0x00000000004472b1 : mov edi, edx ; mov byte ptr [rsi], al ; jne 0x447299 ; mov rax, rsi ; ret
0x000000000045bb4a : mov edi, esi ; call 0x4156d8
0x00000000004466a1 : mov edi, esi ; call 0x4228d4
0x00000000004364ee : mov edi, esi ; call rbx
0x0000000000436032 : mov edi, esi ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x000000000043aa6e : mov edi, esi ; mov rax, qword ptr [rbp - 0x60] ; call rax
0x00000000004bec89 : mov edi, esp ; call qword ptr [rax]
0x0000000000492469 : mov edi, esp ; call r12
0x0000000000415d54 : mov edi, esp ; call rax
0x00000000004364a5 : mov edi, esp ; call rbx
0x000000000047033b : mov edi, esp ; pop r12 ; pop r13 ; jmp rax
0x000000000047033a : mov edi, r12d ; pop r12 ; pop r13 ; jmp rax
0x00000000004bea05 : mov edx, 0x22b80000 ; hlt ; jmp qword ptr [rsi]
0x00000000004bea4d : mov edx, 0x4f00000 ; cld ; jmp qword ptr [rdx]
0x0000000000479098 : mov edx, 0xbe000003 ; ret 0x4ad4
0x00000000004ae65e : mov edx, 0xcac982a4 ; call 0xffffffffaf0d84de
0x0000000000473c69 : mov edx, 0xffffffff ; mov eax, edx ; ret
0x0000000000473c76 : mov edx, 1 ; mov eax, edx ; ret
0x0000000000467e4d : mov edx, dword ptr [rax + 0x18] ; test rdx, rdx ; je 0x467e63 ; call rdx
0x000000000044855b : mov edx, dword ptr [rax*8 + 0x4a77c0] ; jmp rdx
0x000000000044bdb0 : mov edx, dword ptr [rax*8 + 0x4a78c0] ; jmp rdx
0x000000000044bc8c : mov edx, dword ptr [rax*8 + 0x4a79c0] ; jmp rdx
0x000000000044bba2 : mov edx, dword ptr [rax*8 + 0x4a7ac0] ; jmp rdx
0x000000000044bb54 : mov edx, dword ptr [rax*8 + 0x4a7bc0] ; jmp rdx
0x000000000044b96d : mov edx, dword ptr [rax*8 + 0x4a7cc0] ; jmp rdx
0x00000000004477fd : mov edx, dword ptr [rax*8 + 0x4a7dc0] ; jmp rdx
0x000000000045c2d5 : mov edx, dword ptr [rax*8 + 0x4a86c0] ; jmp rdx
0x000000000045a00c : mov edx, dword ptr [rax*8 + 0x4a87c0] ; jmp rdx
0x000000000045becc : mov edx, dword ptr [rax*8 + 0x4a88c0] ; jmp rdx
0x000000000045be8a : mov edx, dword ptr [rax*8 + 0x4a89c0] ; jmp rdx
0x000000000045be2e : mov edx, dword ptr [rax*8 + 0x4a8ac0] ; jmp rdx
0x000000000045b20c : mov edx, dword ptr [rax*8 + 0x4a8bc0] ; jmp rdx
0x00000000004618f8 : mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x0000000000464558 : mov edx, dword ptr [rax] ; test edx, edx ; jne 0x464557 ; ret
0x000000000047efa1 : mov edx, dword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x000000000040b68e : mov edx, dword ptr [rbx + 0x40] ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x00000000004211ff : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000041f92d : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x0000000000493a89 : mov edx, dword ptr [rdi + 0x20] ; test rdx, rdx ; je 0x493aa0 ; call rdx
0x000000000047efb5 : mov edx, dword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x0000000000430e02 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x0000000000430df3 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x0000000000430e43 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000430e53 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x00000000004280d1 : mov edx, dword ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000428490 : mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000427d21 : mov edx, dword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004313f0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000042b7d0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000431441 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000042b611 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000004313d1 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000430db1 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000048f9c9 : mov edx, dword ptr [rsp] ; mov edi, 1 ; call rax
0x0000000000402313 : mov edx, eax ; jmp 0x40232e
0x00000000004081ca : mov edx, eax ; jmp 0x4081e2
0x000000000040929a : mov edx, eax ; jmp 0x409254
0x0000000000437776 : mov edx, eax ; jmp 0x4377a3
0x0000000000437814 : mov edx, eax ; jmp 0x437845
0x000000000046b779 : mov edx, eax ; jmp 0x46b703
0x0000000000473c32 : mov edx, eax ; sub edx, ecx ; mov eax, edx ; ret
0x000000000043a041 : mov edx, ebp ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x000000000048acd1 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x000000000048ac94 : mov edx, ebp ; mov rsi, r12 ; mov edi, ebp ; call rax
0x0000000000467a1c : mov edx, ebp ; xor ecx, ecx ; jmp 0x4679ea
0x000000000040a462 : mov edx, esi ; mov rdi, rbx ; call rax
0x00000000004065f7 : mov edx, esp ; call 0x4228d4
0x000000000044669e : mov edx, esp ; mov rdi, r14 ; call 0x4228d7
0x0000000000473c31 : mov edx, r8d ; sub edx, ecx ; mov eax, edx ; ret
0x0000000000461d89 : mov es, edx ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000048c68e : mov es, word ptr [rax - 0x74beffdd] ; adc edi, dword ptr [rcx] ; ret 0x840f
0x0000000000459fc2 : mov esi, 0x10 ; jmp rdx
0x0000000000492463 : mov esi, 0x40 ; mov rdi, rsp ; call r12
0x000000000047681f : mov esi, 0x448d4813 ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004a8a11 : mov esi, 0x45 ; add byte ptr [rax], al ; pushfq ; ret 0x45
0x00000000004440fa : mov esi, 0x497ca1 ; call 0x400327
0x000000000043c1d2 : mov esi, 0x4a890b40 ; push rax ; mov dword ptr [rdx + 0x54], eax ; ret
0x000000000044efd3 : mov esi, 0x77cf390e ; fild word ptr [rcx + rcx*4 - 0x40] ; ret
0x00000000004792fc : mov esi, 0x8349016b ; ret
0x00000000004a749e : mov esi, 0xc2c1c0bf ; ret
0x0000000000436530 : mov esi, 1 ; call rbx
0x000000000043671d : mov esi, 1 ; mov rdi, r12 ; call rbx
0x00000000004365e9 : mov esi, 1 ; mov rdi, r13 ; call rbx
0x0000000000436561 : mov esi, 1 ; mov rdi, r14 ; call rbx
0x00000000004369a7 : mov esi, 1 ; mov rdi, rbp ; call rbx
0x00000000004600ea : mov esi, 1 ; mov rdi, rbx ; call r8
0x000000000045f8df : mov esi, 1 ; mov rdi, rbx ; call rax
0x000000000043699b : mov esi, 2 ; mov rdi, r12 ; call rbx
0x000000000043670e : mov esi, 2 ; mov rdi, r13 ; call rbx
0x00000000004365da : mov esi, 2 ; mov rdi, r14 ; call rbx
0x0000000000436552 : mov esi, 2 ; mov rdi, r15 ; call rbx
0x0000000000436efc : mov esi, 3 ; mov rdi, r12 ; call rbx
0x0000000000436f53 : mov esi, 3 ; mov rdi, r13 ; call rbx
0x0000000000436fd3 : mov esi, 3 ; mov rdi, r14 ; call rbx
0x00000000004370d3 : mov esi, 3 ; mov rdi, r15 ; call rbx
0x000000000048ffda : mov esi, dword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x00000000004904ec : mov esi, dword ptr [rbp] ; call r14
0x00000000004739ba : mov esi, dword ptr [rdi + 0x20] ; mov rdi, qword ptr [rdi + 0x28] ; call r11
0x0000000000490498 : mov esi, dword ptr [rdi] ; call r14
0x00000000004399f7 : mov esi, dword ptr [rdx + rbx + 0x20] ; call rax
0x000000000043a044 : mov esi, dword ptr [rsp + 0x18] ; call rbx
0x000000000041517b : mov esi, dword ptr [rsp + 0x18] ; pop rdx ; pop rbx ; pop rbp ; jmp rax
0x0000000000415d4f : mov esi, dword ptr [rsp + 0x28] ; mov rdi, r12 ; call rax
0x000000000043e84a : mov esi, dword ptr [rsp + 0x58] ; call rax
0x000000000041579b : mov esi, dword ptr [rsp] ; jmp rax
0x0000000000400fe0 : mov esi, eax ; mov edi, 0x6c2c30 ; jmp rdx
0x00000000004550be : mov esi, eax ; mov r12, rbx ; jmp 0x4513c0
0x0000000000400cd7 : mov esi, eax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x400ce4 ; ret
0x00000000004b5ad9 : mov esi, ebp ; call qword ptr [rdi]
0x000000000047eed3 : mov esi, ebx ; mov edi, dword ptr [rip + 0x245775] ; call rax
0x000000000040ddf9 : mov esi, ecx ; jbe 0x40dd9d ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x000000000049032a : mov esi, edi ; mov edi, 1 ; jmp rax
0x0000000000490381 : mov esi, esi ; mov rdi, rbx ; call r15
0x00000000004349da : mov esi, esp ; call 0x435549
0x000000000048acd4 : mov esi, esp ; mov edi, ebp ; call qword ptr [rbx]
0x000000000048ac97 : mov esi, esp ; mov edi, ebp ; call rax
0x0000000000400c1c : mov esi, esp ; mov rdi, r15 ; call 0x41ce47
0x00000000004b3c34 : mov esp, 0x1800000c ; cmc ; call qword ptr [rbx]
0x000000000041c661 : mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000041c691 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000041c681 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000048cea0 : mov esp, 0x48000007 ; mov dword ptr [rbx + 0x18], eax ; pop rbx ; ret
0x00000000004beba5 : mov esp, 0x4ce80000 ; cld ; call qword ptr [rax]
0x00000000004bec3d : mov esp, 0x66800000 ; cld ; call qword ptr [rax]
0x00000000004bebd5 : mov esp, 0x6980000 ; cld ; call qword ptr [rax]
0x0000000000488fc4 : mov esp, 0x8024 ; add byte ptr [rax + 1], cl ; ret 0x894c
0x0000000000452d6e : mov esp, 0x8300001a ; ret 0x8308
0x00000000004885b4 : mov esp, 0x9024 ; add byte ptr [rax + 1], cl ; ret 0x8948
0x00000000004b9a34 : mov esp, 0x9800006a ; xor bh, al ; jmp qword ptr [rdx]
0x00000000004a21c0 : mov esp, 0xbf00000f ; sldt word ptr [rax] ; ret 0xf
0x000000000041a03b : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x00000000004232db : mov esp, 0xf80148c0 ; add rax, rcx ; ret
0x000000000041c671 : mov esp, 0xf80148c0 ; ret
0x000000000044d400 : mov esp, 0xfc239c1 ; ret 0xb841
0x0000000000400e31 : mov esp, eax ; call 0x433aa8
0x0000000000474ee9 : mov esp, eax ; mov rbp, r9 ; jmp rdx
0x00000000004550c1 : mov esp, ebx ; jmp 0x4513bd
0x0000000000490081 : mov esp, ecx ; ret
0x0000000000441b4e : mov fs, ebp ; add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x8b49
0x000000000048c063 : mov fs, word ptr [rbx] ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000440aaa : mov gs, ecx ; add al, 0 ; add byte ptr [rax + 0x29], cl ; ret 0x8b49
0x0000000000461578 : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x00000000004615b8 : mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000462418 : mov qword ptr [rax + 0x18], rdx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x000000000046157c : mov qword ptr [rax + 0x40], rcx ; ret
0x00000000004624b6 : mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x000000000040e949 : mov qword ptr [rax + 8], 0 ; ret
0x00000000004064db : mov qword ptr [rax + 8], rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004704f5 : mov qword ptr [rax + 8], rdx ; ret
0x0000000000470474 : mov qword ptr [rax], 0 ; call r12
0x000000000043d9f4 : mov qword ptr [rax], rbx ; jmp 0x43d9bf
0x00000000004404d6 : mov qword ptr [rax], rbx ; mov eax, dword ptr [rsp + 0x24] ; jmp 0x4404a9
0x000000000044160e : mov qword ptr [rax], rbx ; mov eax, dword ptr [rsp + 0x2c] ; jmp 0x4415e1
0x0000000000461b04 : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x000000000047efc4 : mov qword ptr [rax], rdi ; pop rbx ; ret
0x0000000000461a5f : mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000047efb8 : mov qword ptr [rax], rdx ; pop rbx ; ret
0x000000000044526e : mov qword ptr [rax], rdx ; ret
0x0000000000462730 : mov qword ptr [rax], rdx ; xor eax, eax ; ret
0x000000000047151e : mov qword ptr [rbp + 0x10], rax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000046f948 : mov qword ptr [rbp - 0x100], r8 ; call rsi
0x0000000000439ed8 : mov qword ptr [rbp - 0x68], rax ; call rcx
0x0000000000437771 : mov qword ptr [rbp - 0x68], rax ; mov rdx, rax ; jmp 0x4377a8
0x000000000043780f : mov qword ptr [rbp - 0x68], rax ; mov rdx, rax ; jmp 0x43784a
0x000000000046ee78 : mov qword ptr [rbp - 0xe0], r11 ; call rax
0x000000000046f5a0 : mov qword ptr [rbp - 0xe0], r11 ; call rsi
0x0000000000443216 : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x000000000047475d : mov qword ptr [rbx + 0x10], rax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000474711 : mov qword ptr [rbx + 0x10], rax ; add rsp, 0x30 ; pop rbx ; ret
0x000000000040b0c6 : mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x000000000040b7c8 : mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000474697 : mov qword ptr [rbx + 0x18], rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000048cea4 : mov qword ptr [rbx + 0x18], rax ; pop rbx ; ret
0x000000000040dc92 : mov qword ptr [rbx + 0x20], rax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x0000000000489172 : mov qword ptr [rbx + 0x20], rax ; pop rbx ; ret
0x000000000040dd19 : mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x000000000040b076 : mov qword ptr [rbx + 0x90], rax ; pop rbx ; ret
0x000000000040dfe4 : mov qword ptr [rbx + 8], rax ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x000000000040e1ab : mov qword ptr [rbx + 8], rdx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x00000000004920bb : mov qword ptr [rbx], r8 ; pop rbx ; ret
0x000000000048d2f5 : mov qword ptr [rbx], rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000048a980 : mov qword ptr [rbx], rax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000048fd58 : mov qword ptr [rcx], rdx ; add rsp, 8 ; ret
0x00000000004755be : mov qword ptr [rdi + 0x10], r9 ; ret
0x000000000043160c : mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x0000000000430f7c : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x0000000000430f5c : mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000430fbf : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x0000000000430fdf : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x0000000000430fa0 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x000000000040dc22 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x000000000046df47 : mov qword ptr [rdi + 0x300], rax ; ret
0x000000000046df1b : mov qword ptr [rdi + 0x308], rax ; ret
0x0000000000423098 : mov qword ptr [rdi + 0x38], r9 ; ret
0x000000000040dc52 : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000048fd90 : mov qword ptr [rdi + 0x98], rsi ; ret
0x00000000004315cc : mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x0000000000430f1c : mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000004315ec : mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x0000000000430f3c : mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000042b5a7 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000042b537 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000042b4c7 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000042b457 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x00000000004314ca : mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000042b3e7 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000430e6a : mov qword ptr [rdi + 5], rdx ; ret
0x00000000004314ea : mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000042b377 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000430e7a : mov qword ptr [rdi + 6], rdx ; ret
0x000000000043150a : mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000042b307 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x0000000000430e8a : mov qword ptr [rdi + 7], rdx ; ret
0x0000000000476483 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000475543 : mov qword ptr [rdi + 8], r9 ; ret
0x000000000040dc26 : mov qword ptr [rdi + 8], rax ; ret
0x000000000041ce31 : mov qword ptr [rdi + rdx - 8], rcx ; ret
0x000000000048fd4a : mov qword ptr [rdi + rsi*8], rdx ; add rsp, 8 ; ret
0x0000000000427bb4 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000427bf2 : mov qword ptr [rdi - 0x10], r11 ; mov qword ptr [rdi - 8], rdx ; ret
0x00000000004754ae : mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000427f3b : mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042adb7 : mov qword ptr [rdi - 0xa], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042811b : mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042ad37 : mov qword ptr [rdi - 0xb], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042830b : mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042acb7 : mov qword ptr [rdi - 0xc], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004284dc : mov qword ptr [rdi - 0xd], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000042ac28 : mov qword ptr [rdi - 0xd], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004286dc : mov qword ptr [rdi - 0xe], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000042ab98 : mov qword ptr [rdi - 0xe], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004288dc : mov qword ptr [rdi - 0xf], rcx ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000042ab08 : mov qword ptr [rdi - 0xf], rdx ; mov qword ptr [rdi - 8], rcx ; ret
0x0000000000475439 : mov qword ptr [rdi - 8], r9 ; ret
0x0000000000427bb8 : mov qword ptr [rdi - 8], rcx ; ret
0x0000000000427bf6 : mov qword ptr [rdi - 8], rdx ; ret
0x0000000000427d6b : mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000427e67 : mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000427db3 : mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042ae37 : mov qword ptr [rdi - 9], rdx ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000450f75 : mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000475408 : mov qword ptr [rdi], r9 ; ret
0x000000000047664d : mov qword ptr [rdi], rax ; mov eax, 1 ; ret
0x0000000000422ee9 : mov qword ptr [rdi], rax ; pop rbx ; pop rbp ; ret
0x0000000000431456 : mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000430e46 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x0000000000430e56 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x0000000000430e67 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x0000000000430e77 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x0000000000430e87 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x000000000041ce2e : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + rdx - 8], rcx ; ret
0x0000000000430e37 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000422e68 : mov qword ptr [rdi], rcx ; ret
0x0000000000431443 : mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000400aba : mov qword ptr [rdi], rdx ; ret
0x0000000000408c22 : mov qword ptr [rdx + 0x140], rcx ; ret
0x00000000004309ea : mov qword ptr [rdx + 5], rax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000042f1da : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x0000000000430a0a : mov qword ptr [rdx + 6], rax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000042f1fa : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x0000000000430a2a : mov qword ptr [rdx + 7], rax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x000000000042f21a : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x00000000004308ba : mov qword ptr [rdx + 8], rax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x000000000042f10a : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x000000000040f207 : mov qword ptr [rdx + 8], rcx ; ret
0x0000000000430863 : mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x000000000042f0b3 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000047efa4 : mov qword ptr [rdx], rax ; pop rbx ; ret
0x00000000004618f5 : mov qword ptr [rdx], rcx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000040f173 : mov qword ptr [rdx], rcx ; ret
0x0000000000401bd9 : mov qword ptr [rip + 0x2bf490], rax ; xor eax, eax ; ret
0x0000000000400e0a : mov qword ptr [rip + 0x2c131f], rax ; pop r12 ; ret
0x0000000000491b98 : mov qword ptr [rsi + 0x28], rax ; pop rbx ; ret
0x000000000048d6d3 : mov qword ptr [rsi], r8 ; ret
0x000000000041020a : mov qword ptr [rsi], rax ; mov rax, r8 ; ret
0x0000000000470f11 : mov qword ptr [rsi], rax ; ret
0x0000000000413d70 : mov qword ptr [rsp + 0x10], rcx ; call rdx
0x00000000004680cf : mov qword ptr [rsp + 0x30], rax ; jmp 0x46808b
0x00000000004885ca : mov qword ptr [rsp + 0x90], rbx ; call r12
0x000000000043f46e : mov qword ptr [rsp + 8], rax ; call r12
0x000000000043cc4d : mov qword ptr [rsp + 8], rax ; call r14
0x000000000043fe1f : mov qword ptr [rsp + 8], rax ; call r15
0x0000000000435be5 : mov qword ptr [rsp + 8], rax ; call rbx
0x0000000000414ecc : mov qword ptr [rsp + 8], rdx ; call 0x411137
0x00000000004796a0 : mov qword ptr [rsp], r8 ; call 0x475966
0x000000000043dfbb : mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x000000000044526d : mov qword ptr fs:[rax], rdx ; ret
0x000000000046b778 : mov r10, rax ; jmp 0x46b704
0x00000000004ae65d : mov r10d, 0xcac982a4 ; call 0xffffffffaf0d84df
0x0000000000400e30 : mov r12, rax ; call 0x433aa9
0x00000000004550c0 : mov r12, rbx ; jmp 0x4513be
0x000000000046b772 : mov r13, r10 ; mov r9, rdx ; mov r10, rax ; jmp 0x46b70a
0x000000000048ffd9 : mov r14, qword ptr [rbp - 0x10] ; mov r15, qword ptr [rbp - 8] ; leave ; ret
0x00000000004565ae : mov r14b, 0xff ; dec dword ptr [rax - 0x39] ; ret 0xffc0
0x0000000000459fc1 : mov r14d, 0x10 ; jmp rdx
0x00000000004550bd : mov r14d, eax ; mov r12, rbx ; jmp 0x4513c1
0x000000000048ffdd : mov r15, qword ptr [rbp - 8] ; leave ; ret
0x0000000000436031 : mov r15d, r14d ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x00000000004920b8 : mov r8, qword ptr [r8] ; mov qword ptr [rbx], r8 ; pop rbx ; ret
0x00000000004bca5c : mov r8b, 0xfa ; jmp qword ptr [rdx]
0x00000000004703ec : mov r9, qword ptr [rsp + 0x30] ; call r9
0x000000000046b775 : mov r9, rdx ; mov r10, rax ; jmp 0x46b707
0x000000000046d689 : mov r9b, r13b ; ret
0x000000000040b080 : mov rax, -1 ; pop rbx ; ret
0x000000000040eb30 : mov rax, -1 ; ret
0x0000000000463bc0 : mov rax, 1 ; ret
0x0000000000463bd0 : mov rax, 2 ; ret
0x0000000000463be0 : mov rax, 3 ; ret
0x0000000000463bf0 : mov rax, 4 ; ret
0x0000000000463c00 : mov rax, 5 ; ret
0x0000000000463c10 : mov rax, 6 ; ret
0x0000000000463c20 : mov rax, 7 ; ret
0x000000000046f3b3 : mov rax, qword ptr [r12 + 0x10] ; add rax, qword ptr [rbx] ; call rax
0x0000000000472c67 : mov rax, qword ptr [r13] ; add rax, qword ptr [rdx + 8] ; call rax
0x000000000046ed03 : mov rax, qword ptr [r14 + 0x10] ; add rax, qword ptr [r15] ; call rax
0x000000000046f281 : mov rax, qword ptr [r15 + 0x10] ; add rax, qword ptr [r14] ; call rax
0x000000000040dd4b : mov rax, qword ptr [rax + 0x18] ; jmp rax
0x000000000040a8c2 : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000040df37 : mov rax, qword ptr [rax + 0x28] ; jmp rax
0x000000000040e2f7 : mov rax, qword ptr [rax + 0x40] ; jmp rax
0x000000000048cb02 : mov rax, qword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000040e74b : mov rax, qword ptr [rax + 0x48] ; jmp rax
0x0000000000460bf3 : mov rax, qword ptr [rax + 0x4c] ; ret
0x000000000048b40f : mov rax, qword ptr [rax + 8] ; add rax, qword ptr [rbx] ; call rax
0x0000000000474c90 : mov rax, qword ptr [rax + 8] ; ret
0x000000000044528e : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000048fcf0 : mov rax, qword ptr [rax] ; add rsp, 8 ; ret
0x0000000000436034 : mov rax, qword ptr [rbp - 0x48] ; call rax
0x000000000043aa70 : mov rax, qword ptr [rbp - 0x60] ; call rax
0x000000000047efc0 : mov rax, qword ptr [rbx + 0x18] ; mov qword ptr [rax], rdi ; pop rbx ; ret
0x0000000000467cc7 : mov rax, qword ptr [rbx + 8] ; test rax, rax ; je 0x467cdb ; call rax
0x0000000000467ecc : mov rax, qword ptr [rcx + 0x10] ; test rax, rax ; je 0x467ee4 ; call rax
0x000000000042f0b0 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x0000000000460bf0 : mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000040f4a0 : mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000048fd00 : mov rax, qword ptr [rdi + 0x90] ; ret
0x000000000048fd60 : mov rax, qword ptr [rdi + 0x98] ; ret
0x000000000048fda0 : mov rax, qword ptr [rdi + 0xa0] ; ret
0x000000000048fe00 : mov rax, qword ptr [rdi + 0xa8] ; ret
0x000000000048fdf0 : mov rax, qword ptr [rdi + 0xb0] ; ret
0x000000000048fdb0 : mov rax, qword ptr [rdi + 0xb8] ; ret
0x0000000000474c30 : mov rax, qword ptr [rdi] ; cmp rax, rsi ; je 0x474c48 ; ret
0x000000000049089b : mov rax, qword ptr [rdx] ; add rsp, 8 ; ret
0x000000000040f160 : mov rax, qword ptr [rdx] ; test rax, rax ; jne 0x40f161 ; ret
0x0000000000442870 : mov rax, qword ptr [rip + 0x2819f9] ; ret
0x000000000043a270 : mov rax, qword ptr [rip + 0x28add1] ; ret
0x000000000040f480 : mov rax, qword ptr [rip + 0x2b1c19] ; ret
0x00000000004908e0 : mov rax, qword ptr [rsi] ; add rsp, 8 ; ret
0x000000000048fdd5 : mov rax, qword ptr [rsp + 0x10] ; add rsp, 0x28 ; ret
0x0000000000435d09 : mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000401765 : mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000043d9ef : mov rax, qword ptr [rsp + 0x30] ; mov qword ptr [rax], rbx ; jmp 0x43d9c4
0x000000000047496a : mov rax, qword ptr [rsp + 0x48] ; add rsp, 0x78 ; ret
0x0000000000468315 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x28 ; ret
0x0000000000473616 : mov rax, qword ptr [rsp] ; add rsp, 0x48 ; jmp r11
0x00000000004649ca : mov rax, r12 ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004236da : mov rax, r12 ; pop r12 ; ret
0x0000000000416e7d : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004604e4 : mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000467bac : mov rax, r14 ; pop r14 ; ret
0x0000000000414781 : mov rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000410322 : mov rax, r8 ; nop dword ptr [rax] ; ret
0x000000000041020d : mov rax, r8 ; ret
0x0000000000447346 : mov rax, r9 ; pop rbx ; ret
0x0000000000468625 : mov rax, r9 ; ret
0x000000000040bf29 : mov rax, rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000409949 : mov rax, rbp ; mov dword ptr [rbx], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000460b38 : mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004716bf : mov rax, rbp ; pop rbp ; pop r12 ; ret
0x000000000043572f : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000040fbe4 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000471641 : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000471ac7 : mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000408ce3 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000408db8 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043559d : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000040b0ca : mov rax, rbx ; pop rbx ; ret
0x0000000000401f42 : mov rax, rcx ; pop r13 ; ret
0x0000000000401ec8 : mov rax, rcx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000464528 : mov rax, rcx ; ret
0x0000000000410657 : mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040f4b0 : mov rax, rdi ; ret
0x000000000048ce4d : mov rax, rdx ; add rsp, 0x28 ; ret
0x000000000047f132 : mov rax, rdx ; add rsp, 0x38 ; ret
0x0000000000467a52 : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004155b8 : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000410d6e : mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000475a74 : mov rax, rdx ; pop rbx ; ret
0x0000000000417897 : mov rax, rdx ; ret
0x0000000000407b79 : mov rax, rsi ; pop rbx ; pop rbp ; ret
0x0000000000414410 : mov rax, rsi ; pop rbx ; ret
0x0000000000447233 : mov rax, rsi ; ret
0x000000000049007c : mov rbp, qword ptr [rbp] ; mov rsp, rcx ; ret
0x0000000000474eeb : mov rbp, r9 ; jmp rdx
0x0000000000400f90 : mov rbp, rsp ; ja 0x400f9d ; pop rbp ; ret
0x000000000047398e : mov rbx, qword ptr [rsp] ; add rsp, 0x30 ; jmp r11
0x0000000000473a6e : mov rbx, qword ptr [rsp] ; add rsp, 0x30 ; ret
0x000000000040e0e9 : mov rbx, rdi ; je 0x40e101 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000491bb3 : mov rbx, rdi ; test eax, eax ; jne 0x491bc8 ; pop rbx ; ret
0x0000000000444c85 : mov rbx, rdi ; test rax, rax ; je 0x444c97 ; call rax
0x000000000040f170 : mov rcx, qword ptr [rdi] ; mov qword ptr [rdx], rcx ; ret
0x0000000000430e20 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000474d86 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x48 ; jmp qword ptr [rax]
0x0000000000474d14 : mov rcx, qword ptr [rsp + 0x40] ; add rsp, 0x50 ; jmp qword ptr [rax]
0x0000000000407f5a : mov rcx, r10 ; jmp 0x407e8d
0x0000000000446ff3 : mov rcx, rax ; jmp 0x446edd
0x0000000000435c2f : mov rdi, qword ptr [r12] ; call rbx
0x0000000000463d73 : mov rdi, qword ptr [r12] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x0000000000463ebb : mov rdi, qword ptr [r13] ; call r12
0x0000000000435839 : mov rdi, qword ptr [r13] ; call rbx
0x00000000004357a6 : mov rdi, qword ptr [r14] ; call rbx
0x00000000004357e7 : mov rdi, qword ptr [r15] ; call rbx
0x0000000000439ed4 : mov rdi, qword ptr [rax + 0x18] ; mov qword ptr [rbp - 0x68], rax ; call rcx
0x0000000000462827 : mov rdi, qword ptr [rax + 0x40] ; jmp 0x4627f5
0x0000000000435be2 : mov rdi, qword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x0000000000437318 : mov rdi, qword ptr [rbp] ; call r12
0x000000000043596e : mov rdi, qword ptr [rbp] ; call rbx
0x000000000043a209 : mov rdi, qword ptr [rbx + 0x18] ; call rax
0x0000000000437327 : mov rdi, qword ptr [rbx] ; call r12
0x00000000004739bd : mov rdi, qword ptr [rdi + 0x28] ; call r11
0x000000000044261f : mov rdi, qword ptr [rsp + 0x10] ; call r12
0x00000000004426fc : mov rdi, qword ptr [rsp + 0x10] ; call r15
0x000000000046cd30 : mov rdi, qword ptr [rsp + 0x30] ; call rax
0x0000000000409460 : mov rdi, qword ptr [rsp + 0x38] ; call 0x4156d7
0x000000000043c511 : mov rdi, qword ptr [rsp + 0x38] ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000043c95e : mov rdi, qword ptr [rsp + 0x48] ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000043e1a3 : mov rdi, qword ptr [rsp + 0x50] ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000040661a : mov rdi, r10 ; call 0x4228d5
0x0000000000415d53 : mov rdi, r12 ; call rax
0x00000000004364a4 : mov rdi, r12 ; call rbx
0x0000000000409444 : mov rdi, r13 ; call 0x4156d5
0x0000000000436f78 : mov rdi, r13 ; call rbx
0x0000000000460f53 : mov rdi, r13 ; xor r8d, r8d ; call r12
0x000000000045bb49 : mov rdi, r14 ; call 0x4156d9
0x00000000004466a0 : mov rdi, r14 ; call 0x4228d5
0x00000000004364ed : mov rdi, r14 ; call rbx
0x000000000043aa6d : mov rdi, r14 ; mov rax, qword ptr [rbp - 0x60] ; call rax
0x0000000000400c1e : mov rdi, r15 ; call 0x41ce45
0x000000000043650d : mov rdi, r15 ; call rbx
0x000000000047969d : mov rdi, r15 ; mov qword ptr [rsp], r8 ; call 0x475969
0x000000000043647f : mov rdi, rbp ; call rbx
0x0000000000442826 : mov rdi, rbx ; call r12
0x000000000043b17b : mov rdi, rbx ; call r14
0x000000000043a3e9 : mov rdi, rbx ; call r15
0x00000000004600ef : mov rdi, rbx ; call r8
0x000000000040a464 : mov rdi, rbx ; call rax
0x000000000040ddb3 : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000040df33 : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x0000000000492468 : mov rdi, rsp ; call r12
0x000000000048f9c8 : mov rdx, qword ptr [r12] ; mov edi, 1 ; call rax
0x0000000000467e4c : mov rdx, qword ptr [rax + 0x18] ; test rdx, rdx ; je 0x467e64 ; call rdx
0x000000000044855a : mov rdx, qword ptr [rax*8 + 0x4a77c0] ; jmp rdx
0x000000000044bdaf : mov rdx, qword ptr [rax*8 + 0x4a78c0] ; jmp rdx
0x000000000044bc8b : mov rdx, qword ptr [rax*8 + 0x4a79c0] ; jmp rdx
0x000000000044bba1 : mov rdx, qword ptr [rax*8 + 0x4a7ac0] ; jmp rdx
0x000000000044bb53 : mov rdx, qword ptr [rax*8 + 0x4a7bc0] ; jmp rdx
0x000000000044b96c : mov rdx, qword ptr [rax*8 + 0x4a7cc0] ; jmp rdx
0x00000000004477fc : mov rdx, qword ptr [rax*8 + 0x4a7dc0] ; jmp rdx
0x000000000045c2d4 : mov rdx, qword ptr [rax*8 + 0x4a86c0] ; jmp rdx
0x000000000045a00b : mov rdx, qword ptr [rax*8 + 0x4a87c0] ; jmp rdx
0x000000000045becb : mov rdx, qword ptr [rax*8 + 0x4a88c0] ; jmp rdx
0x000000000045be89 : mov rdx, qword ptr [rax*8 + 0x4a89c0] ; jmp rdx
0x000000000045be2d : mov rdx, qword ptr [rax*8 + 0x4a8ac0] ; jmp rdx
0x000000000045b20b : mov rdx, qword ptr [rax*8 + 0x4a8bc0] ; jmp rdx
0x000000000047efa0 : mov rdx, qword ptr [rbx + 0x18] ; mov qword ptr [rdx], rax ; pop rbx ; ret
0x0000000000493a88 : mov rdx, qword ptr [rdi + 0x20] ; test rdx, rdx ; je 0x493aa1 ; call rdx
0x000000000047efb4 : mov rdx, qword ptr [rdi + 0x30] ; mov qword ptr [rax], rdx ; pop rbx ; ret
0x0000000000427d20 : mov rdx, qword ptr [rsi - 8] ; mov qword ptr [rdi - 8], rdx ; ret
0x000000000042b610 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000004065f6 : mov rdx, r12 ; call 0x4228d5
0x000000000044669d : mov rdx, r12 ; mov rdi, r14 ; call 0x4228d8
0x000000000048acd0 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x000000000048ac93 : mov rdx, r13 ; mov rsi, r12 ; mov edi, ebp ; call rax
0x000000000040a461 : mov rdx, r14 ; mov rdi, rbx ; call rax
0x00000000004081c9 : mov rdx, r8 ; jmp 0x4081e3
0x0000000000402312 : mov rdx, rax ; jmp 0x40232f
0x0000000000437775 : mov rdx, rax ; jmp 0x4377a4
0x0000000000437813 : mov rdx, rax ; jmp 0x437846
0x000000000043a040 : mov rdx, rbp ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x0000000000467a1b : mov rdx, rbp ; xor ecx, ecx ; jmp 0x4679eb
0x0000000000490497 : mov rsi, qword ptr [r15] ; call r14
0x00000000004904eb : mov rsi, qword ptr [rbp] ; call r14
0x00000000004739b9 : mov rsi, qword ptr [rdi + 0x20] ; mov rdi, qword ptr [rdi + 0x28] ; call r11
0x00000000004399f6 : mov rsi, qword ptr [rdx + rbx + 0x20] ; call rax
0x000000000043a043 : mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x000000000041517a : mov rsi, qword ptr [rsp + 0x18] ; pop rdx ; pop rbx ; pop rbp ; jmp rax
0x0000000000415d4e : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, r12 ; call rax
0x000000000043e849 : mov rsi, qword ptr [rsp + 0x58] ; call rax
0x000000000041579a : mov rsi, qword ptr [rsp] ; jmp rax
0x000000000048acd3 : mov rsi, r12 ; mov edi, ebp ; call qword ptr [rbx]
0x000000000048ac96 : mov rsi, r12 ; mov edi, ebp ; call rax
0x0000000000400c1b : mov rsi, r12 ; mov rdi, r15 ; call 0x41ce48
0x0000000000490380 : mov rsi, r14 ; mov rdi, rbx ; call r15
0x0000000000400fdf : mov rsi, rax ; mov edi, 0x6c2c30 ; jmp rdx
0x0000000000400cd6 : mov rsi, rax ; repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x400ce5 ; ret
0x00000000004b5ad8 : mov rsi, rbp ; call qword ptr [rdi]
0x000000000047eed2 : mov rsi, rbx ; mov edi, dword ptr [rip + 0x245775] ; call rax
0x000000000040ddf8 : mov rsi, rcx ; jbe 0x40dd9e ; movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x0000000000490329 : mov rsi, rdi ; mov edi, 1 ; jmp rax
0x0000000000474ee8 : mov rsp, r8 ; mov rbp, r9 ; jmp rdx
0x0000000000490080 : mov rsp, rcx ; ret
0x000000000043dd4e : mov word ptr [rax + rax], es ; add byte ptr [rax + 0x29], cl ; ret 0x8b49
0x0000000000438050 : mov word ptr [rax + rcx*4], gs ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000041ce21 : mov word ptr [rax + rdx - 2], cx ; ret
0x000000000048e93a : mov word ptr [rax], fs ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004be304 : mov word ptr [rbx - 0x7b780000], dr0 ; sti ; call qword ptr [rax]
0x0000000000409440 : mov word ptr [rcx + rax - 0x1076b400], ss ; call 0x4156d9
0x00000000004bc904 : mov word ptr [rcx - 0x50c80000], ds ; cli ; call qword ptr [rdx]
0x000000000043154c : mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x0000000000430ebc : mov word ptr [rdi + 0x10], cx ; ret
0x0000000000431654 : mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x0000000000430fa4 : mov word ptr [rdi + 0x18], cx ; ret
0x000000000042b847 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x0000000000431418 : mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 5] ; ret
0x0000000000430df8 : mov word ptr [rdi + 4], dx ; ret
0x000000000043146a : mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 9] ; ret
0x0000000000430e3a : mov word ptr [rdi + 8], dx ; ret
0x00000000004282bc : mov word ptr [rdi - 2], cx ; ret
0x00000000004280d4 : mov word ptr [rdi - 2], dx ; ret
0x00000000004282b8 : mov word ptr [rdi - 3], dx ; mov word ptr [rdi - 2], cx ; ret
0x0000000000430dc3 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000042b84b : mov word ptr [rdi], cx ; ret
0x00000000004313d3 : mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000042b8b3 : mov word ptr [rdi], dx ; ret
0x00000000004b5f04 : mov word ptr [rdi], gs ; add byte ptr [rax], al ; xchg rax, rsi ; cmc ; jmp qword ptr [rax]
0x00000000004bea04 : mov word ptr [rdx + 0x22b80000], dr1 ; hlt ; jmp qword ptr [rsi]
0x0000000000430938 : mov word ptr [rdx + 4], ax ; lea rax, qword ptr [rdx + 5] ; ret
0x000000000042f178 : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x00000000004308e3 : mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x000000000042f133 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000004b9204 : mov word ptr [rdx], fs ; add al, cl ; push rdi ; call qword ptr [rax]
0x00000000004b8152 : mov word ptr [rip + 0x3068345], es ; mov byte ptr [rcx], al ; ret
0x00000000004bce04 : mov word ptr [rsi - 0x45780000], ds ; cli ; jmp rsp
0x0000000000445374 : mov word ptr [rsp - 2], di ; fldcw word ptr [rsp - 2] ; ret
0x00000000004950d8 : movabs al, byte ptr [0x90000000000040cf] ; ret 0x40
0x0000000000478b06 : movabs al, byte ptr [0xc748c03145000000] ; ret
0x0000000000462823 : movabs al, byte ptr [0xeb40788b48000000] ; ret
0x0000000000495198 : movabs al, byte ptr [0xf0000000000040cf] ; ret
0x00000000004b32f6 : movabs al, byte ptr [0xf4f20a0d1cfff501] ; jmp qword ptr [rdx]
0x00000000004bc516 : movabs al, byte ptr [0xfa976d0d1cfffa99] ; jmp qword ptr [rdx]
0x0000000000474c2f : movabs byte ptr [0x874f03948078b48], al ; ret
0x000000000040ce51 : movabs dword ptr [0x8341001f0ffffffc], eax ; ret 0x4101
0x000000000046fc92 : movabs dword ptr [0x8348d889482673ce], eax ; ret
0x00000000004aca28 : movabs dword ptr [0xa700000000004ac3], eax ; ret
0x00000000004b7226 : movabs dword ptr [0xf5f7f30d1cfff600], eax ; jmp qword ptr [rdx]
0x000000000041276b : movabs eax, dword ptr [0x8948c08548ffffd9] ; ret
0x0000000000436923 : movabs eax, dword ptr [0xff894cf631000008] ; call rbx
0x0000000000426842 : movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x000000000042683e : movaps xmmword ptr [rdi - 0x20], xmm4 ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000004268ec : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000430e90 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000043170d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000043105d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000042b51f : movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042b4af : movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042b43f : movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042b3cf : movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004316ad : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x0000000000430ffd : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000042b35f : movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004316cd : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000043101d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000042b2ef : movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004316ed : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000043103d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000042b90f : movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042b89f : movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042b82f : movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042b7bf : movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042b74f : movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042b6df : movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042b66f : movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042b5ff : movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042b58f : movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000041cd86 : movdqu xmmword ptr [rdi + rdx - 0x20], xmm8 ; ret
0x000000000042aa7b : movdqu xmmword ptr [rdi - 0x10], xmm0 ; ret
0x000000000042aaeb : movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000431524 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000430ea4 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x0000000000430ee7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000430ed7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000430f58 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000430f18 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x0000000000430f38 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000430eb8 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x0000000000431059 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x0000000000430ff9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x0000000000431019 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x0000000000431039 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000042b29a : movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000042b2f4 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x0000000000430e91 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000043170e : movq qword ptr [rdi + 0x10], mm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000043105e : movq qword ptr [rdi + 0x10], mm2 ; ret
0x000000000042b520 : movq qword ptr [rdi + 0xa], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042b4b0 : movq qword ptr [rdi + 0xb], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042b440 : movq qword ptr [rdi + 0xc], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042b3d0 : movq qword ptr [rdi + 0xd], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004316ae : movq qword ptr [rdi + 0xd], mm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x0000000000430ffe : movq qword ptr [rdi + 0xd], mm2 ; ret
0x000000000042b360 : movq qword ptr [rdi + 0xe], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004316ce : movq qword ptr [rdi + 0xe], mm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000043101e : movq qword ptr [rdi + 0xe], mm2 ; ret
0x000000000042b2f0 : movq qword ptr [rdi + 0xf], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x00000000004316ee : movq qword ptr [rdi + 0xf], mm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000043103e : movq qword ptr [rdi + 0xf], mm2 ; ret
0x000000000042b910 : movq qword ptr [rdi + 1], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042b8a0 : movq qword ptr [rdi + 2], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042b830 : movq qword ptr [rdi + 3], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042b7c0 : movq qword ptr [rdi + 4], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042b750 : movq qword ptr [rdi + 5], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042b6e0 : movq qword ptr [rdi + 6], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042b670 : movq qword ptr [rdi + 7], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042b600 : movq qword ptr [rdi + 8], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000042b590 : movq qword ptr [rdi + 9], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000041cd73 : movq qword ptr [rdi + rdx - 0x10], mm0 ; ja 0x41cd88 ; ret
0x000000000041cd72 : movq qword ptr [rdi + rdx - 0x10], mm0 ; ja 0x41cd89 ; ret
0x000000000041cd88 : movq qword ptr [rdi + rdx - 0x20], mm0 ; ret
0x000000000042aa7c : movq qword ptr [rdi - 0x10], mm0 ; ret
0x000000000042aaec : movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000042b227 : movq qword ptr [rdi - 0x11], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042b1a7 : movq qword ptr [rdi - 0x12], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042b117 : movq qword ptr [rdi - 0x13], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042b097 : movq qword ptr [rdi - 0x14], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042b017 : movq qword ptr [rdi - 0x15], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042af97 : movq qword ptr [rdi - 0x16], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042af17 : movq qword ptr [rdi - 0x17], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042ae97 : movq qword ptr [rdi - 0x18], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042ae17 : movq qword ptr [rdi - 0x19], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042ad97 : movq qword ptr [rdi - 0x1a], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042ad17 : movq qword ptr [rdi - 0x1b], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042ac97 : movq qword ptr [rdi - 0x1c], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042ac07 : movq qword ptr [rdi - 0x1d], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042ab77 : movq qword ptr [rdi - 0x1e], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x000000000042aae7 : movq qword ptr [rdi - 0x1f], mm0 ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000431525 : movq qword ptr [rdi], mm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000430ea5 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x0000000000430ef8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x0000000000430ee8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000430ed8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000430f59 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x0000000000430f19 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x0000000000430f39 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000430eb9 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000043105a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x0000000000430ffa : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000043101a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000043103a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000042b29b : movq qword ptr [rdi], mm0 ; ret
0x000000000042b2f5 : movq qword ptr [rdi], mm1 ; ret
0x000000000046603e : movsb byte ptr [rdi], byte ptr [rsi] ; add byte ptr [rax + 0xf], cl ; ret 0x8d48
0x00000000004b62b5 : movsb byte ptr [rdi], byte ptr [rsi] ; cmc ; jmp qword ptr [rdx]
0x00000000004b638c : movsb byte ptr [rdi], byte ptr [rsi] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cmc ; jmp qword ptr [rdx]
0x00000000004af022 : movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000004ba21c : movsb byte ptr [rdi], byte ptr [rsi] ; jb 0x4ba226 ; add al, al ; stosb byte ptr [rdi], al ; clc ; call qword ptr [rcx]
0x00000000004bad1c : movsb byte ptr [rdi], byte ptr [rsi] ; jge 0x4bad26 ; add byte ptr [rax], ah ; stc ; call qword ptr [rsi]
0x00000000004b027d : movsb byte ptr [rdi], byte ptr [rsi] ; jns 0x4b02d6 ; jmp 0x4b0217
0x0000000000473e6e : movsb byte ptr [rdi], byte ptr [rsi] ; ret 0x4a
0x00000000004bde1c : movsb byte ptr [rdi], byte ptr [rsi] ; scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; jo 0x4bde95 ; sti ; call qword ptr [rax]
0x00000000004b591c : movsb byte ptr [rdi], byte ptr [rsi] ; sub dword ptr [rax], eax ; add byte ptr [rax], dl ; test dh, ch ; jmp qword ptr [rcx]
0x0000000000410b47 : movsd dword ptr [rdi], dword ptr [rsi] ; adc eax, 0x8948002b ; ret 0x8948
0x00000000004b62fd : movsd dword ptr [rdi], dword ptr [rsi] ; cmc ; jmp qword ptr [rdx]
0x00000000004b08b5 : movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004b6bb4 : movsd dword ptr [rdi], dword ptr [rsi] ; loope 0x4b6baf ; jmp qword ptr [rdx]
0x00000000004b0171 : movsd dword ptr [rdi], dword ptr [rsi] ; mov cl, byte ptr [rip - 0x114f09b0] ; fcmovb st(0), st(3) ; ret
0x0000000000475462 : movsd dword ptr [rdi], dword ptr [rsi] ; ret
0x00000000004baa0c : movsd dword ptr [rdi], dword ptr [rsi] ; sbb al, 0xf9 ; jmp qword ptr [rdx]
0x000000000048ca53 : movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000048ca0d : movss xmm0, dword ptr [rsp - 4] ; ret
0x0000000000473c61 : movsx edx, al ; neg edx ; mov eax, edx ; ret
0x000000000048e013 : movsx esi, word ptr [rax + 1] ; add rax, 3 ; jmp 0x48dfe9
0x000000000048ef32 : movsxd r8, dword ptr [r14 + r8*4] ; add r8, r14 ; jmp r8
0x0000000000417bb1 : movsxd r9, dword ptr [r10 + r9*4] ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000428eb6 : movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x0000000000426322 : movsxd r9, dword ptr [r11 + r9*4] ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000048e3e2 : movsxd rax, dword ptr [r11 + rax*4] ; add rax, r11 ; jmp rax
0x000000000048f43f : movsxd rax, dword ptr [r15 + rax*4] ; add rax, r15 ; jmp rax
0x0000000000490672 : movsxd rax, dword ptr [r8 + rdi*4] ; add r8, rax ; jmp r8
0x000000000049208a : movsxd rax, dword ptr [r9 + r8*4] ; add r9, rax ; jmp r9
0x000000000048e4e3 : movsxd rax, dword ptr [rcx + rax*4] ; add rcx, rax ; jmp rcx
0x0000000000424c6d : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x0000000000430c59 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000048d773 : movsxd rcx, dword ptr [r15 + rcx*4] ; add rcx, r15 ; jmp rcx
0x000000000048d8c8 : movsxd rcx, dword ptr [rdi + rcx*4] ; add rcx, rdi ; jmp rcx
0x000000000048ece2 : movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x0000000000409efe : movsxd rdi, edi ; dec dword ptr [rax - 0x75] ; cmp byte ptr [r8 - 0x77], cl ; ret 0x348
0x00000000004263ef : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000048eaec : movsxd rdx, dword ptr [rbp + rdx*4] ; add rdx, rbp ; jmp rdx
0x0000000000432c3c : movsxd rsi, esi ; ret 0x7520
0x000000000048ca0e : movups xmm0, xmmword ptr [rsp - 4] ; ret
0x000000000048ca54 : movups xmm0, xmmword ptr [rsp - 8] ; ret
0x00000000004453fc : movzx eax, al ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x000000000047f06c : movzx eax, al ; neg eax ; ret
0x000000000047ee72 : movzx eax, al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000468185 : movzx eax, al ; ret
0x000000000040d004 : movzx eax, bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040eb96 : movzx eax, byte ptr [rax - 1] ; and dword ptr [rbx], 0xffffffef ; pop rbx ; ret
0x0000000000490840 : movzx eax, byte ptr [rax] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000040b225 : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040e1af : movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000040f80d : movzx eax, byte ptr [rax] ; ret
0x0000000000418f48 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x0000000000424c80 : movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000041c800 : movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000418f63 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000040b230 : movzx eax, byte ptr [rdx] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000040ddfd : movzx eax, byte ptr [rdx] ; pop rbx ; ret
0x000000000040d005 : movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000433b07 : movzx eax, cl ; pop rbx ; ret
0x0000000000433b2f : movzx eax, dl ; pop rbx ; ret
0x000000000043329a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x433299 ; ret
0x000000000043334a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0x433349 ; ret
0x0000000000425b24 : movzx ecx, byte ptr [rsi - 1] ; sub eax, ecx ; ret
0x0000000000418f60 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000424c83 : movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000046821f : movzx ecx, byte ptr [rsp - 0x15] ; mov byte ptr [r8 + 0x23], cl ; ret
0x00000000004652a4 : movzx edi, word ptr [rbp - 0x60] ; movzx esi, word ptr [rbp - 0x70] ; jmp 0x46527a
0x0000000000406ecf : movzx edx, byte ptr [rdi] ; test dl, dl ; jne 0x406eb7 ; ret
0x0000000000424b51 : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x000000000041908f : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x00000000004249e3 : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x0000000000432c64 : movzx edx, byte ptr [rsi - 0x10] ; sub eax, edx ; ret
0x0000000000432cc4 : movzx edx, byte ptr [rsi - 0xa] ; sub eax, edx ; ret
0x0000000000432cb4 : movzx edx, byte ptr [rsi - 0xb] ; sub eax, edx ; ret
0x0000000000432ca4 : movzx edx, byte ptr [rsi - 0xc] ; sub eax, edx ; ret
0x0000000000432c94 : movzx edx, byte ptr [rsi - 0xd] ; sub eax, edx ; ret
0x0000000000432c84 : movzx edx, byte ptr [rsi - 0xe] ; sub eax, edx ; ret
0x0000000000432c74 : movzx edx, byte ptr [rsi - 0xf] ; sub eax, edx ; ret
0x000000000042b240 : movzx edx, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000004258d7 : movzx edx, byte ptr [rsi - 1] ; sub eax, edx ; ret
0x0000000000432c4b : movzx edx, byte ptr [rsi - 9] ; sub eax, edx ; ret
0x000000000042b920 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000041c803 : movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000041c829 : movzx edx, dl ; sub eax, edx ; ret
0x000000000042b1c0 : movzx edx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x000000000042b8b0 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000452f21 : movzx esi, byte ptr [rax] ; add r12, 1 ; jmp 0x452ef4
0x00000000004652a8 : movzx esi, word ptr [rbp - 0x70] ; jmp 0x465276
0x0000000000452f20 : movzx r14d, byte ptr [rax] ; add r12, 1 ; jmp 0x452ef5
0x0000000000468184 : movzx rax, al ; ret
0x0000000000494199 : mul byte ptr [rdx] ; add byte ptr [rbp + 0x1e], dh ; ret
0x0000000000462d47 : mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00000000004b6e3c : mul ebp ; cmc ; jmp qword ptr [rdx]
0x0000000000476c9d : mulps xmm0, xmm0 ; pop r15 ; ret
0x0000000000479a8c : mulsd xmm0, xmm0 ; pop r15 ; ret
0x0000000000476c9c : mulss xmm0, xmm0 ; pop r15 ; ret
0x0000000000493bd6 : neg byte ptr [rdx] ; clc ; push rbx ; ret
0x0000000000434a5b : neg eax ; mov dword ptr fs:[rdx], eax ; or rax, 0xffffffffffffffff ; ret
0x000000000040c82a : neg eax ; pop r13 ; ret
0x000000000047f06f : neg eax ; ret
0x0000000000434d66 : neg edx ; cmp dword ptr [rsp + 0x10], 2 ; cmove eax, edx ; jmp 0x434d34
0x0000000000434c56 : neg edx ; cmp dword ptr [rsp - 0x68], 2 ; cmove eax, edx ; ret
0x0000000000468230 : neg edx ; mov dword ptr fs:[rax], edx ; or eax, 0xffffffff ; ret
0x0000000000473c64 : neg edx ; mov eax, edx ; ret
0x00000000004885b6 : nop ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x8948
0x000000000042a96b : nop ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000442978 : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000047debe : nop ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x0000000000424f8c : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004bc025 : nop ; add byte ptr [rax], al ; fsubr dword ptr [rcx - 6] ; jmp qword ptr [rax]
0x00000000004bc03d : nop ; add byte ptr [rax], al ; loopne 0x4bc0b3 ; cli ; jmp rdx
0x0000000000465942 : nop ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ror dword ptr [rdi], 1 ; xchg eax, esp ; ret
0x0000000000433d7f : nop ; add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x000000000043a25f : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000004b3850 : nop ; and ebp, esi ; call qword ptr [rcx]
0x000000000041c65f : nop ; bsf eax, eax ; lea rax, qword ptr [rax + rdi - 0x10] ; ret
0x000000000048d43f : nop ; call rax
0x00000000004971ec : nop ; clc ; clc ; jmp rax
0x0000000000496ded : nop ; clc ; jmp rax
0x00000000004bc48d : nop ; cli ; jmp qword ptr [rdx]
0x00000000004b4640 : nop ; cmc ; call qword ptr [rcx]
0x00000000004974ac : nop ; cmp al, 0xf9 ; call qword ptr [rax]
0x00000000004974bc : nop ; cmp bh, cl ; call qword ptr [rax]
0x00000000004974cc : nop ; cmp cl, bh ; call qword ptr [rax]
0x00000000004974c4 : nop ; cmp ecx, edi ; call qword ptr [rax]
0x00000000004974b4 : nop ; cmp edi, ecx ; call qword ptr [rax]
0x0000000000401bdc : nop ; hlt ; sub eax, dword ptr [rax] ; xor eax, eax ; ret
0x00000000004652ab : nop ; jmp 0x465273
0x0000000000427eef : nop ; mov dl, byte ptr [rsi - 1] ; mov byte ptr [rdi - 1], dl ; ret
0x00000000004280cf : nop ; mov dx, word ptr [rsi - 2] ; mov word ptr [rdi - 2], dx ; ret
0x0000000000461b9f : nop ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040e17f : nop ; mov eax, 0xffffffff ; ret
0x000000000042848f : nop ; mov edx, dword ptr [rsi - 4] ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004313ef : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000040b07f : nop ; mov rax, -1 ; pop rbx ; ret
0x000000000040f41f : nop ; mov rax, -1 ; ret
0x000000000048fcef : nop ; mov rax, qword ptr [rax] ; add rsp, 8 ; ret
0x000000000040f16f : nop ; mov rcx, qword ptr [rdi] ; mov qword ptr [rdx], rcx ; ret
0x0000000000430e8f : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000004b4864 : nop ; push rdi ; cmc ; jmp qword ptr [rdx]
0x0000000000408b87 : nop ; ret
0x00000000004950e0 : nop ; ret 0x40
0x0000000000497d90 : nop ; ret 0x43
0x00000000004ba740 : nop ; ret 0xfff8
0x000000000049719c : nop ; sbb cl, bh ; jmp qword ptr [rax]
0x0000000000497278 : nop ; stc ; jmp qword ptr [rax]
0x0000000000496e30 : nop ; stosd dword ptr [rdi], eax ; clc ; jmp rax
0x000000000040f1af : nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000437e7f : nop ; xor eax, eax ; leave ; ret
0x000000000041c82f : nop ; xor eax, eax ; ret
0x000000000041c6df : nop ; xor rax, rax ; ret
0x0000000000430dcb : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x0000000000464523 : nop dword ptr [rax + rax] ; mov rax, rcx ; ret
0x000000000040b27b : nop dword ptr [rax + rax] ; or eax, 0x20 ; jmp 0x40b250
0x000000000040f468 : nop dword ptr [rax + rax] ; ret
0x0000000000409973 : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000463b8c : nop dword ptr [rax] ; add rax, 1 ; ret
0x000000000040f82c : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x0000000000408b4c : nop dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000040b77d : nop dword ptr [rax] ; mov edi, dword ptr [rdi + 0x70] ; jmp 0x4379a8
0x0000000000422e64 : nop dword ptr [rax] ; mov qword ptr [rdi], rcx ; ret
0x0000000000433d1c : nop dword ptr [rax] ; pop rbx ; ret
0x0000000000410325 : nop dword ptr [rax] ; ret
0x0000000000438fbc : nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000464522 : nop word ptr [rax + rax] ; mov rax, rcx ; ret
0x0000000000468412 : nop word ptr [rax + rax] ; ret
0x0000000000474dd0 : not eax ; and eax, ecx ; ret
0x0000000000474e4f : not eax ; and eax, edx ; ret
0x0000000000474238 : not ecx ; jmp 0x474251
0x00000000004742e2 : not ecx ; jmp 0x4742fb
0x0000000000473ff1 : not edx ; jmp 0x474006
0x00000000004740bf : not edx ; jmp 0x4740d4
0x0000000000474237 : not r9 ; jmp 0x474252
0x00000000004742e1 : not r9 ; jmp 0x4742fc
0x0000000000473ff0 : not rdx ; jmp 0x474007
0x00000000004740be : not rdx ; jmp 0x4740d5
0x00000000004728ec : or al, 0 ; add bl, dh ; ret
0x000000000045668a : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000420597 : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000421c0f : or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000046827a : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000414432 : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x00000000004145e2 : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004b3c35 : or al, 0 ; add byte ptr [rax], bl ; cmc ; call qword ptr [rbx]
0x000000000045c55e : or al, 0x16 ; add rdx, r12 ; call qword ptr [r11 + rax*8]
0x0000000000449f5b : or al, 0x16 ; add rdx, rbx ; call qword ptr [r11 + rax*8]
0x0000000000418f46 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x00000000004b4d84 : or al, 0x1e ; add byte ptr [rax], al ; call 0x114b42ff
0x00000000004714c5 : or al, 0x3e ; jae 0x471487 ; xor eax, eax ; ret
0x0000000000437c68 : or al, 0x41 ; pop rsp ; ret
0x00000000004747e0 : or al, 0x48 ; add esp, 0x48 ; ret
0x0000000000401764 : or al, 0x48 ; mov eax, dword ptr [rsp + 0x18] ; call rax
0x0000000000487c67 : or al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000045f57a : or al, 0x7e ; ret
0x0000000000473ff4 : or al, 0x83 ; ret
0x0000000000433935 : or al, 0x83 ; rol byte ptr [rcx], 0x83 ; ret 0x4101
0x000000000044d992 : or al, 0x85 ; sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x00000000004482f6 : or al, 0x89 ; ret 0xeac0
0x000000000048ece4 : or al, 0x8a ; add rdx, rcx ; jmp rdx
0x0000000000417bb3 : or al, 0x8a ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000041f684 : or al, 0x8a ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000428eb8 : or al, 0x8b ; add r9, r11 ; jmp r9
0x0000000000426324 : or al, 0x8b ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x000000000048d775 : or al, 0x8f ; add rcx, r15 ; jmp rcx
0x000000000048d8ca : or al, 0x8f ; add rcx, rdi ; jmp rcx
0x0000000000424c6f : or al, 0x93 ; add rcx, r11 ; jmp rcx
0x0000000000430c5b : or al, 0x93 ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x0000000000426328 : or al, 0xb ; jmp r9
0x0000000000430c5f : or al, 0xb ; jmp rcx
0x00000000004bec84 : or al, 0xbd ; add byte ptr [rax], al ; call 0x114be91f
0x00000000004ba6f4 : or al, 0xc4 ; clc ; jmp qword ptr [rdx]
0x00000000004b3d84 : or al, 0xe ; add byte ptr [rax], al ; cmp byte ptr [rdi], bh ; cmc ; call qword ptr [rdx]
0x000000000042b443 : or al, 0xf3 ; movq qword ptr [rdi], mm1 ; ret
0x000000000045f876 : or al, 0xf6 ; ret 0x7404
0x000000000045fe43 : or al, 0xf6 ; ret 0xf04
0x0000000000497121 : or al, 0xf9 ; call rax
0x00000000004970c1 : or al, 0xf9 ; inc dword ptr [rax + 0xe] ; stc ; jmp qword ptr [rax]
0x00000000004970e1 : or al, 0xf9 ; jmp qword ptr [rax]
0x00000000004b2219 : or al, 0xfd ; inc dword ptr [rax + 0xe] ; std ; jmp qword ptr [rax]
0x00000000004b2e88 : or al, bl ; std ; call rax
0x00000000004191dd : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004207a1 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000419201 : or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000048fac9 : or al, byte ptr [rax] ; add byte ptr [rax], al ; mov edi, 1 ; call rax
0x000000000043647a : or al, byte ptr [rax] ; add byte ptr [rcx], dh ; test byte ptr [rax - 0x77], 0xef ; call rbx
0x0000000000405a25 : or al, byte ptr [rbp + 0xf] ; ret 0x8348
0x00000000004847e7 : or al, byte ptr es:[rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000041c2fb : or al, ch ; lahf ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0xc031
0x0000000000414ed0 : or al, ch ; pop rdx ; ret 0xffff
0x0000000000466d17 : or al, ch ; ret
0x000000000047dde8 : or al, ch ; ret 0xff75
0x0000000000462838 : or al, ch ; ret 1
0x0000000000474c67 : or bh, bh ; loopne 0x474cc7 ; ret
0x000000000048fd5e : or bl, al ; mov rax, qword ptr [rdi + 0x98] ; ret
0x00000000004704f8 : or bl, al ; nop word ptr [rax + rax] ; ret
0x000000000040e0ed : or bl, byte ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000442822 : or bl, byte ptr [rsi] ; add eax, dword ptr [rax] ; mov rdi, rbx ; call r12
0x0000000000459b12 : or bl, ch ; add al, 0xff ; or dh, byte ptr [rbp + 2] ; ret
0x000000000042b603 : or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000040f20a : or bl, dh ; ret
0x000000000040f209 : or bl, sil ; ret
0x00000000004166f4 : or byte ptr [r13 - 0x77], r9b ; ret
0x000000000040dfe6 : or byte ptr [r15], cl ; mov dh, 2 ; pop rbx ; ret
0x000000000042f108 : or byte ptr [r8 - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000407962 : or byte ptr [r8 - 0x77], r9b ; ret 0xc148
0x00000000004688b2 : or byte ptr [r8 - 0x7b], cl ; sal byte ptr [rdi + 0x48], 0x89 ; ret
0x00000000004849c2 : or byte ptr [r8], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042f1c7 : or byte ptr [r9 - 0x76b7f7be], cl ; clc ; ret
0x000000000040fcbb : or byte ptr [rax + 0x29], cl ; ret 0x148
0x0000000000410b9b : or byte ptr [rax + 0x29], cl ; ret 0x8e74
0x000000000040f807 : or byte ptr [rax + 0x39], cl ; enter 0x2373, 0xf ; mov dh, 0 ; ret
0x000000000041b909 : or byte ptr [rax + 0x39], cl ; ret
0x0000000000415afb : or byte ptr [rax + 0x39], cl ; ret 0x870f
0x0000000000464e7d : or byte ptr [rax + 0x39], r9b ; ret
0x0000000000472848 : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000403e93 : or byte ptr [rax + 1], cl ; ret
0x000000000047119a : or byte ptr [rax + 4], 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000043cfb0 : or byte ptr [rax + 7], bh ; jmp 0x43cf81
0x0000000000487abd : or byte ptr [rax - 0x3f], 0xe0 ; add cl, byte ptr [rax + 0x29] ; ret 0x8948
0x000000000040230c : or byte ptr [rax - 0x73], 0x44 ; shr al, 1 ; mov rdx, rax ; jmp 0x402335
0x000000000041c709 : or byte ptr [rax - 0x73], cl ; add eax, 0x1f ; ret
0x000000000041c71d : or byte ptr [rax - 0x73], cl ; add eax, 0x852b ; ret
0x00000000004758c1 : or byte ptr [rax - 0x75], cl ; adc cl, byte ptr [rax + 1] ; ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x0000000000435d08 : or byte ptr [rax - 0x75], cl ; and al, 0x10 ; call rax
0x0000000000435be1 : or byte ptr [rax - 0x75], cl ; cmp byte ptr [rax - 0x77], cl ; and al, 8 ; call rbx
0x000000000043e848 : or byte ptr [rax - 0x75], cl ; je 0x43e877 ; pop rax ; call rax
0x000000000042f10d : or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000470fb8 : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000043559c : or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000042f109 : or byte ptr [rax - 0x77], cl ; or byte ptr [rax - 0x77], cl ; clc ; ret
0x0000000000410d6d : or byte ptr [rax - 0x77], cl ; rcr byte ptr [rbx + 0x5d], 1 ; ret
0x000000000048ae1c : or byte ptr [rax - 0x77], cl ; ret
0x0000000000407963 : or byte ptr [rax - 0x77], cl ; ret 0xc148
0x00000000004688b3 : or byte ptr [rax - 0x7b], cl ; sal byte ptr [rdi + 0x48], 0x89 ; ret
0x000000000041463b : or byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000435cd3 : or byte ptr [rax - 0x7d], cl ; ret
0x0000000000422ef6 : or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000422f7e : or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x000000000046ff87 : or byte ptr [rax - 0x7d], cl ; ret 0x4810
0x0000000000403c2a : or byte ptr [rax - 0x7d], cl ; ret 0x4c08
0x0000000000450e63 : or byte ptr [rax - 0x7d], cl ; ret 0x8404
0x0000000000450f32 : or byte ptr [rax - 0x7d], cl ; ret 0x8504
0x00000000004b40dc : or byte ptr [rax - 0xb], cl ; jmp qword ptr [rdx]
0x000000000040ab13 : or byte ptr [rax - 1], bh ; pop rbx ; pop rbp ; ret
0x000000000041943c : or byte ptr [rax], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004100cf : or byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x8b48
0x000000000041943d : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000420941 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000419461 : or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000040e94c : or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004905f3 : or byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000433bda : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000413848 : or byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00000000004bf31e : or byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret
0x0000000000421ffe : or byte ptr [rax], r8b ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000048aada : or byte ptr [rbp + 0x440f4cd2], al ; ret
0x00000000004bfec3 : or byte ptr [rbp + 0xb], al ; push rbx ; ret
0x0000000000490492 : or byte ptr [rbp - 0x73], cl ; cmp al, 0xcc ; mov rsi, qword ptr [r15] ; call r14
0x000000000043f2c7 : or byte ptr [rbp - 0x77], al ; ret 0x8948
0x00000000004166f5 : or byte ptr [rbp - 0x77], cl ; ret
0x0000000000461932 : or byte ptr [rbx + 0x5d], bl ; jmp rax
0x000000000040c825 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; neg eax ; pop r13 ; ret
0x000000000040b9ee : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000004064de : or byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000402065 : or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000490573 : or byte ptr [rbx + 0x634801eb], al ; ret
0x00000000004bc8bb : or byte ptr [rbx + 0xb], al ; jne 0x4bc8cf ; ret
0x000000000046df1e : or byte ptr [rbx], al ; add byte ptr [rax], al ; ret
0x00000000004765bb : or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x0000000000450d7a : or byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; pop r13 ; ret
0x000000000048be79 : or byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x00000000004bc8c2 : or byte ptr [rcx + 0xb], al ; ret
0x000000000048c9db : or byte ptr [rcx + 1], cl ; ret 0x894c
0x0000000000475a70 : or byte ptr [rcx + rax - 0x3e], cl ; mov rax, rdx ; pop rbx ; ret
0x000000000049219e : or byte ptr [rcx + rcx*4 + 3], cl ; pop rbx ; ret
0x00000000004765c2 : or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x000000000042f1c8 : or byte ptr [rcx - 0x76b7f7be], cl ; clc ; ret
0x000000000044c34b : or byte ptr [rcx - 0x77], cl ; push rdi ; or cl, ch ; ret 0xfffb
0x0000000000437dfe : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x0000000000446afc : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000004b0b3e : or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000046e397 : or byte ptr [rdi + 0x315], 4 ; xor eax, eax ; ret
0x000000000046dff1 : or byte ptr [rdi + 0x6c21a0], bh ; pop rbx ; pop rbp ; jmp rax
0x00000000004bc8eb : or byte ptr [rdi + 0xb], al ; jne 0x4bc8ff ; ret
0x0000000000456d96 : or byte ptr [rdi + rcx - 0x4a], al ; xor byte ptr [rax - 0x7d], cl ; ret
0x00000000004528a7 : or byte ptr [rdi + rcx - 0x4a], al ; xor byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x0000000000451c5e : or byte ptr [rdi + rcx - 0x4a], al ; xor byte ptr [rcx - 0x7d], cl ; ret 0x4401
0x0000000000452507 : or byte ptr [rdi + rcx - 0x4a], al ; xor byte ptr [rcx - 0x7d], cl ; ret 0xe901
0x000000000043ff36 : or byte ptr [rdi], 0x94 ; ret 0xb60f
0x000000000040e1ae : or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x000000000048ce89 : or byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x000000000040dfe7 : or byte ptr [rdi], cl ; mov dh, 2 ; pop rbx ; ret
0x00000000004268eb : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x000000000041bbdc : or byte ptr [rdi], cl ; test byte ptr [rcx + rax - 0x7cb80000], dl ; ret 0xe901
0x00000000004be8a4 : or byte ptr [rdx], al ; cld ; jmp qword ptr [rdx]
0x00000000004878fe : or cl, byte ptr [rax + 0x29] ; ret 0x5589
0x0000000000409be0 : or cl, byte ptr [rax + 1] ; ret 0x8948
0x000000000044f65d : or cl, byte ptr [rax - 0x3f] ; call 0xffffffffc2ce3e6e
0x000000000047a54c : or cl, byte ptr [rax - 0x7b] ; sal byte ptr [rbp + rdx + 0x4c], 0x39 ; ret 0x1075
0x0000000000466412 : or cl, byte ptr [rax - 0x7d] ; ret 0x4801
0x0000000000489ac9 : or cl, byte ptr [rax - 0x7d] ; ret 0xf08
0x00000000004618f7 : or cl, byte ptr [rbx + 0x5bd08910] ; ret
0x000000000045e8bd : or cl, ch ; push rbp ; ret
0x0000000000445fac : or cl, ch ; ret
0x000000000044c34f : or cl, ch ; ret 0xfffb
0x000000000048d055 : or cl, cl ; cmove rax, rdx ; ret
0x000000000042b523 : or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000491dc5 : or dh, bl ; ret
0x0000000000459b16 : or dh, byte ptr [rbp + 2] ; ret
0x000000000048aba7 : or dh, byte ptr [rbp - 0x55] ; call rbx
0x0000000000474855 : or dh, byte ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; ret
0x000000000041328b : or dh, dh ; ret 0x7404
0x0000000000414561 : or dh, dh ; ret 0x7502
0x00000000004127ea : or dh, dh ; ret 0xf01
0x00000000004132a7 : or dh, dh ; ret 0xf04
0x000000000040283f : or dh, dh ; ret 0xfdf
0x00000000004b32fc : or dh, dl ; hlt ; jmp qword ptr [rdx]
0x00000000004022ea : or dword ptr [rax - 0x73], ecx ; mov ebx, 0x80 ; call rax
0x0000000000419e2e : or dword ptr [rax - 1], ecx ; ret 0xc148
0x000000000047d164 : or dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x8b44
0x0000000000449ce2 : or dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000041936d : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000421eaf : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004192c7 : or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000047e892 : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000470f50 : or dword ptr [rax], eax ; add dh, dh ; ret
0x00000000004260a6 : or dword ptr [rbp - 0xcffffff], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x00000000004b43bc : or dword ptr [rbx - 0xb], ecx ; jmp qword ptr [rdx]
0x00000000004170b6 : or dword ptr [rbx - 0xd], ebx ; ret
0x000000000040b7e0 : or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000040ff1b : or dword ptr [rbx], 8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000416947 : or dword ptr [rcx - 0x7d], ecx ; ret
0x000000000041675e : or dword ptr [rcx - 0x7d], ecx ; sti ; adc al, 0x77 ; sub ecx, dword ptr [rcx - 0x7d] ; ret
0x0000000000409520 : or dword ptr [rcx], eax ; add byte ptr [rax - 0x7d], cl ; in al, dx ; xor byte ptr [rcx - 0x77], cl ; ret 0xb941
0x0000000000401cf4 : or dword ptr [rcx], esi ; idiv byte ptr [rdi + 1] ; call rax
0x0000000000471816 : or dword ptr [rip + 0x2509f3], 1 ; pop rbx ; ret
0x00000000004316b1 : or eax, 0x1c478d48 ; ret
0x000000000040b280 : or eax, 0x20 ; jmp 0x40b24b
0x0000000000406f28 : or eax, 0x2035b10f ; ret
0x0000000000494197 : or eax, 0x22f6c4 ; jne 0x4941c4 ; ret
0x00000000004bdb58 : or eax, 0x3520303 ; ret
0x00000000004b3d6d : or eax, 0x3f400000 ; cmc ; call qword ptr [rax]
0x00000000004234d2 : or eax, 0x48c0bc0f ; lea eax, dword ptr [rdi + rax] ; ret
0x0000000000417102 : or eax, 0x70c48348 ; pop rbx ; ret
0x00000000004203f7 : or eax, 0x83480000 ; ret 0x4910
0x0000000000420461 : or eax, 0x83480000 ; ret 0xe910
0x0000000000493f9d : or eax, 0x83489066 ; ret 0x4810
0x0000000000443c63 : or eax, 0x83489074 ; ret
0x000000000047a526 : or eax, 0x894c0000 ; ret
0x000000000047945c : or eax, 0xbe000004 ; ret 0x4ad4
0x00000000004b64a7 : or eax, 0xd1cfff6 ; mov dh, 0xa8 ; cmc ; jmp qword ptr [rdx]
0x00000000004b645f : or eax, 0xd1cfff6 ; repe cmpsd dword ptr [rsi], dword ptr [rdi] ; cmc ; jmp qword ptr [rdx]
0x00000000004b63cf : or eax, 0xd1cfff6 ; test al, 0xf5 ; jmp qword ptr [rdx]
0x00000000004b0173 : or eax, 0xeeb0f650 ; fcmovb st(0), st(3) ; ret
0x0000000000497185 : or eax, 0xf00fff9 ; stc ; jmp rax
0x0000000000497165 : or eax, 0xf40fff9 ; stc ; jmp qword ptr [rax]
0x000000000042b3d3 : or eax, 0xf7f0ff3 ; ret
0x00000000004b3a55 : or eax, 0xfff53741 ; sbb al, 0xd ; ret 0xf534
0x00000000004b8e9d : or eax, 0xfff7ee15 ; sbb al, 0xd ; ret 0xf7ec
0x00000000004bb63d : or eax, 0xfffa4f12 ; sbb al, 0xd ; ret 0xfa4e
0x00000000004bb77d : or eax, 0xfffa5115 ; sbb al, 0xd ; ret 0xfa50
0x00000000004be855 : or eax, 0xfffc02d1 ; sbb al, 0xd ; ret 0xfc01
0x0000000000434a61 : or eax, 0xffffffff ; ret
0x00000000004349de : or eax, dword ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000041910d : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000420601 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000419131 : or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004915a3 : or eax, dword ptr [rcx + 0x7ffe2] ; add byte ptr [rcx], cl ; ret 0x5389
0x0000000000422ee7 : or eax, edx ; mov qword ptr [rdi], rax ; pop rbx ; pop rbp ; ret
0x000000000048d6d1 : or eax, edx ; mov qword ptr [rsi], r8 ; ret
0x000000000040f1a4 : or ebp, dword ptr [rbx] ; push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000004c01b7 : or ebp, edx ; add dword ptr [rbx], eax ; ret
0x00000000004622b4 : or ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000042b593 : or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000047e87e : or ebx, esi ; ret
0x0000000000415f1a : or ecx, dword ptr [rax + 0x63] ; ret
0x000000000040b9df : or ecx, dword ptr [rax + 1] ; ret 0x8949
0x0000000000440fde : or ecx, dword ptr [rax - 0x77] ; ret 0xc889
0x0000000000464e33 : or ecx, dword ptr [rax - 0x7d] ; ret
0x000000000040ff1c : or ecx, dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000043c1d4 : or ecx, dword ptr [rcx + 0x4289504a] ; push rsp ; ret
0x000000000044669c : or ecx, dword ptr [rcx + rcx*4 - 0x1e] ; mov rdi, r14 ; call 0x4228d9
0x000000000041087f : or ecx, dword ptr [rcx - 0x7d] ; ret
0x0000000000474235 : or ecx, eax ; not r9 ; jmp 0x474254
0x00000000004742df : or ecx, eax ; not r9 ; jmp 0x4742fe
0x000000000048dad1 : or ecx, ebp ; ret
0x0000000000497181 : or edi, ecx ; jmp qword ptr [rax]
0x00000000004971a1 : or edi, ecx ; jmp rax
0x0000000000473fee : or edx, eax ; not rdx ; jmp 0x474009
0x00000000004740bc : or edx, eax ; not rdx ; jmp 0x4740d7
0x00000000004bc8bc : or esi, dword ptr [r13 + 0xa] ; ret
0x00000000004bc8bd : or esi, dword ptr [rbp + 0xa] ; ret
0x00000000004152b0 : or esi, dword ptr [rcx] ; salc ; mov byte ptr [rax + rbx], sil ; pop rbx ; ret
0x000000000042b4b3 : or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000468264 : or esi, ebx ; ret
0x000000000040b7e1 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000042b602 : or r11b, r14b ; movq qword ptr [rdi], mm1 ; ret
0x000000000042b592 : or r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x000000000042b522 : or r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x00000000004bc8ec : or r14d, dword ptr [r13 + 0xa] ; ret
0x000000000042b4b2 : or r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x000000000048d6d0 : or r8, rdx ; mov qword ptr [rsi], r8 ; ret
0x0000000000474234 : or r9, rax ; not r9 ; jmp 0x474255
0x00000000004742de : or r9, rax ; not r9 ; jmp 0x4742ff
0x00000000004bdb57 : or rax, 0x3520303 ; ret
0x0000000000434a60 : or rax, 0xffffffffffffffff ; ret
0x00000000004846c2 : or rax, qword ptr [r8] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000422ee6 : or rax, r10 ; mov qword ptr [rdi], rax ; pop rbx ; pop rbp ; ret
0x0000000000473fed : or rdx, rax ; not rdx ; jmp 0x47400a
0x00000000004740bb : or rdx, rax ; not rdx ; jmp 0x4740d8
0x00000000004af020 : out -0x31, eax ; movsb byte ptr [rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000004aca80 : out -0x3d, eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, dh ; ret
0x0000000000401889 : out -0x41, eax ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xc031
0x00000000004b0d48 : out -0xb, eax ; mov ch, 0xab ; ret
0x000000000042ae1a : out -0xd, eax ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x00000000004b94c4 : out 0x1b, eax ; clc ; jmp qword ptr [rdx]
0x0000000000494e91 : out 0x40, eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret 0x40
0x000000000049246a : out 0x41, eax ; call rsp
0x000000000047033c : out 0x41, eax ; pop rsp ; pop r13 ; jmp rax
0x00000000004727f9 : out 0x48, al ; add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000048fd49 : out 0x48, al ; mov dword ptr [rdi + rsi*8], edx ; add rsp, 8 ; ret
0x0000000000400c1d : out 0x4c, al ; mov edi, edi ; call 0x41ce46
0x000000000040ebb3 : out 0x5b, al ; ret
0x000000000048acd5 : out 0x89, al ; out dx, eax ; call qword ptr [rbx]
0x000000000048ac98 : out 0x89, al ; out dx, eax ; call rax
0x0000000000458f50 : out 0xe8, al ; jp 0x458ef5 ; cld ; dec dword ptr [rcx - 0x77] ; ret 0x92e9
0x00000000004349db : out 0xe8, al ; pop rdi ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x000000000042ad9a : out 0xf3, al ; movq qword ptr [rdi - 0x10], mm1 ; ret
0x000000000047d8fc : out 0xff, al ; dec dword ptr [rax - 0x77] ; ret
0x0000000000422d59 : out dx, al ; adc byte ptr [rax - 0x75], cl ; sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x0000000000497005 : out dx, al ; clc ; call qword ptr [rsi]
0x0000000000497085 : out dx, al ; clc ; jmp rax
0x00000000004b4b54 : out dx, al ; cmc ; jmp qword ptr [rdx]
0x00000000004b0177 : out dx, al ; fcmovb st(0), st(3) ; ret
0x00000000004b8e9f : out dx, al ; idiv edi ; sbb al, 0xd ; ret 0xf7ec
0x0000000000427f3a : out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042b1aa : out dx, al ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000421d5e : out dx, al ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004231c5 : out dx, eax ; adc byte ptr [rax - 0x7d], cl ; ret 0x4c01
0x0000000000439009 : out dx, eax ; add al, byte ptr [rax] ; xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x438fff
0x000000000048ae16 : out dx, eax ; add dword ptr [rsi - 0x73], ecx ; jl 0x48ae1d ; or byte ptr [rax - 0x77], cl ; ret
0x0000000000408357 : out dx, eax ; add ecx, ebp ; ret
0x000000000041cbde : out dx, eax ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000409446 : out dx, eax ; call 0x4156d3
0x0000000000475ad8 : out dx, eax ; call 0x48c908
0x000000000048acd7 : out dx, eax ; call qword ptr [rbx]
0x000000000048ac9a : out dx, eax ; call rax
0x0000000000436f7a : out dx, eax ; call rbx
0x00000000004b32b5 : out dx, eax ; hlt ; jmp qword ptr [rdx]
0x0000000000470473 : out dx, eax ; mov qword ptr [rax], 0 ; call r12
0x0000000000427d6a : out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000427e66 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000427db2 : out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000042b22a : out dx, eax ; movdqu xmmword ptr [rdi - 0x10], xmm1 ; ret
0x0000000000421e5d : out dx, eax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000040eb68 : out dx, eax ; pop rbx ; ret
0x0000000000424cf3 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000424d08 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000424d1d : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000043f903 : out dx, eax ; ret 0
0x00000000004333e3 : out dx, eax ; ret 0xf66
0x000000000042620c : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x00000000004261f5 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x00000000004261de : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x0000000000424c9a : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004b3671 : out dx, eax ; std ; call rdi
0x0000000000460f55 : out dx, eax ; xor r8d, r8d ; call r12
0x000000000041fd6e : outsb dx, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000043180e : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x00000000004bb5b4 : outsb dx, byte ptr [rsi] ; cli ; jmp qword ptr [rdx]
0x00000000004b0923 : outsb dx, byte ptr [rsi] ; ja 0x4b08ac ; ret 0x48f
0x00000000004ac9c8 : outsb dx, byte ptr [rsi] ; ret
0x00000000004ae664 : outsb dx, byte ptr [rsi] ; sahf ; ret 0x38ae
0x000000000041d1ea : outsb dx, byte ptr [rsi] ; xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x00000000004ac958 : outsd dx, dword ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rdx], ah ; ret
0x0000000000417d08 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0x7f10
0x000000000041d83e : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx - 0x7d] ; ret 0xf10
0x000000000042600d : outsd dx, dword ptr [rsi] ; push rdi ; ret
0x00000000004260ad : outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x0000000000462d4a : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000426012 : outsd dx, dword ptr [rsi] ; ret
0x00000000004af026 : outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x00000000004286a7 : outsd dx, dword ptr [rsi] ; ret 0x8b4c
0x00000000004260b2 : outsd dx, dword ptr [rsi] ; ret 0xc2b2
0x0000000000462d9a : outsd dx, dword ptr [rsi] ; ret 0xf66
0x00000000004b6974 : outsd dx, dword ptr [rsi] ; xlatb ; cmc ; jmp qword ptr [rdx]
0x00000000004af025 : outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x0000000000419002 : pcmpeqb mm0, mm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000463b84 : pcmpeqb mm3, qword ptr [rcx] ; add rax, 2 ; ret
0x0000000000463b6f : pcmpeqb mm3, qword ptr [rsi] ; ret
0x0000000000419001 : pcmpeqb xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000004b0425 : pcmpeqw mm5, qword ptr [rbp + r12*2 - 0x5f] ; mov cs, edi ; ret 0x8b36
0x00000000004b0426 : pcmpeqw mm5, qword ptr [rbp - 0x5f] ; mov cs, edi ; ret 0x8b36
0x0000000000419ec6 : pmovmskb edx, mm4 ; test edx, edx ; je 0x419eda ; bsf eax, edx ; ret
0x000000000043d63d : pop qword ptr [rdx + 0x31000000] ; ror byte ptr [rax + 0x39], cl ; ret
0x0000000000437a84 : pop r10 ; ret
0x00000000004b08af : pop r10 ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004156a4 : pop r12 ; jmp rax
0x0000000000450f8b : pop r12 ; mov eax, 1 ; pop r13 ; ret
0x0000000000401f40 : pop r12 ; mov rax, rcx ; pop r13 ; ret
0x000000000040c828 : pop r12 ; neg eax ; pop r13 ; ret
0x000000000047033d : pop r12 ; pop r13 ; jmp rax
0x00000000004638e8 : pop r12 ; pop r13 ; mov eax, edx ; pop r14 ; ret
0x0000000000467ba8 : pop r12 ; pop r13 ; mov rax, r14 ; pop r14 ; ret
0x0000000000415a6f : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000400656 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000401b6c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000401c82 : pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004087b4 : pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000401ecd : pop r12 ; pop r13 ; ret
0x000000000043b1e9 : pop r12 ; pop r13 ; xor eax, eax ; pop r14 ; ret
0x00000000004687c4 : pop r12 ; pop rbp ; ret
0x0000000000400493 : pop r12 ; ret
0x000000000040e4ae : pop r12 ; sub rax, r13 ; pop r13 ; pop r14 ; ret
0x000000000047033f : pop r13 ; jmp rax
0x0000000000450ebd : pop r13 ; mov eax, 1 ; pop r14 ; ret
0x00000000004638ea : pop r13 ; mov eax, edx ; pop r14 ; ret
0x0000000000467baa : pop r13 ; mov rax, r14 ; pop r14 ; ret
0x000000000047c342 : pop r13 ; pop r14 ; pop r15 ; fmulp st(1) ; ret
0x0000000000415a71 : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000400658 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000401b6e : pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000401c84 : pop r13 ; pop r14 ; ret
0x00000000004087b6 : pop r13 ; pop rbp ; ret
0x0000000000401ecf : pop r13 ; ret
0x00000000004620cb : pop r13 ; sub rax, r14 ; pop r14 ; pop r15 ; ret
0x000000000043b1eb : pop r13 ; xor eax, eax ; pop r14 ; ret
0x000000000047513a : pop r14 ; idiv r9 ; pop r15 ; ret
0x0000000000409d93 : pop r14 ; mov eax, 0xffffffff ; pop r15 ; ret
0x000000000046b518 : pop r14 ; mov eax, 1 ; pop r15 ; ret
0x0000000000479a8a : pop r14 ; mulsd xmm0, xmm0 ; pop r15 ; ret
0x0000000000476c9a : pop r14 ; mulss xmm0, xmm0 ; pop r15 ; ret
0x000000000047c344 : pop r14 ; pop r15 ; fmulp st(1) ; ret
0x0000000000415a73 : pop r14 ; pop r15 ; jmp rax
0x000000000040065a : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000401b70 : pop r14 ; pop r15 ; ret
0x0000000000401c86 : pop r14 ; ret
0x0000000000489621 : pop r14 ; sar rax, 3 ; pop r15 ; ret
0x000000000047c346 : pop r15 ; fmulp st(1) ; ret
0x0000000000415a75 : pop r15 ; jmp rax
0x000000000040065c : pop r15 ; pop rbp ; ret
0x0000000000401b72 : pop r15 ; ret
0x00000000004b877d : pop rax ; add byte ptr [rax], al ; push rax ; ret 0xfff7
0x000000000048d803 : pop rax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rcx]
0x000000000047edee : pop rax ; and al, 0 ; jmp rax
0x000000000043e84d : pop rax ; call rax
0x00000000004b9858 : pop rax ; cdq ; std ; jmp qword ptr [rdx]
0x00000000004b6cd4 : pop rax ; loop 0x4b6ccf ; jmp qword ptr [rdx]
0x0000000000445fab : pop rax ; or cl, ch ; ret
0x000000000044db34 : pop rax ; ret
0x00000000004178c4 : pop rax ; sahf ; add dword ptr [rax], eax ; ret
0x000000000048af42 : pop rax ; sub byte ptr [rax + 0x39], cl ; ret
0x0000000000437c65 : pop rbp ; and eax, 0xc ; pop r12 ; ret
0x0000000000415181 : pop rbp ; jmp rax
0x0000000000401013 : pop rbp ; mov byte ptr [rip + 0x2c1c25], 1 ; ret
0x0000000000450ebe : pop rbp ; mov eax, 1 ; pop r14 ; ret
0x0000000000409088 : pop rbp ; mov eax, edx ; pop r12 ; ret
0x00000000004638eb : pop rbp ; mov eax, edx ; pop r14 ; ret
0x0000000000400fa1 : pop rbp ; mov edi, 0x6c2c30 ; jmp rax
0x0000000000470339 : pop rbp ; mov edi, r12d ; pop r12 ; pop r13 ; jmp rax
0x00000000004236d9 : pop rbp ; mov rax, r12 ; pop r12 ; ret
0x0000000000467bab : pop rbp ; mov rax, r14 ; pop r14 ; ret
0x0000000000400fde : pop rbp ; mov rsi, rax ; mov edi, 0x6c2c30 ; jmp rdx
0x000000000040230b : pop rbp ; or byte ptr [rax - 0x73], 0x44 ; shr al, 1 ; mov rdx, rax ; jmp 0x402336
0x00000000004156a3 : pop rbp ; pop r12 ; jmp rax
0x0000000000401f3f : pop rbp ; pop r12 ; mov rax, rcx ; pop r13 ; ret
0x000000000040c827 : pop rbp ; pop r12 ; neg eax ; pop r13 ; ret
0x00000000004638e7 : pop rbp ; pop r12 ; pop r13 ; mov eax, edx ; pop r14 ; ret
0x0000000000415a6e : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000401b6b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000401c81 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000401ecc : pop rbp ; pop r12 ; pop r13 ; ret
0x000000000043b1e8 : pop rbp ; pop r12 ; pop r13 ; xor eax, eax ; pop r14 ; ret
0x0000000000400492 : pop rbp ; pop r12 ; ret
0x0000000000479a89 : pop rbp ; pop r14 ; mulsd xmm0, xmm0 ; pop r15 ; ret
0x0000000000476c99 : pop rbp ; pop r14 ; mulss xmm0, xmm0 ; pop r15 ; ret
0x000000000047c343 : pop rbp ; pop r14 ; pop r15 ; fmulp st(1) ; ret
0x0000000000415a72 : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x0000000000400659 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000401b6f : pop rbp ; pop r14 ; pop r15 ; ret
0x0000000000401c85 : pop rbp ; pop r14 ; ret
0x0000000000489620 : pop rbp ; pop r14 ; sar rax, 3 ; pop r15 ; ret
0x00000000004087b7 : pop rbp ; pop rbp ; ret
0x00000000004765c8 : pop rbp ; pop rbx ; ret
0x00000000004003cf : pop rbp ; ret
0x00000000004160ff : pop rbp ; salc ; sub al, byte ptr [rax] ; test rax, rax ; je 0x416113 ; call rax
0x0000000000460f68 : pop rbp ; sub rax, r14 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004620cc : pop rbp ; sub rax, r14 ; pop r14 ; pop r15 ; ret
0x0000000000406549 : pop rbp ; xor eax, eax ; pop r12 ; ret
0x000000000043b1ec : pop rbp ; xor eax, eax ; pop r14 ; ret
0x00000000004adbf8 : pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000433b5f : pop rbx ; and eax, 0x3fc00 ; ret
0x0000000000433b8f : pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000004adbf6 : pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000460493 : pop rbx ; div rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000047ebbe : pop rbx ; div rbp ; pop rbp ; pop r12 ; ret
0x000000000048cb0a : pop rbx ; jmp rax
0x0000000000433869 : pop rbx ; lea rax, qword ptr [r9 + 1] ; pop rbp ; ret
0x000000000040a81c : pop rbx ; mov eax, 0xffffffff ; pop rbp ; ret
0x000000000047182d : pop rbx ; mov eax, dword ptr fs:[rax] ; ret
0x0000000000433bf0 : pop rbx ; mov eax, eax ; ret
0x0000000000408955 : pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; ret
0x000000000044c872 : pop rbx ; mov eax, ebp ; pop rbp ; ret
0x0000000000470da6 : pop rbx ; mov eax, edx ; pop rbp ; ret
0x000000000047357a : pop rbx ; mov edi, 0x6c21e0 ; jmp rax
0x000000000040ddb6 : pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000040df36 : pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x0000000000460b37 : pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000004716be : pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x00000000004087b3 : pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000004687c3 : pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000437c64 : pop rbx ; pop rbp ; and eax, 0xc ; pop r12 ; ret
0x0000000000415180 : pop rbx ; pop rbp ; jmp rax
0x0000000000409087 : pop rbx ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x0000000000470338 : pop rbx ; pop rbp ; mov edi, r12d ; pop r12 ; pop r13 ; jmp rax
0x00000000004236d8 : pop rbx ; pop rbp ; mov rax, r12 ; pop r12 ; ret
0x00000000004156a2 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000401f3e : pop rbx ; pop rbp ; pop r12 ; mov rax, rcx ; pop r13 ; ret
0x000000000040c826 : pop rbx ; pop rbp ; pop r12 ; neg eax ; pop r13 ; ret
0x0000000000401c80 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000401ecb : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000400491 : pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004003ce : pop rbx ; pop rbp ; ret
0x0000000000406548 : pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x000000000040860d : pop rbx ; ret
0x00000000004b0ee0 : pop rbx ; ret 0x6f9
0x00000000004390c1 : pop rbx ; shl eax, cl ; pop rbp ; ret
0x0000000000464178 : pop rbx ; sub rax, rbp ; pop rbp ; pop r12 ; ret
0x000000000047ede8 : pop rbx ; xor esi, esi ; mov edi, dword ptr [rip + 0x24585f] ; jmp rax
0x00000000004b8935 : pop rcx ; add byte ptr [rax], al ; call 0x244b810f
0x00000000004b8f17 : pop rcx ; ret
0x0000000000417603 : pop rcx ; ret 0x2a
0x00000000004268e8 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000472a00 : pop rdi ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x8b48
0x00000000004224ed : pop rdi ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000047c347 : pop rdi ; fmulp st(1) ; ret
0x0000000000428309 : pop rdi ; in al, dx ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000428119 : pop rdi ; in eax, dx ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004b019e : pop rdi ; insd dword ptr [rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000415a76 : pop rdi ; jmp rax
0x00000000004af161 : pop rdi ; mov dh, 0x4e ; ret 0x474c
0x0000000000468624 : pop rdi ; mov rax, r9 ; ret
0x00000000004349dd : pop rdi ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret 0xffff
0x0000000000427f39 : pop rdi ; out dx, al ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000427d69 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], r8 ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000427e65 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov byte ptr [rdi - 1], dl ; ret
0x0000000000427db1 : pop rdi ; out dx, eax ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x000000000047eded : pop rdi ; pop rax ; and al, 0 ; jmp rax
0x000000000040065d : pop rdi ; pop rbp ; ret
0x00000000004bb73c : pop rdi ; push rax ; cli ; jmp qword ptr [rdx]
0x0000000000401b73 : pop rdi ; ret
0x00000000004bae81 : pop rdi ; stc ; call rdi
0x00000000004bad9d : pop rdi ; stc ; jmp qword ptr [rdx]
0x000000000047ebde : pop rdx ; and al, 0 ; add byte ptr [rsi + 0x6c], 0 ; ret
0x000000000040bfa7 : pop rdx ; cdqe ; ret
0x00000000004afd81 : pop rdx ; je 0x4afd4b ; ret 0xacfc
0x00000000004b0d47 : pop rdx ; out -0xb, eax ; mov ch, 0xab ; ret
0x0000000000437a83 : pop rdx ; pop r10 ; ret
0x000000000041517f : pop rdx ; pop rbx ; pop rbp ; jmp rax
0x0000000000437aa9 : pop rdx ; pop rsi ; ret
0x0000000000437a85 : pop rdx ; ret
0x00000000004a8690 : pop rdx ; ret 0x45
0x00000000004b2dd8 : pop rdx ; ret 0xfffd
0x0000000000414ed2 : pop rdx ; ret 0xffff
0x00000000004b08b0 : pop rdx ; sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000004223ee : pop rsi ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000040d329 : pop rsi ; and al, byte ptr [rax] ; add bl, dh ; ret
0x0000000000473f50 : pop rsi ; dec dword ptr [rax + 0x63] ; ret
0x000000000047513b : pop rsi ; idiv r9 ; pop r15 ; ret
0x0000000000409d94 : pop rsi ; mov eax, 0xffffffff ; pop r15 ; ret
0x000000000046b519 : pop rsi ; mov eax, 1 ; pop r15 ; ret
0x0000000000479a8b : pop rsi ; mulsd xmm0, xmm0 ; pop r15 ; ret
0x0000000000476c9b : pop rsi ; mulss xmm0, xmm0 ; pop r15 ; ret
0x0000000000422ef5 : pop rsi ; or byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000047c345 : pop rsi ; pop r15 ; fmulp st(1) ; ret
0x0000000000415a74 : pop rsi ; pop r15 ; jmp rax
0x000000000040065b : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000401b71 : pop rsi ; pop r15 ; ret
0x0000000000401c87 : pop rsi ; ret
0x0000000000489622 : pop rsi ; sar rax, 3 ; pop r15 ; ret
0x00000000004bdd41 : pop rsi ; std ; call rcx
0x000000000041ff80 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004794e2 : pop rsp ; add al, 0xbe ; ret 0x4ad4
0x000000000047b2ac : pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax - 0x39], cl ; ret
0x0000000000420c80 : pop rsp ; add eax, 0x83480000 ; ret 0xe910
0x0000000000413b8b : pop rsp ; and al, 0x28 ; call rax
0x0000000000453258 : pop rsp ; in eax, -1 ; dec dword ptr [rax - 0x39] ; ret 0xffc0
0x00000000004156a5 : pop rsp ; jmp rax
0x0000000000450f8c : pop rsp ; mov eax, 1 ; pop r13 ; ret
0x0000000000451057 : pop rsp ; mov eax, edx ; pop rbx ; ret
0x00000000004bebd4 : pop rsp ; mov esp, 0x6980000 ; cld ; call qword ptr [rax]
0x0000000000401f41 : pop rsp ; mov rax, rcx ; pop r13 ; ret
0x000000000040c829 : pop rsp ; neg eax ; pop r13 ; ret
0x0000000000419460 : pop rsp ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000047033e : pop rsp ; pop r13 ; jmp rax
0x00000000004638e9 : pop rsp ; pop r13 ; mov eax, edx ; pop r14 ; ret
0x0000000000467ba9 : pop rsp ; pop r13 ; mov rax, r14 ; pop r14 ; ret
0x000000000047c341 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; fmulp st(1) ; ret
0x0000000000415a70 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000400657 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000401b6d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x0000000000401c83 : pop rsp ; pop r13 ; pop r14 ; ret
0x00000000004087b5 : pop rsp ; pop r13 ; pop rbp ; ret
0x0000000000401ece : pop rsp ; pop r13 ; ret
0x000000000043b1ea : pop rsp ; pop r13 ; xor eax, eax ; pop r14 ; ret
0x00000000004687c5 : pop rsp ; pop rbp ; ret
0x0000000000400494 : pop rsp ; ret
0x00000000004b5ad4 : pop rsp ; sub eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; cmc ; call qword ptr [rdi]
0x000000000040e4af : pop rsp ; sub rax, r13 ; pop r13 ; pop r14 ; ret
0x0000000000496e0d : popfq ; clc ; jmp rax
0x00000000004b6151 : popfq ; cmc ; call qword ptr [rdx]
0x00000000004b61dd : popfq ; cmc ; jmp qword ptr [rdx]
0x0000000000433ab9 : popfq ; ret 0xea81
0x0000000000481cc0 : popfq ; sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000049785d : popfq ; stc ; call qword ptr [rax]
0x000000000049787d : popfq ; stc ; inc dword ptr [rax] ; sahf ; stc ; jmp qword ptr [rax]
0x0000000000497875 : popfq ; stc ; inc eax ; popfq ; stc ; jmp rax
0x0000000000497861 : popfq ; stc ; jmp qword ptr [rax]
0x0000000000497879 : popfq ; stc ; jmp rax
0x000000000042b2f2 : psllq mm1, qword ptr [r15] ; jg 0x42b30d ; ret
0x000000000042b2f3 : psllq mm1, qword ptr [rdi] ; jg 0x42b30c ; ret
0x0000000000430ed6 : psllq mm1, qword ptr [rdi] ; jg 0x430eea ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000430ed5 : psllq mm1, qword ptr [rdi] ; jg 0x430eeb ; mov dword ptr [rdi + 0xf], ecx ; ret
0x0000000000430f37 : psllq mm1, qword ptr [rdi] ; jg 0x430f4c ; mov qword ptr [rdi + 0xf], rcx ; ret
0x0000000000400e34 : push -0x40fffcd4 ; ret 0
0x00000000004b9855 : push -0x66a80000 ; std ; jmp qword ptr [rdx]
0x00000000004317f4 : push -0x9ffffff ; ret 0x7501
0x00000000004b997d : push 0 ; add byte ptr [rax], dl ; sub eax, edi ; call qword ptr [rax]
0x000000000045337a : push 0x15044f6 ; and byte ptr [rdi], cl ; test al, dl ; jmp 0x45338c
0x0000000000453379 : push 0x15044f6 ; and byte ptr [rdi], cl ; test al, dl ; jmp 0x45338d
0x0000000000435662 : push 0x3b ; add byte ptr [rax], al ; ret
0x000000000048cf24 : push 0x48000006 ; mov dword ptr [rbx + 0x20], eax ; pop rbx ; ret
0x0000000000496e61 : push 0x6ac0fff8 ; clc ; call rax
0x00000000004b0922 : push 0x6e ; ja 0x4b08ad ; ret 0x48f
0x0000000000474540 : push 0x83 ; ret
0x00000000004b653c : push 0xa9 ; cmc ; jmp qword ptr [rdx]
0x00000000004b2e00 : push 0xc4 ; std ; push qword ptr [rsi + 0x5afffdc4] ; ret 0xfffd
0x00000000004b47cf : push 0xd1cfff5 ; push rbx ; cmc ; jmp qword ptr [rdx]
0x0000000000401338 : push 0xf002c37 ; scasd eax, dword ptr [rdi] ; ret 0x589
0x0000000000496e65 : push 0xf8 ; call rax
0x00000000004bb05d : push 0xf9 ; jmp qword ptr [rdx]
0x00000000004b6d16 : push 5 ; idiv bh ; sbb al, 0xd ; xchg eax, esi ; jrcxz 0x4b6d1d ; jmp qword ptr [rdx]
0x0000000000496d0f : push qword ptr [rax + 0x2d] ; clc ; inc dword ptr [rax + 0x2e] ; clc ; call qword ptr [rax]
0x0000000000497497 : push qword ptr [rax + 0x40fff940] ; stc ; jmp rax
0x000000000049727f : push qword ptr [rax + 0x40fff943] ; stc ; call rax
0x0000000000401910 : push qword ptr [rax + 0x48] ; add esp, 8 ; ret
0x00000000004b2283 : push qword ptr [rax - 0x22] ; cld ; inc eax ; loopne 0x4b228f ; call qword ptr [rax]
0x0000000000497823 : push qword ptr [rax - 0x3f000665] ; wait ; stc ; call rax
0x00000000004977cb : push qword ptr [rax - 0x3f00066a] ; xchg eax, esi ; stc ; call rax
0x0000000000496e5f : push qword ptr [rax - 0x3f000798] ; push 0xf8 ; call rax
0x0000000000496e47 : push qword ptr [rax - 0x4d] ; clc ; inc eax ; mov ah, 0xf8 ; call qword ptr [rax]
0x00000000004b21f7 : push qword ptr [rax - 3] ; cld ; inc dword ptr [rax - 1] ; cld ; jmp qword ptr [rax]
0x00000000004970a7 : push qword ptr [rax] ; adc cl, bh ; call qword ptr [rax]
0x00000000004976a3 : push qword ptr [rax] ; cmp eax, 0x3cb0fff9 ; stc ; jmp qword ptr [rax]
0x0000000000497097 : push qword ptr [rax] ; int1 ; clc ; call rax
0x0000000000497203 : push qword ptr [rax] ; stc ; inc eax ; add ecx, edi ; call qword ptr [rax]
0x0000000000496cff : push qword ptr [rax] ; sub bh, al ; inc dword ptr [rax] ; sub edi, eax ; call rax
0x0000000000433178 : push qword ptr [rbp + 0x1a] ; xor eax, eax ; ret
0x000000000040a8ab : push qword ptr [rbp + 2] ; pop rbx ; ret
0x000000000040ebb1 : push qword ptr [rbp - 0x1a] ; pop rbx ; ret
0x0000000000437e7c : push qword ptr [rbp - 7] ; nop ; xor eax, eax ; leave ; ret
0x000000000040eb63 : push qword ptr [rbx + rax - 0x7d] ; and ebp, edi ; pop rbx ; ret
0x00000000004b2e0f : push qword ptr [rbx - 0x3c00023d] ; ret
0x00000000004b2e1b : push qword ptr [rbx] ; ret
0x00000000004b2dcf : push qword ptr [rcx + rax*8 - 3] ; call qword ptr [rdx + rax*8 - 3]
0x00000000004b2c53 : push qword ptr [rcx + rax*8 - 3] ; call rsp
0x00000000004b2a6f : push qword ptr [rcx + rax*8 - 3] ; inc dword ptr [rdx + rax*8] ; std ; jmp rsp
0x00000000004b2bcb : push qword ptr [rcx + rax*8] ; std ; inc esp ; ret
0x000000000040ad04 : push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000454151 : push qword ptr [rcx] ; rol byte ptr [rbp - 0x7b], cl ; ror byte ptr [rdi], 0x9f ; ret 0x9529
0x0000000000457d8b : push qword ptr [rcx] ; rol byte ptr [rbp - 0x7b], cl ; ror byte ptr [rdi], cl ; lahf ; ret 0x9529
0x0000000000415122 : push qword ptr [rcx] ; ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000434a3a : push qword ptr [rdi + 0x17] ; ret
0x0000000000434a89 : push qword ptr [rdi + 0x18] ; ret
0x000000000044544e : push qword ptr [rdi + 0x19] ; ret
0x000000000046800f : push qword ptr [rdi + 0x1a] ; ret
0x000000000046809e : push qword ptr [rdi + 0x35] ; add rsp, 0x70 ; pop rbx ; ret
0x0000000000434c1e : push qword ptr [rdi + 0x71] ; ret
0x00000000004682bc : push qword ptr [rdi + 1] ; ret
0x00000000004456e5 : push qword ptr [rdi + 2] ; ret
0x0000000000467c0d : push qword ptr [rdi + rbp - 0x77] ; ret 0xe283
0x0000000000493146 : push qword ptr [rdi + rbx - 0x18] ; ret 0xfff7
0x000000000049732b : push qword ptr [rdx + 0x42fff945] ; stc ; call rdx
0x000000000047ea93 : push qword ptr [rdx + rcx + 0x48] ; mov eax, edx ; pop rbx ; ret
0x00000000004972c7 : push qword ptr [rsi + 0x46fff942] ; stc ; call rsi
0x00000000004b2e03 : push qword ptr [rsi + 0x5afffdc4] ; ret 0xfffd
0x000000000046231d : push qword ptr [rsi + rsi*4 - 0xa] ; ret 0x7508
0x00000000004973f3 : push qword ptr [rsp + rax*2 + 0x4444fff9] ; stc ; call rsp
0x00000000004b2aaf : push qword ptr [rsp + rax*8 - 0x3b1b0003] ; std ; jmp rsp
0x000000000040dd1b : push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004135db : push rax ; adc byte ptr [rax + 0x39], cl ; ret 0x840f
0x000000000046157a : push rax ; adc byte ptr [rax - 0x77], cl ; ret
0x000000000040f1b1 : push rax ; adc byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x0000000000470e14 : push rax ; add al, 0x48 ; cmp edx, ecx ; jne 0x470dd2 ; mov eax, dword ptr [rdx] ; ret
0x000000000040dd1c : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000465748 : push rax ; add eax, dword ptr [rdi + rcx + 0x48] ; ret 0x93ba
0x000000000043744a : push rax ; add ecx, dword ptr [rax - 0x7b] ; ror byte ptr [rax + 0xf], 0x48 ; ret 0xc148
0x00000000004b2244 : push rax ; and ch, bh ; call rax
0x00000000004b224c : push rax ; and edi, ebp ; call rax
0x00000000004bb73d : push rax ; cli ; jmp qword ptr [rdx]
0x00000000004604bb : push rax ; cmp byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0xf40
0x00000000004552c0 : push rax ; fcos ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x00000000004bf250 : push rax ; fdivr st(4) ; call rbx
0x0000000000497074 : push rax ; in al, dx ; clc ; call rax
0x000000000049707c : push rax ; in eax, dx ; clc ; call rax
0x000000000045672f : push rax ; jmp 0x452984
0x0000000000474d1c : push rax ; jmp qword ptr [rax]
0x0000000000496e6f : push rax ; jo 0x496e73 ; inc dword ptr [rax] ; jae 0x496e77 ; call qword ptr [rax]
0x00000000004be130 : push rax ; jp 0x4be131 ; jmp rbx
0x000000000043c1d7 : push rax ; mov dword ptr [rdx + 0x54], eax ; ret
0x000000000044077d : push rax ; mov dword ptr [rsp + 8], eax ; call r14
0x000000000043e1a7 : push rax ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000048aad9 : push rax ; or byte ptr [rbp + 0x440f4cd2], al ; ret
0x00000000004064dd : push rax ; or byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000044c34a : push rax ; or byte ptr [rcx - 0x77], cl ; push rdi ; or cl, ch ; ret 0xfffb
0x000000000041328a : push rax ; or dh, dh ; ret 0x7404
0x00000000004132a6 : push rax ; or dh, dh ; ret 0xf04
0x000000000041936c : push rax ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000497084 : push rax ; out dx, al ; clc ; jmp rax
0x00000000004b2e2c : push rax ; ret
0x00000000004b8780 : push rax ; ret 0xfff7
0x00000000004b2234 : push rax ; sbb bh, ch ; call rax
0x000000000040f1a6 : push rax ; sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x000000000046241a : push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x00000000004971bc : push rax ; sbb cl, bh ; jmp rax
0x000000000049713c : push rax ; sbb ecx, edi ; jmp rax
0x000000000049779b : push rax ; stc ; inc dword ptr [rax] ; xchg eax, esi ; stc ; call qword ptr [rax]
0x0000000000497268 : push rax ; stc ; jmp rax
0x00000000004b2254 : push rax ; std ; call rax
0x00000000004b2264 : push rax ; sub al, 0xfd ; call rax
0x00000000004b225c : push rax ; sub ebp, edi ; call rax
0x0000000000497833 : push rax ; wait ; stc ; call qword ptr [rax]
0x0000000000497803 : push rax ; xchg eax, edi ; stc ; call qword ptr [rax]
0x00000000004977db : push rax ; xchg eax, esi ; stc ; inc dword ptr [rax] ; xchg eax, edi ; stc ; call qword ptr [rax]
0x0000000000496f53 : push rax ; xlatb ; clc ; call qword ptr [rax]
0x000000000040ebad : push rax ; xor byte ptr [rbx - 0x198a0008], al ; pop rbx ; ret
0x0000000000492896 : push rbp ; adc byte ptr [rcx - 0x75], cl ; sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000043f71a : push rbp ; add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], cl ; ret
0x00000000004b29f3 : push rbp ; mov edi, 0xbf2afffd ; std ; jmp qword ptr [rax]
0x0000000000482e08 : push rbp ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000414560 : push rbp ; or dh, dh ; ret 0x7502
0x000000000045e8bf : push rbp ; ret
0x0000000000460f51 : push rbp ; ror byte ptr [rcx + rcx*4 - 0x11], 0x45 ; xor eax, eax ; call r12
0x000000000041c65a : push rbp ; xor rax, rax ; ret
0x0000000000401666 : push rbx ; adc byte ptr [rax - 0x7d], cl ; ret
0x000000000047ee70 : push rbx ; add al, 0xf ; mov dh, 0xc0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004b8345 : push rbx ; add byte ptr [rax], al ; call 0x114b7a88
0x0000000000404fbb : push rbx ; add dword ptr [rax - 0x7d], ecx ; ret
0x000000000041c72a : push rbx ; add dword ptr [rax], eax ; ret
0x00000000004915ad : push rbx ; and cl, ch ; ret 0xfffb
0x00000000004bb9b1 : push rbx ; cli ; call rcx
0x00000000004b47d5 : push rbx ; cmc ; jmp qword ptr [rdx]
0x00000000004622e2 : push rbx ; je 0x462346 ; pop rbp ; pop r12 ; ret
0x000000000045f875 : push rbx ; or al, 0xf6 ; ret 0x7404
0x000000000045fe42 : push rbx ; or al, 0xf6 ; ret 0xf04
0x000000000040fcba : push rbx ; or byte ptr [rax + 0x29], cl ; ret 0x148
0x0000000000470fb7 : push rbx ; or byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000435cd2 : push rbx ; or byte ptr [rax - 0x7d], cl ; ret
0x000000000040e1ad : push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x0000000000410359 : push rbx ; ret
0x0000000000469e14 : push rbx ; sub dh, dh ; ret 0xf04
0x000000000040b68f : push rbx ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x00000000004b536c : push rbx ; test esi, ebp ; jmp qword ptr [rdx]
0x00000000004bc5ac : push rbx ; xchg eax, edi ; cli ; jmp qword ptr [rdx]
0x00000000004afd7c : push rbx ; xchg eax, edx ; jae 0x4afd5b ; push rsi ; pop rdx ; je 0x4afd50 ; ret 0xacfc
0x00000000004b80ad : push rcx ; add byte ptr [rax], al ; add byte ptr [rsi - 0xa], dh ; call qword ptr [rax]
0x000000000041c10d : push rcx ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x00000000004af005 : push rcx ; call qword ptr [rsi]
0x00000000004b48b9 : push rcx ; cmc ; jmp rsp
0x0000000000406f03 : push rcx ; ret
0x000000000043141a : push rdi ; add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x000000000042b459 : push rdi ; add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x00000000004b8765 : push rdi ; add byte ptr [rax], al ; ret 0xfff7
0x00000000004314cc : push rdi ; add eax, 0xc478d48 ; ret
0x000000000047eed8 : push rdi ; and al, 0 ; call rax
0x00000000004b9209 : push rdi ; call qword ptr [rax]
0x00000000004b9221 : push rdi ; call rcx
0x0000000000427bf8 : push rdi ; clc ; ret
0x0000000000427d70 : push rdi ; cld ; ret
0x0000000000428897 : push rdi ; cli ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004b4865 : push rdi ; cmc ; jmp qword ptr [rdx]
0x000000000042ad39 : push rdi ; cmc ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000046822f : push rdi ; fisub dword ptr [rcx + rcx*4 + 0x10] ; or eax, 0xffffffff ; ret
0x000000000042acb9 : push rdi ; hlt ; mov dword ptr [rdi - 4], ecx ; ret
0x000000000042ab0a : push rdi ; int1 ; mov qword ptr [rdi - 8], rcx ; ret
0x000000000040dc54 : push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x000000000042ab9a : push rdi ; mov qword ptr [rdi - 8], rcx ; ret
0x00000000004765ba : push rdi ; or byte ptr [rcx + 0x29], cl ; ret 0x894c
0x000000000048c9da : push rdi ; or byte ptr [rcx + 1], cl ; ret 0x894c
0x00000000004765c1 : push rdi ; or byte ptr [rcx - 0x2feeb728], cl ; pop rbp ; pop rbx ; ret
0x0000000000456d95 : push rdi ; or byte ptr [rdi + rcx - 0x4a], al ; xor byte ptr [rax - 0x7d], cl ; ret
0x00000000004528a6 : push rdi ; or byte ptr [rdi + rcx - 0x4a], al ; xor byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x0000000000451c5d : push rdi ; or byte ptr [rdi + rcx - 0x4a], al ; xor byte ptr [rcx - 0x7d], cl ; ret 0x4401
0x0000000000452506 : push rdi ; or byte ptr [rdi + rcx - 0x4a], al ; xor byte ptr [rcx - 0x7d], cl ; ret 0xe901
0x000000000044c34e : push rdi ; or cl, ch ; ret 0xfffb
0x00000000004316b0 : push rdi ; or eax, 0x1c478d48 ; ret
0x000000000042600e : push rdi ; ret
0x00000000004260ae : push rdi ; ret 0xff3
0x0000000000407f61 : push rdi ; ret 0xffef
0x0000000000435e32 : push rdi ; sbb byte ptr [rcx - 0xa], al ; ret 0x7401
0x0000000000428a97 : push rdi ; stc ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004282ba : push rdi ; std ; mov word ptr [rdi - 2], cx ; ret
0x0000000000428697 : push rdi ; sti ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000462d4b : push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00000000004bb941 : push rdx ; cli ; jmp rbx
0x00000000004b2e4f : push rdx ; ret
0x00000000004b94be : push rdx ; sbb eax, 0xd1cfff8 ; out 0x1b, eax ; clc ; jmp qword ptr [rdx]
0x0000000000497354 : push rdx ; stc ; jmp rdx
0x0000000000424cf4 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000461a5d : push rsi ; add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000042b6f1 : push rsi ; add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000042b761 : push rsi ; add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x0000000000430e65 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x000000000042b681 : push rsi ; add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000430e03 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; ret
0x0000000000424d09 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000427d22 : push rsi ; clc ; mov qword ptr [rdi - 8], rdx ; ret
0x0000000000428491 : push rsi ; cld ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004280c5 : push rsi ; cld ; mov qword ptr [rdi - 0xa], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004282a5 : push rsi ; cld ; mov qword ptr [rdi - 0xb], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000428485 : push rsi ; cld ; mov qword ptr [rdi - 0xc], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x0000000000427ee5 : push rsi ; cld ; mov qword ptr [rdi - 9], rcx ; mov dword ptr [rdi - 4], edx ; ret
0x00000000004bbb19 : push rsi ; cli ; call rcx
0x00000000004b0920 : push rsi ; cli ; push 0x6e ; ja 0x4b08af ; ret 0x48f
0x00000000004b481d : push rsi ; cmc ; jmp qword ptr [rdx]
0x0000000000432cb6 : push rsi ; cmc ; sub eax, edx ; ret
0x0000000000432ca6 : push rsi ; hlt ; sub eax, edx ; ret
0x0000000000432c76 : push rsi ; int1 ; sub eax, edx ; ret
0x0000000000422f7d : push rsi ; or byte ptr [rax - 0x7d], cl ; ret 0x4802
0x00000000004afd80 : push rsi ; pop rdx ; je 0x4afd4c ; ret 0xacfc
0x00000000004adcc6 : push rsi ; ret
0x0000000000469e9d : push rsi ; ret 0xf02
0x00000000004972b0 : push rsi ; stc ; jmp rsi
0x0000000000432c86 : push rsi ; sub eax, edx ; ret
0x0000000000424d1e : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004b83a5 : push rsp ; add byte ptr [rax], al ; cwde ; xchg bh, dh ; jmp qword ptr [rbx]
0x0000000000413b86 : push rsp ; and al, 0x30 ; mov dword ptr [rsp + 0x28], r11d ; call rax
0x000000000048ca50 : push rsp ; and al, 0xf8 ; movsd xmm0, qword ptr [rsp - 8] ; ret
0x000000000048ca0a : push rsp ; and al, 0xfc ; movss xmm0, dword ptr [rsp - 4] ; ret
0x0000000000414ece : push rsp ; and al, 8 ; call 0x411135
0x00000000004bbab1 : push rsp ; cli ; call rsp
0x00000000004b29d0 : push rsp ; mov ebx, 0xbb54fffd ; std ; jmp rax
0x00000000004b29d4 : push rsp ; mov ebx, 0xbee0fffd ; std ; call rdx
0x00000000004131f4 : push rsp ; ret
0x000000000049144d : push rsp ; ret 0x4910
0x00000000004b2dd4 : push rsp ; ret 0xfffd
0x00000000004b5324 : push rsp ; test esi, ebp ; jmp qword ptr [rdx]
0x000000000041fc40 : pushfq ; adc eax, 0x83480000 ; ret 0xe910
0x000000000047debc : pushfq ; and al, 0x90 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x7d], al ; ret
0x00000000004b6069 : pushfq ; cmc ; call qword ptr [rsi]
0x00000000004b5715 : pushfq ; cmc ; jmp qword ptr [rdx]
0x0000000000467df0 : pushfq ; jbe 0x467df3 ; dec dword ptr [rax + 0x39] ; ret
0x000000000040d24c : pushfq ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000004bbb14 : pushfq ; mov eax, dword ptr [rax] ; add al, bl ; push rsi ; cli ; call rcx
0x0000000000420940 : pushfq ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004a8a18 : pushfq ; ret 0x45
0x0000000000497859 : pushfq ; stc ; inc dword ptr [rax] ; popfq ; stc ; call qword ptr [rax]
0x0000000000497851 : pushfq ; stc ; inc eax ; pushfq ; stc ; jmp rax
0x0000000000497839 : pushfq ; stc ; jmp qword ptr [rax]
0x0000000000497855 : pushfq ; stc ; jmp rax
0x00000000004bc314 : pushfq ; xchg eax, ebx ; add byte ptr [rax], al ; call 0xffffffffd14bbda0
0x00000000004bc714 : pushfq ; xchg eax, edi ; add byte ptr [rax], al ; cwde ; mov dr1, edx ; jmp rbx
0x0000000000465941 : rcl byte ptr [rax + 0x39000001], cl ; ror dword ptr [rdi], 1 ; xchg eax, esp ; ret
0x0000000000497174 : rcl byte ptr [rcx + rdi*8], 1 ; call rax
0x0000000000497800 : rcl byte ptr [rdi - 0x680f0007], 1 ; stc ; call qword ptr [rax]
0x00000000004970d8 : rcl byte ptr [rdi], 1 ; stc ; call rax
0x00000000004970d4 : rcl byte ptr [rip + 0x17d0fff9], 1 ; stc ; call rax
0x00000000004977d0 : rcl byte ptr [rsi - 0x692f0007], 0xf9 ; jmp rax
0x0000000000497178 : rcl byte ptr [rsi], 1 ; stc ; call rax
0x0000000000496f50 : rcl dh, 1 ; clc ; push rax ; xlatb ; clc ; call qword ptr [rax]
0x0000000000413ed9 : rcl dword ptr [rip + 0x2ad949], -0x7d ; ret 0x8b01
0x00000000004afd7f : rcl dword ptr [rsi + 0x5a], cl ; je 0x4afd4d ; ret 0xacfc
0x00000000004afd7b : rcpps xmm2, xmmword ptr [rdx + 0x5a56d373] ; je 0x4afd51 ; ret 0xacfc
0x00000000004b2e8c : rcr al, 1 ; std ; call rax
0x00000000004765c7 : rcr byte ptr [rbp + 0x5b], 1 ; ret
0x0000000000437e00 : rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x000000000047ebbd : rcr byte ptr [rbx + 0x48], cl ; div ebp ; pop rbp ; pop r12 ; ret
0x0000000000411275 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000446afe : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000407c0e : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000048ff1b : rcr byte ptr [rbx + 0x5d], 0xc3 ; nop ; ret
0x0000000000450d7c : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; pop r13 ; ret
0x00000000004155ba : rcr byte ptr [rbx + 0x5d], 1 ; pop r12 ; ret
0x0000000000410d70 : rcr byte ptr [rbx + 0x5d], 1 ; ret
0x0000000000497828 : rcr byte ptr [rbx - 0x642f0007], 0xf9 ; jmp rax
0x00000000004b019d : rcr byte ptr [rdi + 0x6d], cl ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000004b227c : rcr cl, 1 ; cld ; jmp qword ptr [rax]
0x00000000004b626c : rcr dh, cl ; std ; jmp qword ptr [rdx]
0x0000000000474f19 : rcr dword ptr [rcx], -0x40 ; and eax, 2 ; sub eax, 1 ; ret
0x0000000000400cd9 : repe cmpsb byte ptr [rsi], byte ptr [rdi] ; jne 0x400ce2 ; ret
0x00000000004b6464 : repe cmpsd dword ptr [rsi], dword ptr [rdi] ; cmc ; jmp qword ptr [rdx]
0x00000000004001c7 : ret
0x0000000000400d35 : ret 0
0x0000000000444dc8 : ret 0x101
0x000000000045fe9f : ret 0x107
0x000000000047a554 : ret 0x1075
0x000000000045470c : ret 0x11
0x0000000000413552 : ret 0x110
0x000000000047659c : ret 0x114d
0x00000000004a25c8 : ret 0x12
0x0000000000409f7a : ret 0x12e
0x00000000004592d8 : ret 0x12e9
0x0000000000434af7 : ret 0x13e8
0x00000000004081cb : ret 0x13eb
0x000000000040fcbe : ret 0x148
0x000000000040ebc2 : ret 0x149
0x000000000043524c : ret 0x14c
0x0000000000476fd4 : ret 0x15
0x000000000041245c : ret 0x1589
0x00000000004470bf : ret 0x1676
0x0000000000402314 : ret 0x16eb
0x000000000041a0aa : ret 0x17
0x000000000041c6c5 : ret 0x1876
0x000000000046eeb2 : ret 0x18e8
0x00000000004096ca : ret 0x19d
0x0000000000491121 : ret 0x19e8
0x00000000004b06fa : ret 0x1ad4
0x00000000004aee8d : ret 0x1b49
0x000000000044e386 : ret 0x1b8
0x000000000041d41a : ret 0x1bd
0x0000000000401924 : ret 0x1be
0x00000000004a4000 : ret 0x1d4
0x00000000004a4798 : ret 0x1d5
0x000000000040b284 : ret 0x1f0f
0x000000000044534d : ret 0x200
0x0000000000474dee : ret 0x2148
0x000000000046a9cc : ret 0x2175
0x000000000045bfcd : ret 0x22
0x0000000000419e28 : ret 0x2288
0x000000000045dfeb : ret 0x22e9
0x0000000000492709 : ret 0x230f
0x0000000000426212 : ret 0x2373
0x000000000048d06a : ret 0x2377
0x00000000004a3008 : ret 0x24
0x000000000047f246 : ret 0x245d
0x000000000046604f : ret 0x24be
0x00000000004668e6 : ret 0x25
0x0000000000470c62 : ret 0x2515
0x0000000000466fc2 : ret 0x25bb
0x000000000044e4a5 : ret 0x25e8
0x0000000000450d55 : ret 0x2741
0x0000000000462b46 : ret 0x2774
0x00000000004375f3 : ret 0x28
0x00000000004279c6 : ret 0x280f
0x0000000000442c9a : ret 0x2815
0x0000000000415775 : ret 0x2875
0x000000000041c6b5 : ret 0x2876
0x0000000000437777 : ret 0x28eb
0x000000000048bf57 : ret 0x28f5
0x0000000000465a9e : ret 0x2944
0x00000000004102a5 : ret 0x2948
0x0000000000464400 : ret 0x294c
0x00000000004085d8 : ret 0x2975
0x0000000000417604 : ret 0x2a
0x000000000041d446 : ret 0x2a7b
0x000000000041397a : ret 0x2afe
0x0000000000406fad : ret 0x2b
0x0000000000412c32 : ret 0x2b23
0x0000000000464b92 : ret 0x2b3c
0x000000000043b94e : ret 0x2b49
0x0000000000433ac2 : ret 0x2b77
0x0000000000408f55 : ret 0x2bbf
0x0000000000402d3a : ret 0x2c21
0x0000000000437815 : ret 0x2ceb
0x0000000000467d22 : ret 0x2d0
0x0000000000468254 : ret 0x2d77
0x000000000047e62a : ret 0x2f0
0x00000000004071ca : ret 0x308
0x0000000000442739 : ret 0x3104
0x000000000046dc86 : ret 0x3110
0x0000000000403caa : ret 0x319
0x00000000004a34f8 : ret 0x33
0x000000000040190a : ret 0x333
0x00000000004379d7 : ret 0x33e8
0x0000000000409f07 : ret 0x348
0x0000000000470a27 : ret 0x35e9
0x00000000004affda : ret 0x3827
0x0000000000435d7a : ret 0x3845
0x000000000041c6a5 : ret 0x3876
0x00000000004ae666 : ret 0x38ae
0x000000000047ea5f : ret 0x38b
0x0000000000489bab : ret 0x3901
0x000000000045bb32 : ret 0x3945
0x000000000040ae77 : ret 0x3948
0x000000000044519b : ret 0x3949
0x000000000046853f : ret 0x394c
0x000000000043aeec : ret 0x3974
0x0000000000433292 : ret 0x3a01
0x00000000004261fb : ret 0x3a73
0x0000000000403390 : ret 0x3ae8
0x000000000044eb26 : ret 0x3ae9
0x0000000000437df1 : ret 0x3b01
0x0000000000442e0a : ret 0x3b48
0x0000000000401851 : ret 0x3b8
0x0000000000415150 : ret 0x3d83
0x000000000046bde5 : ret 0x3e9
0x000000000048cc4b : ret 0x3f7
0x0000000000494e99 : ret 0x40
0x0000000000494598 : ret 0x401f
0x00000000004783dd : ret 0x40e9
0x000000000040ce5a : ret 0x4101
0x0000000000447a5a : ret 0x4108
0x00000000004492e9 : ret 0x4110
0x000000000047090a : ret 0x4118
0x0000000000419ef0 : ret 0x4166
0x000000000043c29e : ret 0x41c3
0x0000000000424b8a : ret 0x4266
0x0000000000497d91 : ret 0x43
0x00000000004a7971 : ret 0x44
0x0000000000451c65 : ret 0x4401
0x00000000004407d3 : ret 0x44c7
0x000000000043b449 : ret 0x44f6
0x00000000004a8631 : ret 0x45
0x000000000044df9e : ret 0x4501
0x000000000046aa4e : ret 0x4502
0x00000000004af164 : ret 0x474c
0x000000000043e395 : ret 0x4801
0x0000000000422d61 : ret 0x4802
0x0000000000422e3d : ret 0x4803
0x0000000000422e25 : ret 0x4804
0x0000000000422e0d : ret 0x4805
0x0000000000422df5 : ret 0x4806
0x0000000000419db3 : ret 0x4808
0x000000000041535d : ret 0x4810
0x0000000000442840 : ret 0x4811
0x000000000041444e : ret 0x4817
0x0000000000438450 : ret 0x4838
0x0000000000424a96 : ret 0x4840
0x000000000040fecb : ret 0x4855
0x0000000000467d90 : ret 0x4864
0x0000000000419ecf : ret 0x48c3
0x0000000000465784 : ret 0x48d
0x000000000043a131 : ret 0x48e9
0x00000000004b0926 : ret 0x48f
0x000000000041062d : ret 0x48f0
0x000000000049a961 : ret 0x49
0x00000000004411b1 : ret 0x4901
0x0000000000423261 : ret 0x4902
0x000000000043c9f1 : ret 0x4904
0x00000000004114d2 : ret 0x4908
0x0000000000467362 : ret 0x4909
0x0000000000419112 : ret 0x4910
0x000000000040134e : ret 0x4942
0x0000000000417143 : ret 0x4956
0x0000000000472872 : ret 0x4a
0x0000000000476a46 : ret 0x4ad4
0x00000000004231c9 : ret 0x4c01
0x0000000000422fc1 : ret 0x4c02
0x0000000000403c2d : ret 0x4c08
0x000000000044d97f : ret 0x4c30
0x000000000043c3a4 : ret 0x4d02
0x000000000041018f : ret 0x4d07
0x00000000004787e3 : ret 0x4d09
0x0000000000410889 : ret 0x4d10
0x0000000000450488 : ret 0x4d64
0x000000000044d403 : ret 0x4e0f
0x00000000004b0387 : ret 0x4e27
0x00000000004261e4 : ret 0x5173
0x000000000046c8ab : ret 0x5385
0x000000000046002a : ret 0x5389
0x0000000000434bb7 : ret 0x53e8
0x00000000004882f2 : ret 0x543a
0x0000000000408214 : ret 0x5474
0x000000000048ca08 : ret 0x5489
0x00000000004ae5ec : ret 0x5508
0x0000000000487901 : ret 0x5589
0x000000000046370a : ret 0x56e9
0x00000000004b08b8 : ret 0x5803
0x000000000046133d : ret 0x5877
0x000000000040133e : ret 0x589
0x0000000000401494 : ret 0x58b
0x00000000004ae2c0 : ret 0x591c
0x00000000004af027 : ret 0x5ae4
0x000000000046bd27 : ret 0x5b74
0x000000000046aed7 : ret 0x5c41
0x000000000048823b : ret 0x5c88
0x000000000046628b : ret 0x5c89
0x000000000045553f : ret 0x5ce9
0x000000000044d2a5 : ret 0x5e8
0x000000000040ad74 : ret 0x60e9
0x0000000000447abf : ret 0x6275
0x00000000004b0d52 : ret 0x62c1
0x0000000000434c0b : ret 0x6348
0x0000000000450e74 : ret 0x6349
0x000000000041c632 : ret 0x6620
0x0000000000417a43 : ret 0x66c3
0x00000000004ae2df : ret 0x67b2
0x0000000000465717 : ret 0x67ba
0x0000000000414f3f : ret 0x6a75
0x000000000043465f : ret 0x6b8
0x0000000000453d95 : ret 0x6e9
0x00000000004b0ee1 : ret 0x6f9
0x00000000004059a4 : ret 0x70e9
0x000000000041ce12 : ret 0x7401
0x0000000000414541 : ret 0x7402
0x000000000041328d : ret 0x7404
0x000000000041ce7b : ret 0x7408
0x0000000000409959 : ret 0x7420
0x000000000044d998 : ret 0x7450
0x00000000004317f9 : ret 0x7501
0x0000000000414563 : ret 0x7502
0x000000000041ce0d : ret 0x7504
0x0000000000432c34 : ret 0x7508
0x00000000004317cb : ret 0x7510
0x000000000041ce08 : ret 0x7518
0x00000000004317d8 : ret 0x7520
0x00000000004317e5 : ret 0x7540
0x00000000004681b1 : ret 0x7577
0x000000000040522a : ret 0x75e9
0x00000000004250d2 : ret 0x7677
0x000000000043b942 : ret 0x774
0x00000000004657e6 : ret 0x77e
0x000000000045fd69 : ret 0x7a8b
0x0000000000442943 : ret 0x7b73
0x00000000004150b2 : ret 0x7b74
0x00000000004690ee : ret 0x7d77
0x000000000041c5c2 : ret 0x7e20
0x0000000000417d0c : ret 0x7f10
0x0000000000428fae : ret 0x80
0x0000000000418ee9 : ret 0x8000
0x000000000040541c : ret 0x8001
0x0000000000467693 : ret 0x8010
0x000000000046d448 : ret 0x804
0x0000000000469adf : ret 0x8116
0x000000000047b5d4 : ret 0x8136
0x000000000047df0b : ret 0x8141
0x000000000044f678 : ret 0x8166
0x0000000000489add : ret 0x8188
0x0000000000404377 : ret 0x81e9
0x000000000040f8b2 : ret 0x820f
0x000000000044391d : ret 0x8301
0x0000000000400a81 : ret 0x8304
0x0000000000443bea : ret 0x8308
0x000000000040b358 : ret 0x830f
0x0000000000444ee0 : ret 0x8310
0x000000000044fd29 : ret 0x832d
0x00000000004004f5 : ret 0x8341
0x000000000041c382 : ret 0x8348
0x000000000044edf9 : ret 0x8349
0x0000000000468716 : ret 0x8401
0x0000000000450e66 : ret 0x8404
0x0000000000400d82 : ret 0x840f
0x000000000048ed0e : ret 0x8440
0x0000000000410244 : ret 0x8441
0x000000000040b4b5 : ret 0x8445
0x000000000045f6af : ret 0x8502
0x0000000000450f35 : ret 0x8504
0x000000000045ff3e : ret 0x8508
0x000000000040b432 : ret 0x850f
0x00000000004659f9 : ret 0x8545
0x0000000000452851 : ret 0x8548
0x000000000044e265 : ret 0x858b
0x0000000000449531 : ret 0x85c7
0x000000000046b77a : ret 0x85eb
0x00000000004018b5 : ret 0x860f
0x0000000000415afe : ret 0x870f
0x00000000004adbfe : ret 0x871e
0x000000000046a9e9 : ret 0x874
0x000000000041c6d5 : ret 0x876
0x000000000040cc15 : ret 0x8801
0x0000000000444123 : ret 0x8901
0x0000000000409741 : ret 0x8908
0x000000000044a0f5 : ret 0x8910
0x000000000048efe6 : ret 0x8941
0x0000000000465711 : ret 0x8944
0x0000000000408cc9 : ret 0x8948
0x0000000000409402 : ret 0x8949
0x0000000000401d15 : ret 0x894c
0x0000000000410193 : ret 0x894d
0x0000000000475a6b : ret 0x894e
0x0000000000413ee0 : ret 0x8b01
0x00000000004683e3 : ret 0x8b05
0x00000000004b042e : ret 0x8b36
0x0000000000444e52 : ret 0x8b41
0x0000000000457432 : ret 0x8b44
0x0000000000405ad9 : ret 0x8b48
0x000000000043dd54 : ret 0x8b49
0x00000000004759ee : ret 0x8b4a
0x0000000000403315 : ret 0x8b4c
0x000000000044e6db : ret 0x8d0f
0x00000000004657d1 : ret 0x8d42
0x0000000000465a9a : ret 0x8d43
0x0000000000406624 : ret 0x8d48
0x000000000040332e : ret 0x8d49
0x000000000040afb5 : ret 0x8d4a
0x000000000043b79b : ret 0x8d4c
0x0000000000448340 : ret 0x8d89
0x000000000043dd4b : ret 0x8e0f
0x0000000000410b9e : ret 0x8e74
0x0000000000401b4b : ret 0x900
0x0000000000417925 : ret 0x90c3
0x0000000000458f58 : ret 0x92e9
0x000000000046574d : ret 0x93ba
0x0000000000434e77 : ret 0x93e8
0x000000000046bb70 : ret 0x940f
0x000000000041493e : ret 0x948
0x0000000000462de8 : ret 0x94c
0x000000000047ee6b : ret 0x950f
0x0000000000454159 : ret 0x9529
0x0000000000403946 : ret 0x953d
0x00000000004af253 : ret 0x9576
0x0000000000437831 : ret 0x970f
0x000000000040fe3c : ret 0x9848
0x0000000000434c6f : ret 0x9be
0x0000000000452f29 : ret 0x9d8b
0x00000000004880d5 : ret 0x9e0f
0x00000000004126ba : ret 0xa0e9
0x000000000045d16c : ret 0xa1e9
0x000000000048bb97 : ret 0xa3e8
0x00000000004aef43 : ret 0xa514
0x000000000047a54a : ret 0xa77
0x0000000000413ee9 : ret 0xa7e
0x000000000048e6e1 : ret 0xa8
0x0000000000467322 : ret 0xa8e9
0x000000000046b7dd : ret 0xaa75
0x0000000000408104 : ret 0xaba
0x00000000004af3c7 : ret 0xac65
0x00000000004afd84 : ret 0xacfc
0x0000000000434b57 : ret 0xb3e8
0x000000000041345c : ret 0xb48b
0x000000000040929b : ret 0xb5eb
0x00000000004028b9 : ret 0xb60f
0x0000000000491c3a : ret 0xb6e3
0x00000000004402d5 : ret 0xb70f
0x0000000000410649 : ret 0xb76
0x0000000000434410 : ret 0xb8
0x000000000044d406 : ret 0xb841
0x000000000045a49e : ret 0xb848
0x0000000000409529 : ret 0xb941
0x00000000004af28e : ret 0xb9b9
0x0000000000434d6f : ret 0xb9eb
0x000000000040b91e : ret 0xba
0x000000000048f596 : ret 0xbc80
0x000000000044f89b : ret 0xbe07
0x000000000044f934 : ret 0xbe48
0x00000000004aefe4 : ret 0xbe57
0x0000000000415d9f : ret 0xc
0x000000000044a230 : ret 0xc0
0x0000000000418da9 : ret 0xc000
0x000000000040188e : ret 0xc031
0x0000000000409603 : ret 0xc083
0x000000000041c480 : ret 0xc085
0x000000000043fa8a : ret 0xc101
0x0000000000439515 : ret 0xc141
0x0000000000400fc5 : ret 0xc148
0x00000000004662fb : ret 0xc149
0x0000000000465790 : ret 0xc229
0x0000000000469564 : ret 0xc283
0x00000000004260b4 : ret 0xc2b2
0x0000000000433b31 : ret 0xc35b
0x00000000004a74a2 : ret 0xc4c3
0x00000000004aeb98 : ret 0xc4ff
0x000000000040cc35 : ret 0xc601
0x000000000042dcd0 : ret 0xc748
0x00000000004136b0 : ret 0xc789
0x000000000047b5de : ret 0xc801
0x000000000041cc89 : ret 0xc88
0x000000000040e090 : ret 0xc883
0x0000000000440fe1 : ret 0xc889
0x000000000048d5c1 : ret 0xc984
0x0000000000419d81 : ret 0xc9ff
0x0000000000473c33 : ret 0xca29
0x00000000004170d4 : ret 0xcb8
0x0000000000400563 : ret 0xcbeb
0x00000000004ae62a : ret 0xcca7
0x00000000004b070d : ret 0xcd11
0x0000000000404eef : ret 0xce80
0x000000000043826e : ret 0xd009
0x0000000000437d61 : ret 0xd029
0x00000000004011cc : ret 0xd089
0x0000000000488065 : ret 0xd138
0x0000000000458680 : ret 0xd189
0x0000000000403ffd : ret 0xd284
0x0000000000476da0 : ret 0xd349
0x0000000000410b57 : ret 0xd575
0x000000000046482d : ret 0xd7e9
0x00000000004880ba : ret 0xd889
0x00000000004b01a5 : ret 0xd8f
0x0000000000437c33 : ret 0xda75
0x0000000000437670 : ret 0xdae8
0x0000000000408b18 : ret 0xdaf7
0x00000000004b0286 : ret 0xdcd9
0x00000000004af202 : ret 0xde5d
0x00000000004adf91 : ret 0xde9e
0x0000000000489bae : ret 0xdf75
0x0000000000442a2a : ret 0xdf89
0x0000000000418c69 : ret 0xe000
0x0000000000431789 : ret 0xe074
0x00000000004143aa : ret 0xe083
0x00000000004ba05b : ret 0xe0a
0x00000000004529a6 : ret 0xe181
0x00000000004482ff : ret 0xe183
0x0000000000439012 : ret 0xe1eb
0x000000000040a845 : ret 0xe274
0x0000000000406ebc : ret 0xe281
0x0000000000433796 : ret 0xe283
0x000000000046f3e7 : ret 0xe3e8
0x00000000004b03a6 : ret 0xe71f
0x0000000000468de8 : ret 0xe74
0x0000000000468860 : ret 0xe75
0x00000000004393d1 : ret 0xe783
0x0000000000474501 : ret 0xe7e9
0x0000000000400ed4 : ret 0xe8c1
0x000000000040ce6b : ret 0xe901
0x000000000045f79d : ret 0xe902
0x0000000000419e16 : ret 0xe908
0x000000000041faa6 : ret 0xe910
0x00000000004ae707 : ret 0xe970
0x00000000004880d8 : ret 0xe9c1
0x00000000004450e1 : ret 0xe9e8
0x0000000000433aba : ret 0xea81
0x00000000004657d8 : ret 0xea83
0x00000000004482f8 : ret 0xeac0
0x0000000000400d79 : ret 0xeac1
0x000000000045f650 : ret 0xeb02
0x0000000000400ab6 : ret 0xeb04
0x0000000000454839 : ret 0xeb08
0x0000000000419136 : ret 0xeb10
0x0000000000408082 : ret 0xeb75
0x00000000004b0eb8 : ret 0xec2
0x000000000048bf19 : ret 0xec75
0x000000000045f564 : ret 0xee83
0x00000000004b0b5a : ret 0xef32
0x000000000045f396 : ret 0xef83
0x00000000004393c5 : ret 0xefc1
0x00000000004a21c8 : ret 0xf
0x0000000000418b29 : ret 0xf000
0x000000000040286f : ret 0xf01
0x000000000040d5e3 : ret 0xf02
0x00000000004587dc : ret 0xf039
0x00000000004132a9 : ret 0xf04
0x000000000046dcad : ret 0xf08
0x0000000000417cc2 : ret 0xf10
0x000000000040aeb0 : ret 0xf189
0x000000000048b8a6 : ret 0xf201
0x000000000040ae9f : ret 0xf301
0x0000000000470f7b : ret 0xf304
0x000000000044cd46 : ret 0xf3f
0x00000000004604c3 : ret 0xf40
0x000000000040826a : ret 0xf41
0x0000000000433e17 : ret 0xf44
0x000000000043ce4f : ret 0xf48
0x000000000044e080 : ret 0xf4a
0x00000000004b3a5c : ret 0xf534
0x0000000000467c1e : ret 0xf631
0x000000000043bc04 : ret 0xf641
0x0000000000417ac9 : ret 0xf66
0x0000000000433678 : ret 0xf685
0x0000000000458704 : ret 0xf6e8
0x0000000000465764 : ret 0xf741
0x0000000000407e9f : ret 0xf748
0x000000000048a74a : ret 0xf776
0x00000000004b8ea4 : ret 0xf7ec
0x00000000004189e9 : ret 0xf800
0x00000000004b9330 : ret 0xf81e
0x000000000047e64a : ret 0xf837
0x00000000004ade70 : ret 0xf869
0x0000000000464699 : ret 0xf883
0x0000000000404211 : ret 0xf889
0x0000000000497560 : ret 0xf935
0x0000000000497558 : ret 0xf936
0x0000000000497350 : ret 0xf941
0x000000000046538a : ret 0xfa24
0x00000000004bb644 : ret 0xfa4e
0x00000000004bb784 : ret 0xfa50
0x000000000044cce4 : ret 0xfac1
0x000000000047b123 : ret 0xfae9
0x000000000045887a : ret 0xfb62
0x000000000045691a : ret 0xfb75
0x000000000047f21a : ret 0xfb9f
0x00000000004188a9 : ret 0xfc00
0x00000000004be85c : ret 0xfc01
0x0000000000419f79 : ret 0xfc3
0x000000000044be8a : ret 0xfc91
0x0000000000461f0a : ret 0xfd1d
0x00000000004434ca : ret 0xfd69
0x00000000004b2a0c : ret 0xfdbf
0x000000000045559e : ret 0xfde9
0x0000000000402841 : ret 0xfdf
0x0000000000418769 : ret 0xfe00
0x000000000048ce3a : ret 0xfe7b
0x0000000000474e89 : ret 0xfeb8
0x0000000000418629 : ret 0xff00
0x000000000042ab61 : ret 0xff2
0x0000000000424aba : ret 0xff3
0x00000000004007da : ret 0xff49
0x0000000000412c5a : ret 0xff69
0x000000000047ddea : ret 0xff75
0x00000000004184e9 : ret 0xff80
0x0000000000459723 : ret 0xffa5
0x00000000004564f2 : ret 0xffb2
0x000000000040a83e : ret 0xffb8
0x000000000047c2c8 : ret 0xffbf
0x000000000040ad82 : ret 0xffc0
0x000000000047b153 : ret 0xffc1
0x000000000041400a : ret 0xffcb
0x000000000040ff93 : ret 0xffd0
0x000000000044532d : ret 0xffd8
0x000000000045ebed : ret 0xffdc
0x00000000004176cc : ret 0xffdf
0x0000000000418269 : ret 0xffe0
0x0000000000471cca : ret 0xffe4
0x0000000000445314 : ret 0xffe8
0x0000000000453382 : ret 0xffeb
0x0000000000403497 : ret 0xffed
0x0000000000407f63 : ret 0xffef
0x0000000000418129 : ret 0xfff0
0x0000000000404a5d : ret 0xfff1
0x000000000040485d : ret 0xfff3
0x00000000004141a1 : ret 0xfff4
0x000000000048dfd4 : ret 0xfff7
0x0000000000417fe9 : ret 0xfff8
0x0000000000440f55 : ret 0xfff9
0x0000000000444101 : ret 0xfffb
0x0000000000417ea9 : ret 0xfffc
0x00000000004067cc : ret 0xfffd
0x0000000000401ffe : ret 0xfffe
0x0000000000414ed3 : ret 0xffff
0x0000000000400c23 : ret 1
0x000000000040b785 : ret 2
0x0000000000425e72 : ret 3
0x000000000041c799 : ret 4
0x00000000004a15f0 : ret 5
0x00000000004a5dc4 : ret 6
0x00000000004a5fc4 : ret 7
0x000000000041c7b5 : ret 8
0x0000000000402b32 : ret 9
0x0000000000435c02 : retf -0x206 ; dec dword ptr [rcx - 0x75] ; call rbx
0x000000000040055e : retf -0x31c7 ; cmovge eax, edx ; jmp 0x400536
0x000000000048014f : retf -0x7af1 ; call qword ptr [rsi]
0x00000000004bf98d : retf 0 ; add byte ptr [rdi], al ; std ; call rsp
0x00000000004b6adc : retf ; fdivrp st(5) ; jmp qword ptr [rdx]
0x00000000004093fc : rol bl, 0 ; add byte ptr [rax - 0x77], cl ; ret 0x8949
0x0000000000433355 : rol bl, 0x48 ; mov eax, edi ; ret
0x000000000040f1b7 : rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000473c67 : rol bl, 1 ; mov edx, 0xffffffff ; mov eax, edx ; ret
0x0000000000473c74 : rol bl, 1 ; mov edx, 1 ; mov eax, edx ; ret
0x000000000041c82d : rol bl, 1 ; nop ; xor eax, eax ; ret
0x0000000000473c6f : rol bl, 1 ; sub edx, eax ; mov eax, edx ; ret
0x0000000000424a92 : rol byte ptr [rax + 0x48], 0x83 ; ret 0x4840
0x0000000000462b42 : rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x00000000004a59c0 : rol byte ptr [rax + rax], 0 ; ret 4
0x0000000000424fdd : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000412b9f : rol byte ptr [rax], 0 ; add dh, dh ; ret
0x0000000000408607 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x00000000004455ad : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x0000000000423402 : rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x0000000000462b69 : rol byte ptr [rbp - 0x149d8a2e], 1 ; ror byte ptr [rcx + 0x39], 1 ; ret
0x0000000000436030 : rol byte ptr [rbp - 0x77], 0xf7 ; mov rax, qword ptr [rbp - 0x48] ; call rax
0x0000000000454153 : rol byte ptr [rbp - 0x7b], cl ; ror byte ptr [rdi], 0x9f ; ret 0x9529
0x0000000000457d8d : rol byte ptr [rbp - 0x7b], cl ; ror byte ptr [rdi], cl ; lahf ; ret 0x9529
0x00000000004090b7 : rol byte ptr [rbx + rcx*4 + 3], 0xf ; xchg eax, esp ; ret 0xdaf7
0x0000000000464556 : rol byte ptr [rbx + rcx*4], 0x10 ; test edx, edx ; jne 0x464559 ; ret
0x0000000000474f1b : rol byte ptr [rbx - 0x177cfd20], 1 ; ret
0x0000000000437d66 : rol byte ptr [rbx - 0x24e6fe08], 0x83 ; ret
0x000000000043e84f : rol byte ptr [rbx - 0x76befb08], 1 ; ret
0x000000000040599b : rol byte ptr [rbx - 0x77cfc20], cl ; add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0x70e9
0x000000000049747c : rol byte ptr [rbx - 7], 0xff ; push rax ; stc ; jmp rax
0x0000000000463be2 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x000000000048e019 : rol byte ptr [rbx], 0xeb ; ret
0x0000000000436c92 : rol byte ptr [rbx], cl ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x000000000045a68f : rol byte ptr [rcx + 0x39], 1 ; ret
0x000000000040908a : rol byte ptr [rcx + 0x5c], 1 ; ret
0x00000000004638ed : rol byte ptr [rcx + 0x5e], 1 ; ret
0x0000000000433ab1 : rol byte ptr [rcx + 0xbfff], cl ; add byte ptr [rdi], cl ; popfq ; ret 0xea81
0x0000000000413440 : rol byte ptr [rcx + 0xf], 0x94 ; ret
0x0000000000465760 : rol byte ptr [rcx + 0xf], cl ; ret 0xf741
0x00000000004423d1 : rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x0000000000497250 : rol byte ptr [rcx + rdi*8], 1 ; jmp qword ptr [rax]
0x0000000000469274 : rol byte ptr [rcx - 0x47], cl ; stosb byte ptr [rdi], al ; test eax, 0x850f004a ; ret
0x0000000000463bc2 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x0000000000433937 : rol byte ptr [rcx], 0x83 ; ret 0x4101
0x000000000044391a : rol byte ptr [rcx], 0x83 ; ret 0x8301
0x0000000000473181 : rol byte ptr [rcx], 0x89 ; ret 0x8348
0x000000000046d725 : rol byte ptr [rcx], 0x89 ; ret 0x8b48
0x0000000000497208 : rol byte ptr [rcx], 0xf9 ; call qword ptr [rax]
0x0000000000463c22 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x0000000000463bd2 : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x000000000043a0e3 : rol byte ptr [rdx], 0x89 ; add al, 0x24 ; call rbx
0x0000000000489136 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; mov eax, esi ; ret
0x0000000000497264 : rol byte ptr [rsi - 7], 0xff ; push rax ; stc ; jmp rax
0x0000000000463c12 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x0000000000434b0c : rol byte ptr [rsi], 0 ; ret
0x00000000004a74a0 : rol cl, 0xc2 ; ret
0x0000000000470f76 : rol cl, 0xe9 ; add esi, esi ; ret 0xf304
0x0000000000465664 : rol cl, 1 ; clc ; add eax, 0x89d02944 ; ret
0x000000000046584b : rol cl, 1 ; clc ; add eax, 0xfd02944 ; scasd eax, dword ptr [rdi] ; ret
0x0000000000463b6c : rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x000000000045acbd : rol dword ptr [rcx + 0xf], -0x4a ; or al, 0x89 ; ret 0xeac0
0x0000000000405a21 : rol dword ptr [rcx], -0x7d ; cli ; or al, byte ptr [rbp + 0xf] ; ret 0x8348
0x00000000004b2e18 : rol ebx, 1 ; std ; push qword ptr [rbx] ; ret
0x00000000004390bd : rol ecx, -0x1f ; add ebx, dword ptr [rbx - 0x2d] ; loopne 0x43912a ; ret
0x000000000041c6a2 : ror byte ptr [rax + 0x29], 0xc2 ; jbe 0x41c6e9 ; add rax, rdi ; ret
0x000000000041a03f : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x0000000000470959 : ror byte ptr [rax + 0x29], cl ; ret 0x394c
0x000000000046825f : ror byte ptr [rax + 0x39], 0xd6 ; ja 0x468277 ; ret
0x0000000000437a58 : ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x0000000000475daf : ror byte ptr [rax + 0x39], 1 ; ret 0x8948
0x00000000004758c7 : ror byte ptr [rax + 0x39], 1 ; ret 0x8949
0x00000000004880d2 : ror byte ptr [rax + 0x39], 1 ; ret 0x9e0f
0x000000000043cbac : ror byte ptr [rax + 0x39], cl ; ret
0x000000000043744e : ror byte ptr [rax + 0xf], 0x48 ; ret 0xc148
0x0000000000470823 : ror byte ptr [rax + 0xf], 1 ; ret 0x8948
0x0000000000464012 : ror byte ptr [rax + 0xf], cl ; ret 0x8548
0x00000000004232dc : ror byte ptr [rax + 1], 0xf8 ; add rax, rcx ; ret
0x000000000041c672 : ror byte ptr [rax + 1], 0xf8 ; ret
0x000000000041a03c : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x0000000000451901 : ror byte ptr [rax + 3], 1 ; test dword ptr [rax - 0x7c000002], eax ; ret 0x8908
0x000000000044a07c : ror byte ptr [rax + 3], 1 ; test dword ptr [rax - 0x7c000005], esi ; ret 0x8908
0x000000000044a0ec : ror byte ptr [rax + 3], 1 ; test dword ptr [rax - 0x7c000005], esi ; ret 0x8910
0x000000000041c825 : ror byte ptr [rax - 0x2d], 0xfa ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000400fcc : ror byte ptr [rax - 0x2f], 1 ; clc ; jne 0x400fdb ; pop rbp ; ret
0x0000000000487a05 : ror byte ptr [rax - 0x3f], 1 ; call 0xffffffffc271c353
0x0000000000487c23 : ror byte ptr [rax - 0x73], 0x14 ; add byte ptr [rax + 1], cl ; ret 0x8d48
0x000000000041c662 : ror byte ptr [rax - 0x73], 0x44 ; cmp al, dh ; ret
0x000000000041c692 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], ah ; ret
0x000000000041c682 : ror byte ptr [rax - 0x73], 0x44 ; cmp byte ptr [rax], dl ; ret
0x00000000004399f5 : ror byte ptr [rax - 0x75], 0x74 ; sbb ah, byte ptr [rax] ; call rax
0x000000000040e74a : ror byte ptr [rax - 0x75], cl ; jmp rax
0x000000000040f206 : ror byte ptr [rax - 0x77], 0x4a ; or bl, dh ; ret
0x000000000044e4a2 : ror byte ptr [rax - 0x77], 1 ; ret 0x25e8
0x000000000040bd65 : ror byte ptr [rax - 0x77], 1 ; ret 0x8b48
0x00000000004672d5 : ror byte ptr [rax - 0x77], 1 ; ret 0x8d48
0x000000000045cecf : ror byte ptr [rax - 0x77], 1 ; ret 0xc148
0x0000000000406eb9 : ror byte ptr [rax - 0x77], 1 ; ret 0xe281
0x00000000004090b4 : ror byte ptr [rax - 0x7b], cl ; rol byte ptr [rbx + rcx*4 + 3], 0xf ; xchg eax, esp ; ret 0xdaf7
0x000000000047ee65 : ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x00000000004099df : ror byte ptr [rax - 0x7d], 0xc4 ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000468180 : ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x0000000000414783 : ror byte ptr [rax - 0x7d], 0xc4 ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000474857 : ror byte ptr [rax - 0x7d], 0xc4 ; pop rax ; ret
0x000000000044f089 : ror byte ptr [rax - 0x7d], 0xc4 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000047148a : ror byte ptr [rax - 0x7d], 0xfa ; dec dword ptr [rax + 0xf] ; ret 0x48c3
0x00000000004144a6 : ror byte ptr [rax - 0x7d], 1 ; call 0xffffffffc2ca8cc5
0x0000000000453d58 : ror byte ptr [rax - 0x7d], 1 ; ret
0x000000000043d455 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4101
0x0000000000407b30 : ror byte ptr [rax - 0x7d], 1 ; ret 0x4801
0x000000000047e918 : ror byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0xdaf7
0x0000000000468073 : ror byte ptr [rax - 0x7d], cl ; in al, dx ; jo 0x468075 ; ret 0x4840
0x000000000046d55d : ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x000000000043ff3c : ror byte ptr [rax - 0x7d], cl ; ret 0x4804
0x000000000043eeed : ror byte ptr [rax - 0x7d], cl ; ret 0x4806
0x0000000000472d55 : ror byte ptr [rax - 0x7d], cl ; ret 0x4808
0x000000000049219d : ror byte ptr [rax], 0x4c ; mov dword ptr [rbx], eax ; pop rbx ; ret
0x000000000047b19a : ror byte ptr [rax], 0x83 ; ret 0x4801
0x000000000048d054 : ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x0000000000462b6f : ror byte ptr [rcx + 0x39], 1 ; ret
0x000000000048d6d2 : ror byte ptr [rcx + rcx*4 + 6], 1 ; ret
0x0000000000460f52 : ror byte ptr [rcx + rcx*4 - 0x11], 0x45 ; xor eax, eax ; call r12
0x000000000040e09f : ror byte ptr [rcx - 0x3b7cb7ed], 1 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000004453fe : ror byte ptr [rcx - 0x3fcebfbd], 0x5b ; ret
0x0000000000487d08 : ror byte ptr [rcx - 0x77], 1 ; ret 0x8948
0x000000000040942a : ror byte ptr [rcx - 0x77], 4 ; and al, 0x74 ; ret 0x8b4c
0x000000000046b4a4 : ror byte ptr [rcx - 0x77], cl ; ret
0x000000000046f971 : ror byte ptr [rcx - 0x7d], cl ; std ; and al, 0xf ; xchg eax, esp ; ret 0xc031
0x0000000000467d1f : ror byte ptr [rcx - 0x7f], cl ; ret 0x2d0
0x000000000048aadc : ror byte ptr [rdi + rcx + 0x44], cl ; ret
0x000000000041cfb9 : ror byte ptr [rdi + rcx + 0x47], 1 ; ret 0x894c
0x0000000000410324 : ror byte ptr [rdi], 0x1f ; add bl, dh ; ret
0x00000000004699e6 : ror byte ptr [rdi], 0x84 ; or dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x0000000000473d77 : ror byte ptr [rdi], 0x84 ; ret 1
0x000000000047338f : ror byte ptr [rdi], 0x84 ; test dword ptr [rax], 0x89480000 ; ret 0x2b49
0x000000000042dc5a : ror byte ptr [rdi], 0x85 ; call qword ptr [rbx]
0x000000000042dc96 : ror byte ptr [rdi], 0x85 ; ret
0x0000000000491e92 : ror byte ptr [rdi], 0x85 ; ret 0
0x0000000000437d5e : ror byte ptr [rdi], 0x92 ; ret 0xd029
0x0000000000488233 : ror byte ptr [rdi], 0x94 ; ret
0x00000000004882ef : ror byte ptr [rdi], 0x94 ; ret 0x543a
0x0000000000488238 : ror byte ptr [rdi], 0x94 ; ret 0x5c88
0x000000000047ee68 : ror byte ptr [rdi], 0x94 ; ret 0x950f
0x000000000045867d : ror byte ptr [rdi], 0x94 ; ret 0xd189
0x0000000000400737 : ror byte ptr [rdi], 0x95 ; ret
0x000000000040ad71 : ror byte ptr [rdi], 0x95 ; ret 0x60e9
0x000000000040acd6 : ror byte ptr [rdi], 0x95 ; ret 0xd284
0x0000000000408b15 : ror byte ptr [rdi], 0x95 ; ret 0xdaf7
0x0000000000454156 : ror byte ptr [rdi], 0x9f ; ret 0x9529
0x0000000000406ece : ror byte ptr [rdi], 1 ; mov dh, 0x17 ; test dl, dl ; jne 0x406eb8 ; ret
0x0000000000465851 : ror byte ptr [rdi], 1 ; scasd eax, dword ptr [rdi] ; ret
0x0000000000465714 : ror byte ptr [rdi], 1 ; scasd eax, dword ptr [rdi] ; ret 0x67ba
0x0000000000457d90 : ror byte ptr [rdi], cl ; lahf ; ret 0x9529
0x000000000043793c : ror byte ptr [rdi], cl ; ret 0x66c3
0x000000000040fe39 : ror byte ptr [rdi], cl ; ret 0x9848
0x00000000004883b9 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xb60f
0x0000000000488062 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret 0xd138
0x0000000000401c3b : ror byte ptr [rsi], 1 ; insb byte ptr [rdi], dx ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000479244 : ror dh, 0x4a ; add al, ch ; ret
0x00000000004373ac : ror dword ptr [rax + 0xf], cl ; ret
0x00000000004880b4 : ror dword ptr [rax + 1], cl ; ret 0x3948
0x0000000000461dbe : ror dword ptr [rax - 0x73], 0x41 ; adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x00000000004414d4 : ror dword ptr [rax - 0x77], 1 ; fimul word ptr [rax - 0x77] ; ret 0x8948
0x00000000004402d2 : ror dword ptr [rax - 0x77], 1 ; ret 0xb70f
0x000000000048abab : ror dword ptr [rax - 0x77], cl ; ret
0x000000000040dbed : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x40dbe7 ; ret
0x000000000046153d : ror dword ptr [rax - 0x7b], -0x2e ; jne 0x461537 ; ret
0x0000000000476065 : ror dword ptr [rax - 0x7d], cl ; in al, dx ; cmp dh, dh ; ret 0x7401
0x000000000043cfae : ror dword ptr [rcx + 0x7b808], 1 ; add byte ptr [rax], al ; jmp 0x43cf83
0x0000000000477225 : ror dword ptr [rcx - 0x3f], cl ; sti ; add cl, byte ptr [rcx + 0x29] ; ret
0x000000000046b777 : ror dword ptr [rcx - 0x77], 1 ; ret 0x85eb
0x000000000046b4ba : ror dword ptr [rcx - 0x7d], 1 ; ret
0x00000000004b4046 : ror dword ptr [rcx - 0xb], -1 ; sbb al, 0xd ; hlt ; cmc ; jmp qword ptr [rdx]
0x0000000000474236 : ror dword ptr [rcx - 9], -0x2f ; jmp 0x474253
0x00000000004742e0 : ror dword ptr [rcx - 9], -0x2f ; jmp 0x4742fd
0x0000000000431787 : ror dword ptr [rcx], cl ; ret 0xe074
0x000000000048e75d : ror dword ptr [rdi], -0x4a ; add dword ptr [r8 - 0x7d], ecx ; ret
0x00000000004482f2 : ror dword ptr [rdi], -0x4a ; or al, 0x89 ; ret 0xeac0
0x0000000000476d9d : ror dword ptr [rdi], -0x6b ; ret 0xd349
0x0000000000425848 : ror dword ptr [rdi], -0x7b ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000425f54 : ror dword ptr [rdi], -0x7b ; add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000425d26 : ror dword ptr [rdi], -0x7b ; add eax, 0xc0310000 ; ret
0x0000000000425ca6 : ror dword ptr [rdi], -0x7b ; cmpsb byte ptr [rsi], byte ptr [rdi] ; add eax, 0xc0310000 ; ret
0x0000000000425fe4 : ror dword ptr [rdi], -0x7b ; je 0x425ff4 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000425adb : ror dword ptr [rdi], -0x7b ; jno 0x425af0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000425ba3 : ror dword ptr [rdi], -0x7b ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000425820 : ror dword ptr [rdi], -0x7b ; sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000467d5f : ror dword ptr [rdi], -0x7c ; ret 1
0x0000000000465947 : ror dword ptr [rdi], 1 ; xchg eax, esp ; ret
0x0000000000412796 : ror dword ptr [rdi], cl ; xchg dword ptr [rbx - 0x9fffffb], ebp ; ret
0x000000000040dbec : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x40dbe8 ; ret
0x000000000046153c : ror qword ptr [r8 - 0x7b], -0x2e ; jne 0x461538 ; ret
0x000000000045c8e8 : sahf ; add byte ptr [rax], al ; add byte ptr [rbx - 0x110f43], al ; call qword ptr [rax]
0x000000000045cc10 : sahf ; add byte ptr [rax], al ; add byte ptr [rbx - 0x116343], al ; call qword ptr [rax]
0x00000000004178c5 : sahf ; add dword ptr [rax], eax ; ret
0x00000000004b6195 : sahf ; cmc ; jmp qword ptr [rdx]
0x00000000004668de : sahf ; fsub qword ptr [rip + 0x5c74800] ; xchg eax, ebx ; ret 0x25
0x000000000048f3de : sahf ; idiv bh ; dec dword ptr [rcx - 0x77] ; ret
0x000000000044d663 : sahf ; or byte ptr [rax - 0x7d], cl ; ret
0x0000000000421eae : sahf ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004ae665 : sahf ; ret 0x38ae
0x00000000004880d7 : sahf ; ret 0xe9c1
0x00000000004b28c0 : sahf ; scasd eax, dword ptr [rdi] ; std ; jmp qword ptr [rsi + 0x11fffdaf]
0x00000000004b2974 : sahf ; scasd eax, dword ptr [rdi] ; std ; jmp rbx
0x0000000000497895 : sahf ; stc ; inc eax ; sahf ; stc ; jmp rax
0x0000000000497881 : sahf ; stc ; jmp qword ptr [rax]
0x0000000000497899 : sahf ; stc ; jmp rax
0x000000000047f06e : sal bh, 0xd8 ; ret
0x0000000000433bed : sal bh, 0xf1 ; pop rbx ; mov eax, eax ; ret
0x0000000000418ee7 : sal bh, 1 ; ret 0x8000
0x0000000000418da7 : sal bh, 1 ; ret 0xc000
0x0000000000418c67 : sal bh, 1 ; ret 0xe000
0x0000000000418b27 : sal bh, 1 ; ret 0xf000
0x00000000004189e7 : sal bh, 1 ; ret 0xf800
0x00000000004188a7 : sal bh, 1 ; ret 0xfc00
0x0000000000418767 : sal bh, 1 ; ret 0xfe00
0x0000000000418627 : sal bh, 1 ; ret 0xff00
0x00000000004184e7 : sal bh, 1 ; ret 0xff80
0x00000000004183a7 : sal bh, 1 ; ret 0xffc0
0x0000000000418267 : sal bh, 1 ; ret 0xffe0
0x0000000000418127 : sal bh, 1 ; ret 0xfff0
0x0000000000417fe7 : sal bh, 1 ; ret 0xfff8
0x0000000000417ea7 : sal bh, 1 ; ret 0xfffc
0x0000000000417d67 : sal bh, 1 ; ret 0xfffe
0x000000000044efec : sal bh, cl ; int1 ; add r8d, eax ; mov eax, r8d ; ret
0x0000000000442c94 : sal bh, cl ; test byte ptr [rax - 0x75], 5 ; ret 0x2815
0x000000000048acc0 : sal byte ptr [rax - 0x7d], 0xe8 ; add dword ptr [rbp + rcx*4 + 0x74], ecx ; ret
0x000000000041c658 : sal byte ptr [rbp + 0x55], 0x48 ; xor eax, eax ; ret
0x0000000000468622 : sal byte ptr [rbp + 0x5f], 0x4c ; mov eax, ecx ; ret
0x0000000000491dc3 : sal byte ptr [rbp + 0xa], 0xf3 ; ret
0x000000000044d994 : sal byte ptr [rbp + 5], 0xf6 ; ret 0x7450
0x0000000000491bb7 : sal byte ptr [rbp + 6], 0x5b ; ret
0x000000000047f151 : sal byte ptr [rbp + rax + 0x5b], 0x5d ; pop r12 ; ret
0x000000000047a54f : sal byte ptr [rbp + rdx + 0x4c], 0x39 ; ret 0x1075
0x000000000040f165 : sal byte ptr [rbp - 0x10], 0xf3 ; ret
0x00000000004334c0 : sal byte ptr [rbp - 0x13], cl ; lea rax, qword ptr [rcx - 1] ; ret
0x000000000040dbf0 : sal byte ptr [rbp - 0x13], cl ; ret
0x0000000000424c3b : sal byte ptr [rbp - 0x1e], 0x31 ; shr byte ptr [rcx], 0xc8 ; ret
0x0000000000406ed3 : sal byte ptr [rbp - 0x27], cl ; ret
0x000000000046455b : sal byte ptr [rbp - 0xe], cl ; ret
0x0000000000437a80 : sal byte ptr [rbp - 0xf], 0x5a ; pop r10 ; ret
0x0000000000462b12 : sal byte ptr [rbx + rbx + 0x48], cl ; bsf eax, edx ; ret
0x00000000004030a1 : sal byte ptr [rbx + rdx + 0x48], 0x83 ; ret 0x4901
0x0000000000437a56 : sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], 0xfa ; setae al ; ret
0x00000000004688b6 : sal byte ptr [rdi + 0x48], 0x89 ; ret
0x000000000044855e : sal byte ptr [rdi + 0x4a], 0 ; jmp rdx
0x0000000000419f73 : sal byte ptr [rdx + rcx + 0x48], cl ; bsf eax, edx ; ret
0x0000000000419e23 : sal byte ptr [rdx + rdx + 0x48], 0xff ; ret 0x2288
0x000000000045ee19 : sal byte ptr [rdx - 0x7cb70001], 0x7c ; ret 0xc0
0x0000000000419f17 : sal byte ptr [rsi + rsi*2 + 0x48], cl ; bsf eax, edx ; ret
0x000000000047bbe0 : sal dword ptr [rcx + 0x48], 0x39 ; ret
0x000000000040f204 : sal dword ptr [rcx], -0x40 ; mov qword ptr [rdx + 8], rcx ; ret
0x00000000004629c0 : sal dword ptr [rcx], 1 ; ret
0x0000000000470f74 : sal dword ptr [rcx], 1 ; rol cl, 0xe9 ; add esi, esi ; ret 0xf304
0x000000000040e748 : sal dword ptr [rcx], 1 ; ror byte ptr [rax - 0x75], cl ; jmp rax
0x00000000004100f7 : sal dword ptr [rsi], 0x2b ; add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000004317c6 : salc ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000040055c : salc ; add edx, ecx ; cmp esi, ecx ; cmovge eax, edx ; jmp 0x400538
0x00000000004262c9 : salc ; add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000492611 : salc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000496f51 : salc ; clc ; push rax ; xlatb ; clc ; call qword ptr [rax]
0x0000000000468262 : salc ; ja 0x468274 ; ret
0x00000000004b6b6c : salc ; loope 0x4b6b67 ; jmp qword ptr [rdx]
0x00000000004152b2 : salc ; mov byte ptr [rax + rbx], sil ; pop rbx ; ret
0x0000000000416100 : salc ; sub al, byte ptr [rax] ; test rax, rax ; je 0x416112 ; call rax
0x0000000000435a0c : sar ah, 0xfd ; dec dword ptr [rcx - 0x75] ; call rbx
0x00000000004b9220 : sar bh, 0xf7 ; call rcx
0x0000000000464757 : sar bh, 0xff ; dec dword ptr [rax - 0x39] ; ret
0x000000000048cce3 : sar bh, 0xff ; dec dword ptr [rax - 0x39] ; ret 0xffff
0x0000000000471829 : sar bh, 0xff ; lcall ptr [rbx + 0x64] ; mov eax, dword ptr [rax] ; ret
0x000000000044bdb3 : sar byte ptr [rax + 0x4a], 0 ; jmp rdx
0x000000000046e54b : sar byte ptr [rax + 2], 0x5b ; ret
0x000000000047e87c : sar byte ptr [rax + 9], 0xf3 ; ret
0x0000000000447800 : sar byte ptr [rbp + 0x4a], 0 ; jmp rdx
0x000000000044bb57 : sar byte ptr [rbx + 0x4a], 0 ; jmp rdx
0x000000000044bc8f : sar byte ptr [rcx + 0x4a], 0 ; jmp rdx
0x000000000043900d : sar byte ptr [rcx], cl ; ret
0x0000000000471e54 : sar byte ptr [rdi + 0x4b214a], 0x83 ; ret
0x000000000044bba5 : sar byte ptr [rdx + 0x4a], 0 ; jmp rdx
0x00000000004369a6 : sar byte ptr [rsi + 1], cl ; mov rdi, rbp ; call rbx
0x000000000048910c : sar byte ptr [rsi + 2], 1 ; ret
0x00000000004aefff : sar byte ptr [rsi + rax*2], 0xf8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000004536f4 : sar ch, 0xff ; dec dword ptr [rax - 0x7d] ; ret
0x00000000004971fc : sar ch, 1 ; clc ; jmp qword ptr [rax]
0x0000000000466fbb : sar dword ptr [rbx - 0x76b7ffdb], 0x1d ; ret 0x25bb
0x0000000000402c5a : sar dword ptr [rdi + 0x6c30c0], cl ; call rbx
0x0000000000474e91 : sar eax, 0x10 ; ret
0x0000000000474e4a : sar eax, 0x1f ; sub edx, ecx ; not eax ; and eax, edx ; ret
0x0000000000474dcd : sar eax, 0x3f ; not eax ; and eax, ecx ; ret
0x0000000000400fce : sar eax, 1 ; jne 0x400fd9 ; pop rbp ; ret
0x00000000004625ac : sar eax, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x0000000000489624 : sar eax, 3 ; pop r15 ; ret
0x00000000004b2a71 : sar ebp, -1 ; add al, 0xc2 ; std ; jmp rsp
0x00000000004b2a45 : sar ebp, -1 ; in al, -0x40 ; std ; jmp rsp
0x00000000004b2dcd : sar ebp, -1 ; je 0x4b2d9b ; std ; call qword ptr [rdx + rax*8 - 3]
0x00000000004b2dd1 : sar ebp, -1 ; push rsp ; ret 0xfffd
0x00000000004b2a41 : sar ebp, -1 ; test al, cl ; std ; jmp rsp
0x00000000004b2bc9 : sar ebp, -1 ; xor al, 0xc1 ; std ; inc esp ; ret
0x00000000004aed63 : sar ecx, 1 ; jnp 0x4aed24 ; ret
0x000000000045786f : sar edi, 1 ; dec dword ptr [rax - 0x39] ; ret 0xffc0
0x000000000046bd1f : sar edi, 1 ; inc dword ptr [rbx - 0x76be0008] ; ret 0x5b74
0x0000000000457a4d : sar edi, cl ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x000000000041c827 : sar edx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x00000000004625ab : sar r8, 2 ; lea eax, dword ptr [r8 - 1] ; ret
0x0000000000474dcc : sar rax, 0x3f ; not eax ; and eax, ecx ; ret
0x0000000000400fcd : sar rax, 1 ; jne 0x400fda ; pop rbp ; ret
0x0000000000489623 : sar rax, 3 ; pop r15 ; ret
0x000000000041c826 : sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x00000000004399f9 : sbb ah, byte ptr [rax] ; call rax
0x00000000004bf368 : sbb al, 0 ; add byte ptr [rax], al ; hlt ; ret
0x00000000004bf320 : sbb al, 0 ; add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; ret
0x0000000000473990 : sbb al, 0x24 ; add rsp, 0x30 ; jmp r11
0x0000000000473a70 : sbb al, 0x24 ; add rsp, 0x30 ; ret
0x0000000000401017 : sbb al, 0x2c ; add byte ptr [rcx], al ; ret
0x00000000004bb6f4 : sbb al, 0x4f ; cli ; jmp qword ptr [rdx]
0x00000000004b3c7a : sbb al, 0xd ; adc bh, byte ptr [rsi] ; cmc ; jmp qword ptr [rdx]
0x00000000004b33d2 : sbb al, 0xd ; adc edi, esi ; hlt ; jmp qword ptr [rdx]
0x00000000004b6eca : sbb al, 0xd ; add ch, al ; cmc ; jmp qword ptr [rdx]
0x00000000004b481a : sbb al, 0xd ; add dword ptr [rsi - 0xb], edx ; jmp qword ptr [rdx]
0x00000000004b6222 : sbb al, 0xd ; add edi, ebx ; std ; jmp qword ptr [rdx]
0x00000000004b35da : sbb al, 0xd ; add sil, r13b ; jmp qword ptr [rdx]
0x00000000004b416a : sbb al, 0xd ; and al, 0x48 ; cmc ; jmp qword ptr [rdx]
0x00000000004b97f2 : sbb al, 0xd ; and bl, byte ptr [rdi] ; clc ; jmp qword ptr [rdx]
0x00000000004b6a02 : sbb al, 0xd ; and dl, bl ; cmc ; jmp qword ptr [rdx]
0x00000000004b68e2 : sbb al, 0xd ; and eax, eax ; cmc ; jmp qword ptr [rdx]
0x00000000004b4232 : sbb al, 0xd ; call 0x234b3786
0x00000000004b6852 : sbb al, 0xd ; call 0x234b5e1c
0x00000000004ba97a : sbb al, 0xd ; call 0x234ba252
0x00000000004b61da : sbb al, 0xd ; clc ; popfq ; cmc ; jmp qword ptr [rdx]
0x00000000004b6d62 : sbb al, 0xd ; cli ; jrcxz 0x4b6d61 ; jmp qword ptr [rdx]
0x00000000004b4122 : sbb al, 0xd ; cmc ; jmp qword ptr [rdx]
0x00000000004b6612 : sbb al, 0xd ; cmp al, 0xa9 ; cmc ; jmp qword ptr [rdx]
0x00000000004b69ba : sbb al, 0xd ; cmp al, 0xda ; cmc ; jmp qword ptr [rdx]
0x00000000004b710a : sbb al, 0xd ; cmp dh, dh ; cmc ; jmp qword ptr [rdx]
0x00000000004b707a : sbb al, 0xd ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cmc ; jmp qword ptr [rdx]
0x00000000004b8e5a : sbb al, 0xd ; cqo ; std ; jmp qword ptr [rdx]
0x00000000004b3f3a : sbb al, 0xd ; cwde ; cmc ; jmp qword ptr [rdx]
0x00000000004b5682 : sbb al, 0xd ; cwde ; xchg eax, edi ; cmc ; jmp qword ptr [rdx]
0x00000000004b338a : sbb al, 0xd ; div ah ; jmp qword ptr [rdx]
0x00000000004b7152 : sbb al, 0xd ; div bp ; jmp qword ptr [rdx]
0x00000000004b722a : sbb al, 0xd ; div ebp ; jmp qword ptr [rdx]
0x00000000004b6b22 : sbb al, 0xd ; fcomp st(6) ; cmc ; jmp qword ptr [rdx]
0x00000000004be8ea : sbb al, 0xd ; hlt ; add esp, edi ; jmp qword ptr [rdx]
0x00000000004b404a : sbb al, 0xd ; hlt ; cmc ; jmp qword ptr [rdx]
0x00000000004b575a : sbb al, 0xd ; hlt ; wait ; cmc ; jmp qword ptr [rdx]
0x00000000004be7e2 : sbb al, 0xd ; imul eax, dword ptr [rcx], -4 ; jmp qword ptr [rdx]
0x00000000004b6df2 : sbb al, 0xd ; in al, -0xb ; jmp qword ptr [rdx]
0x00000000004bb1ba : sbb al, 0xd ; in al, dx ; stc ; jmp qword ptr [rdx]
0x00000000004b53b2 : sbb al, 0xd ; in eax, -0x7b ; cmc ; jmp qword ptr [rdx]
0x00000000004b4be2 : sbb al, 0xd ; in eax, 0x66 ; cmc ; jmp qword ptr [rdx]
0x00000000004b4622 : sbb al, 0xd ; insd dword ptr [rdi], dx ; cmc ; jmp qword ptr [rdx]
0x00000000004bc51a : sbb al, 0xd ; insd dword ptr [rdi], dx ; xchg eax, edi ; cli ; jmp qword ptr [rdx]
0x00000000004b6a4a : sbb al, 0xd ; int1 ; fdivrp st(5) ; jmp qword ptr [rdx]
0x00000000004ba58a : sbb al, 0xd ; jbe 0x4ba555 ; clc ; jmp qword ptr [rdx]
0x00000000004b4592 : sbb al, 0xd ; jne 0x4b45e7 ; cmc ; jmp qword ptr [rdx]
0x00000000004bb012 : sbb al, 0xd ; jnp 0x4bb083 ; stc ; jmp qword ptr [rdx]
0x00000000004b36da : sbb al, 0xd ; jp 0x4b36ff ; cmc ; jmp qword ptr [rdx]
0x00000000004b4482 : sbb al, 0xd ; jp 0x4b44d6 ; cmc ; jmp qword ptr [rdx]
0x00000000004b6fa2 : sbb al, 0xd ; jp 0x4b6f95 ; cmc ; jmp qword ptr [rdx]
0x00000000004b5562 : sbb al, 0xd ; jrcxz 0x4b5501 ; cmc ; jmp qword ptr [rdx]
0x00000000004b45da : sbb al, 0xd ; js 0x4b462f ; cmc ; jmp qword ptr [rdx]
0x00000000004bb5fa : sbb al, 0xd ; loop 0x4bb651 ; cli ; jmp qword ptr [rdx]
0x00000000004b6bfa : sbb al, 0xd ; loope 0x4b6be4 ; cmc ; jmp qword ptr [rdx]
0x00000000004b6c42 : sbb al, 0xd ; loope 0x4b6c41 ; jmp qword ptr [rdx]
0x00000000004b341a : sbb al, 0xd ; loopne 0x4b3419 ; hlt ; jmp qword ptr [rdx]
0x00000000004bc9d2 : sbb al, 0xd ; mov al, 0xfa ; jmp qword ptr [rdx]
0x00000000004b6c8a : sbb al, 0xd ; mov bh, 0xe1 ; cmc ; jmp qword ptr [rdx]
0x00000000004b551a : sbb al, 0xd ; mov bl, 0x96 ; cmc ; jmp qword ptr [rdx]
0x00000000004b9432 : sbb al, 0xd ; mov byte ptr [rbx], bl ; clc ; jmp qword ptr [rdx]
0x00000000004b4372 : sbb al, 0xd ; mov ch, 0x4a ; cmc ; jmp qword ptr [rdx]
0x00000000004baf42 : sbb al, 0xd ; mov ch, 0x60 ; stc ; jmp qword ptr [rdx]
0x00000000004b64aa : sbb al, 0xd ; mov dh, 0xa8 ; cmc ; jmp qword ptr [rdx]
0x00000000004b3f82 : sbb al, 0xd ; mov eax, dword ptr [rsi - 0xb] ; jmp qword ptr [rdx]
0x00000000004b44ca : sbb al, 0xd ; mov ecx, dword ptr [rbx - 0xb] ; jmp qword ptr [rdx]
0x00000000004bca5a : sbb al, 0xd ; mov r8b, 0xfa ; jmp qword ptr [rdx]
0x00000000004b638a : sbb al, 0xd ; movsb byte ptr [rdi], byte ptr [rsi] ; cmpsb byte ptr [rsi], byte ptr [rdi] ; cmc ; jmp qword ptr [rdx]
0x00000000004b6bb2 : sbb al, 0xd ; movsd dword ptr [rdi], dword ptr [rsi] ; loope 0x4b6bb1 ; jmp qword ptr [rdx]
0x00000000004baa0a : sbb al, 0xd ; movsd dword ptr [rdi], dword ptr [rsi] ; sbb al, 0xf9 ; jmp qword ptr [rdx]
0x00000000004b6e3a : sbb al, 0xd ; mul ebp ; cmc ; jmp qword ptr [rdx]
0x00000000004b4862 : sbb al, 0xd ; nop ; push rdi ; cmc ; jmp qword ptr [rdx]
0x00000000004ba6f2 : sbb al, 0xd ; or al, 0xc4 ; clc ; jmp qword ptr [rdx]
0x00000000004b40da : sbb al, 0xd ; or byte ptr [rax - 0xb], cl ; jmp qword ptr [rdx]
0x00000000004be8a2 : sbb al, 0xd ; or byte ptr [rdx], al ; cld ; jmp qword ptr [rdx]
0x00000000004b32fa : sbb al, 0xd ; or dh, dl ; hlt ; jmp qword ptr [rdx]
0x00000000004b43ba : sbb al, 0xd ; or dword ptr [rbx - 0xb], ecx ; jmp qword ptr [rdx]
0x00000000004b94c2 : sbb al, 0xd ; out 0x1b, eax ; clc ; jmp qword ptr [rdx]
0x00000000004b4b52 : sbb al, 0xd ; out dx, al ; cmc ; jmp qword ptr [rdx]
0x00000000004bb5b2 : sbb al, 0xd ; outsb dx, byte ptr [rsi] ; cli ; jmp qword ptr [rdx]
0x00000000004b6972 : sbb al, 0xd ; outsd dx, dword ptr [rsi] ; xlatb ; cmc ; jmp qword ptr [rdx]
0x00000000004b6cd2 : sbb al, 0xd ; pop rax ; loop 0x4b6cd1 ; jmp qword ptr [rdx]
0x00000000004bb73a : sbb al, 0xd ; pop rdi ; push rax ; cli ; jmp qword ptr [rdx]
0x00000000004bad9a : sbb al, 0xd ; pop rdi ; stc ; jmp qword ptr [rdx]
0x00000000004b653a : sbb al, 0xd ; push 0xa9 ; cmc ; jmp qword ptr [rdx]
0x00000000004b47d2 : sbb al, 0xd ; push rbx ; cmc ; jmp qword ptr [rdx]
0x00000000004b536a : sbb al, 0xd ; push rbx ; test esi, ebp ; jmp qword ptr [rdx]
0x00000000004bc5aa : sbb al, 0xd ; push rbx ; xchg eax, edi ; cli ; jmp qword ptr [rdx]
0x00000000004b5322 : sbb al, 0xd ; push rsp ; test esi, ebp ; jmp qword ptr [rdx]
0x00000000004b626a : sbb al, 0xd ; rcr dh, cl ; std ; jmp qword ptr [rdx]
0x00000000004b6462 : sbb al, 0xd ; repe cmpsd dword ptr [rsi], dword ptr [rdi] ; cmc ; jmp qword ptr [rdx]
0x00000000004b3a5a : sbb al, 0xd ; ret 0xf534
0x00000000004b8ea2 : sbb al, 0xd ; ret 0xf7ec
0x00000000004bb642 : sbb al, 0xd ; ret 0xfa4e
0x00000000004bb782 : sbb al, 0xd ; ret 0xfa50
0x00000000004be85a : sbb al, 0xd ; ret 0xfc01
0x00000000004b6ada : sbb al, 0xd ; retf ; fdivrp st(5) ; jmp qword ptr [rdx]
0x00000000004b6192 : sbb al, 0xd ; sahf ; cmc ; jmp qword ptr [rdx]
0x00000000004b6b6a : sbb al, 0xd ; salc ; loope 0x4b6b69 ; jmp qword ptr [rdx]
0x00000000004bb6f2 : sbb al, 0xd ; sbb al, 0x4f ; cli ; jmp qword ptr [rdx]
0x00000000004ba9c2 : sbb al, 0xd ; sbb al, 0xf9 ; jmp qword ptr [rdx]
0x00000000004bf1a2 : sbb al, 0xd ; sbb dl, bl ; cld ; jmp qword ptr [rdx]
0x00000000004b4402 : sbb al, 0xd ; sbb ecx, dword ptr [rbx - 0xb] ; jmp qword ptr [rdx]
0x00000000004b6f5a : sbb al, 0xd ; sbb ecx, ebp ; cmc ; jmp qword ptr [rdx]
0x00000000004b66a2 : sbb al, 0xd ; scasd eax, dword ptr [rdi] ; mov dh, 0xf5 ; jmp qword ptr [rdx]
0x00000000004b6daa : sbb al, 0xd ; shl bl, cl ; cmc ; jmp qword ptr [rdx]
0x00000000004b4b9a : sbb al, 0xd ; stc ; cmc ; jmp qword ptr [rdx]
0x00000000004b947a : sbb al, 0xd ; stc ; sbb edi, eax ; jmp qword ptr [rdx]
0x00000000004bb532 : sbb al, 0xd ; sti ; cli ; jmp qword ptr [rdx]
0x00000000004b62fa : sbb al, 0xd ; sub al, 0xa5 ; cmc ; jmp qword ptr [rdx]
0x00000000004bc98a : sbb al, 0xd ; sub al, 0xb0 ; cli ; jmp qword ptr [rdx]
0x00000000004b6f12 : sbb al, 0xd ; sub eax, ebp ; cmc ; jmp qword ptr [rdx]
0x00000000004b6fea : sbb al, 0xd ; test al, 0xea ; cmc ; jmp qword ptr [rdx]
0x00000000004b63d2 : sbb al, 0xd ; test al, 0xf5 ; jmp qword ptr [rdx]
0x00000000004be752 : sbb al, 0xd ; test byte ptr [rcx], al ; cld ; jmp qword ptr [rdx]
0x00000000004ba5d2 : sbb al, 0xd ; test eax, edx ; clc ; jmp qword ptr [rdx]
0x00000000004b93ea : sbb al, 0xd ; wait ; sbb edi, eax ; jmp qword ptr [rdx]
0x00000000004bacba : sbb al, 0xd ; wait ; stc ; jmp qword ptr [rdx]
0x00000000004bc562 : sbb al, 0xd ; xchg ax, di ; cli ; jmp qword ptr [rdx]
0x00000000004be79a : sbb al, 0xd ; xchg dword ptr [rcx], eax ; cld ; jmp qword ptr [rdx]
0x00000000004b563a : sbb al, 0xd ; xchg eax, edi ; xchg eax, edi ; cmc ; jmp qword ptr [rdx]
0x00000000004b6d1a : sbb al, 0xd ; xchg eax, esi ; jrcxz 0x4b6d19 ; jmp qword ptr [rdx]
0x00000000004b66ea : sbb al, 0xd ; xor al, 0xb7 ; cmc ; jmp qword ptr [rdx]
0x00000000004b70c2 : sbb al, 0xd ; xor ch, 0xf5 ; jmp qword ptr [rdx]
0x00000000004bb05a : sbb al, 0xd ; xor ch, byte ptr [rdx - 7] ; jmp qword ptr [rdx]
0x00000000004b950a : sbb al, 0xd ; xor ebx, dword ptr [rax + rdi*8] ; jmp qword ptr [rdx]
0x00000000004b36dd : sbb al, 0xf5 ; jmp qword ptr [rdx]
0x00000000004b950d : sbb al, 0xf8 ; jmp qword ptr [rdx]
0x00000000004ba9c5 : sbb al, 0xf9 ; jmp qword ptr [rdx]
0x00000000004b48b4 : sbb al, 9 ; add byte ptr [rax], al ; test al, 0x51 ; cmc ; jmp rsp
0x000000000048aba2 : sbb al, byte ptr [rbx + 0xa3c0fe0] ; jne 0x48ab5d ; call rbx
0x0000000000493bd7 : sbb bh, al ; push rbx ; ret
0x00000000004b2235 : sbb bh, ch ; call rax
0x00000000004adae5 : sbb bl, byte ptr [rsi] ; ret
0x000000000043d9f6 : sbb bl, ch ; ret 0x1f0f
0x0000000000434a8b : sbb bl, dh ; ret
0x00000000004231ab : sbb byte ptr [r11 + 0x5d], r11b ; pop r12 ; pop r13 ; ret
0x000000000049289a : sbb byte ptr [r8 - 0x7d], r9b ; ret
0x000000000047ee62 : sbb byte ptr [r9], sil ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x000000000048e91f : sbb byte ptr [rax + 0xf4c10fa], al ; ret
0x0000000000413367 : sbb byte ptr [rax + rax + 0xf], ch ; xchg eax, ebp ; ret 0x8348
0x0000000000414939 : sbb byte ptr [rax + rax + 0xf], ch ; xchg eax, ebp ; ret 0x948
0x0000000000439ed7 : sbb byte ptr [rax - 0x77], cl ; cwde ; call rcx
0x0000000000410496 : sbb byte ptr [rax - 0x77], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000445fa8 : sbb byte ptr [rax - 0x77], cl ; pop rax ; or cl, ch ; ret
0x000000000040dc51 : sbb byte ptr [rax - 0x77], cl ; push rdi ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000450e71 : sbb byte ptr [rax - 0x77], cl ; ret 0x6349
0x0000000000415357 : sbb byte ptr [rax - 0x77], cl ; xor dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x000000000040b916 : sbb byte ptr [rax - 0x7d], cl ; cli ; dec dword ptr [rax + 0xf] ; ret 0xba
0x000000000049289b : sbb byte ptr [rax - 0x7d], cl ; ret
0x0000000000422d5e : sbb byte ptr [rax - 0x7d], cl ; ret 0x4802
0x0000000000422d5d : sbb byte ptr [rax - 0x7d], r9b ; ret 0x4802
0x0000000000437591 : sbb byte ptr [rax], ah ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000040e6aa : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000464177 : sbb byte ptr [rbx + 0x48], 0x29 ; call 0xffffffffc3a282e5
0x0000000000463c60 : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000040fc1a : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000040e0a5 : sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000441610 : sbb byte ptr [rbx - 0x14d3dbbc], cl ; ret 0x8948
0x00000000004404d8 : sbb byte ptr [rbx - 0x14dbdbbc], cl ; ret 0x8948
0x000000000040f1a7 : sbb byte ptr [rbx - 0x2fd6efb9], cl ; ret
0x00000000004152b6 : sbb byte ptr [rbx - 0x3d], bl ; xor eax, eax ; pop rbx ; ret
0x0000000000434c4f : sbb byte ptr [rbx - 0x7663dbbc], cl ; ret 0xdaf7
0x0000000000468db4 : sbb byte ptr [rbx - 0x76b30005], bl ; dec dword ptr [rax - 0x77] ; ret
0x0000000000434d5f : sbb byte ptr [rbx - 0x76ebdbbc], cl ; ret 0xdaf7
0x0000000000488993 : sbb byte ptr [rcx + 0x29], cl ; ret 0x6348
0x000000000046e7f6 : sbb byte ptr [rcx + 0x39], cl ; ret
0x000000000046241b : sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x0000000000435e33 : sbb byte ptr [rcx - 0xa], al ; ret 0x7401
0x000000000049711c : sbb byte ptr [rcx], 0xf9 ; call qword ptr [rax]
0x000000000047ee63 : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 0x7b], cl ; ror byte ptr [rdi], 0x94 ; ret 0x950f
0x000000000046d55b : sbb byte ptr [rcx], dh ; ror byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000474ade : sbb byte ptr [rdi + 0x6c21e0], bh ; call rax
0x000000000041517e : sbb byte ptr [rdx + 0x5b], bl ; pop rbp ; jmp rax
0x0000000000413e07 : sbb byte ptr [rdx], al ; add byte ptr [rax - 0x7d], cl ; clc ; dec dword ptr [rax - 0x77] ; ret 0x840f
0x000000000043660c : sbb byte ptr [rdx], cl ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000004b3c38 : sbb byte ptr [rsi], bh ; cmc ; call qword ptr [rbx]
0x00000000004b7950 : sbb ch, 0xf5 ; jmp rbx
0x000000000048fbf9 : sbb ch, al ; shr dword ptr [rcx + rdi*8], 1 ; dec dword ptr [rax - 0x7d] ; ret
0x000000000049719d : sbb cl, bh ; jmp qword ptr [rax]
0x00000000004971bd : sbb cl, bh ; jmp rax
0x0000000000419add : sbb cl, byte ptr [rdi] ; xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004205fd : sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004196cd : sbb cl, byte ptr [rdi] ; xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x00000000004191d9 : sbb cl, byte ptr [rdi] ; xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004199e9 : sbb cl, byte ptr [rdi] ; xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042224a : sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x0000000000421a6a : sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x0000000000421e5a : sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042167a : sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042115d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042093d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000041945d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042011d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000041979d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x0000000000419ab9 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000421819 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000419b89 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000420c7d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042045d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041fc3d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x0000000000420e1d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000041993d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041912d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x000000000041952d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x0000000000421d0a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042152a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042263a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000419a0d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x00000000004191fd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000041ff7d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041929f : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004195fd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x00000000004200b3 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000420db3 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004208d3 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000421c0b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042253b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041986d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004210f3 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004203f3 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000041ff13 : sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000420c13 : sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x0000000000421d5b : sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042157b : sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004192c3 : sbb cl, byte ptr [rdi] ; xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000440f53 : sbb cl, ch ; ret 0xfff9
0x0000000000468011 : sbb dh, bl ; ret
0x00000000004bf1a4 : sbb dl, bl ; cld ; jmp qword ptr [rdx]
0x0000000000481f18 : sbb dword ptr [r8], r8d ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000048ce33 : sbb dword ptr [rax - 0x75], ecx ; jl 0x48ce63 ; adc al, ch ; ret 0xfe7b
0x0000000000481ea1 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000481f19 : sbb dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000040a8a6 : sbb dword ptr [rax], eax ; add byte ptr [rbx + 0x275fff8], al ; pop rbx ; ret
0x000000000044293e : sbb dword ptr [rax], ebp ; add byte ptr [rax + 0x39], cl ; ret 0x7b73
0x00000000004b039d : sbb dword ptr [rbx], edx ; mov ch, 0x99 ; in eax, -1 ; lahf ; mov dh, 0xc7 ; ret 0xe71f
0x0000000000433197 : sbb eax, -1 ; ret
0x0000000000437e75 : sbb eax, 0 ; leave ; ret
0x00000000004b36d7 : sbb eax, 0xd1cfff5 ; jp 0x4b3702 ; cmc ; jmp qword ptr [rdx]
0x00000000004b942f : sbb eax, 0xd1cfff8 ; mov byte ptr [rbx], bl ; clc ; jmp qword ptr [rdx]
0x00000000004b94bf : sbb eax, 0xd1cfff8 ; out 0x1b, eax ; clc ; jmp qword ptr [rdx]
0x00000000004b9477 : sbb eax, 0xd1cfff8 ; stc ; sbb edi, eax ; jmp qword ptr [rdx]
0x00000000004b9507 : sbb eax, 0xd1cfff8 ; xor ebx, dword ptr [rax + rdi*8] ; jmp qword ptr [rdx]
0x00000000004ba977 : sbb eax, 0xd1cfff9 ; call 0x234ba255
0x00000000004baa07 : sbb eax, 0xd1cfff9 ; movsd dword ptr [rdi], dword ptr [rsi] ; sbb al, 0xf9 ; jmp qword ptr [rdx]
0x00000000004ba9bf : sbb eax, 0xd1cfff9 ; sbb al, 0xf9 ; jmp qword ptr [rdx]
0x0000000000481cc1 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000481d39 : sbb eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000047e3ce : sbb eax, dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0x840f
0x0000000000474f1a : sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x0000000000433195 : sbb eax, eax ; sbb eax, -1 ; ret
0x0000000000445450 : sbb ebx, esi ; ret
0x0000000000450f40 : sbb ecx, dword ptr [rax - 0x77] ; ret 0x6348
0x00000000004b4404 : sbb ecx, dword ptr [rbx - 0xb] ; jmp qword ptr [rdx]
0x00000000004b6f5c : sbb ecx, ebp ; cmc ; jmp qword ptr [rdx]
0x0000000000490441 : sbb ecx, ecx ; cmp qword ptr [rsi + 8], rdi ; cmovbe eax, ecx ; ret
0x000000000049711d : sbb ecx, edi ; call qword ptr [rax]
0x000000000049713d : sbb ecx, edi ; jmp rax
0x00000000004b935d : sbb edi, eax ; jmp qword ptr [rdx]
0x00000000004b3058 : sbb esp, ebx ; hlt ; call qword ptr [rax]
0x00000000004bde1d : scasb al, byte ptr [rdi] ; add byte ptr [rax], al ; jo 0x4bde94 ; sti ; call qword ptr [rax]
0x000000000042229e : scasb al, byte ptr [rdi] ; add eax, 0x83480000 ; ret 0xe910
0x0000000000470e1a : scasb al, byte ptr [rdi] ; mov eax, dword ptr [rdx] ; ret
0x000000000040661e : scasb al, byte ptr [rdi] ; ret 1
0x000000000046bd1e : scasb al, byte ptr [rdi] ; sar edi, 1 ; inc dword ptr [rbx - 0x76be0008] ; ret 0x5b74
0x00000000004975e0 : scasb al, byte ptr [rdi] ; xor eax, 0x3d54fff9 ; stc ; call rsp
0x000000000042239d : scasd eax, dword ptr [rdi] ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000046491f : scasd eax, dword ptr [rdi] ; add eax, esi ; ret
0x00000000004ba2c9 : scasd eax, dword ptr [rdi] ; clc ; call qword ptr [rcx]
0x00000000004ba2b1 : scasd eax, dword ptr [rdi] ; clc ; call qword ptr [rdi]
0x0000000000496e3d : scasd eax, dword ptr [rdi] ; clc ; call rax
0x00000000004bc909 : scasd eax, dword ptr [rdi] ; cli ; call qword ptr [rdx]
0x0000000000435c1d : scasd eax, dword ptr [rdi] ; cli ; std ; dec dword ptr [rax - 0x75] ; jge 0x435c2d ; call rbx
0x000000000048d800 : scasd eax, dword ptr [rdi] ; mov ah, 0x24 ; pop rax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rcx]
0x00000000004b66a4 : scasd eax, dword ptr [rdi] ; mov dh, 0xf5 ; jmp qword ptr [rdx]
0x0000000000401a48 : scasd eax, dword ptr [rdi] ; ret
0x000000000040133d : scasd eax, dword ptr [rdi] ; ret 0x589
0x0000000000465716 : scasd eax, dword ptr [rdi] ; ret 0x67ba
0x0000000000433944 : scasd eax, dword ptr [rdi] ; ret 0x8341
0x00000000004b28c5 : scasd eax, dword ptr [rdi] ; std ; call qword ptr [rcx]
0x00000000004b28c1 : scasd eax, dword ptr [rdi] ; std ; jmp qword ptr [rsi + 0x11fffdaf]
0x00000000004b2975 : scasd eax, dword ptr [rdi] ; std ; jmp rbx
0x00000000004769ab : scasd eax, dword ptr [rdi] ; sub al, 0xd5 ; and bh, dl ; add byte ptr [rax + 1], cl ; ret 0x8b48
0x0000000000437a5c : setae al ; ret
0x0000000000439010 : setne dl ; jmp 0x438ff8
0x00000000004b2288 : shl al, 0xfc ; call qword ptr [rax]
0x00000000004b6dac : shl bl, cl ; cmc ; jmp qword ptr [rdx]
0x00000000004b2250 : shl byte ptr [rdi*8 - 0x2d9af01], 1 ; call rax
0x00000000004333df : shl byte ptr [rsi + 0x44], 0xf ; out dx, eax ; ret 0xf66
0x0000000000431783 : shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000417ac5 : shl byte ptr [rsi + 0xf], 0xeb ; ret 0xf66
0x00000000004261db : shl byte ptr [rsi + 0xf], 0xef ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x00000000004261f2 : shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x0000000000462d86 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000462d97 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x00000000004260d1 : shl byte ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000046452d : shl byte ptr [rsi - 0x70], 0xc3 ; mov eax, 1 ; ret
0x000000000046c8a3 : shl byte ptr [rsi - 0x7d], cl ; jge 0x46c8b6 ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x5385
0x00000000004a3000 : shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x00000000004aeee8 : shl dword ptr [rdi - 5], 1 ; ret
0x0000000000426156 : shl dword ptr [rsi + 0xf], -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000043323b : shl dword ptr [rsi + 0xf], -0x26 ; ret
0x0000000000462d82 : shl dword ptr [rsi + 0xf], -0x29 ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000042620d : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x00000000004261f6 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x00000000004261df : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x0000000000424c9b : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000426171 : shl dword ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000041c47c : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret 0xc085
0x0000000000426031 : shl dword ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x830f
0x00000000004390c2 : shl eax, cl ; pop rbp ; ret
0x00000000004065f3 : shl ebp, 3 ; mov rdx, r12 ; call 0x4228d8
0x00000000004390be : shl ecx, 3 ; pop rbx ; shl eax, cl ; pop rbp ; ret
0x00000000004754ac : shl ecx, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000475437 : shl ecx, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000475406 : shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000048d6ce : shl edx, cl ; or r8, rdx ; mov qword ptr [rsi], r8 ; ret
0x00000000004065f2 : shl r13, 3 ; mov rdx, r12 ; call 0x4228d9
0x00000000004754ab : shl r9, cl ; mov qword ptr [rdi - 0x10], r9 ; ret
0x0000000000475436 : shl r9, cl ; mov qword ptr [rdi - 8], r9 ; ret
0x0000000000475405 : shl r9, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000048d6cd : shl rdx, cl ; or r8, rdx ; mov qword ptr [rsi], r8 ; ret
0x00000000004bb280 : shr al, 0xf9 ; call rdx
0x0000000000402310 : shr al, 1 ; mov rdx, rax ; jmp 0x402331
0x000000000040230f : shr al, 1 ; mov rdx, rax ; jmp 0x402332
0x000000000047ec2d : shr bl, 1 ; add byte ptr [r15 + 0x6c4640], r15b ; call rax
0x0000000000473ff2 : shr bl, cl ; or al, 0x83 ; ret
0x0000000000438fd3 : shr byte ptr [rax], 0 ; test eax, eax ; je 0x438fe7 ; ret
0x0000000000424c3f : shr byte ptr [rcx], 0xc8 ; ret
0x00000000004424b8 : shr byte ptr [rcx], cl ; ret
0x000000000041c82b : shr byte ptr [rcx], cl ; rol bl, 1 ; nop ; xor eax, eax ; ret
0x00000000004b2268 : shr byte ptr [rip + 0x1780fffd], 1 ; std ; jmp rax
0x0000000000497068 : shr cl, 1 ; clc ; call rax
0x000000000041570b : shr cl, cl ; ret
0x000000000045ba15 : shr dh, 0xff ; dec dword ptr [rcx + 0x39] ; ret 0x850f
0x000000000049706c : shr dl, 1 ; clc ; call rax
0x000000000048fbfb : shr dword ptr [rcx + rdi*8], 1 ; dec dword ptr [rax - 0x7d] ; ret
0x0000000000474e00 : shr eax, 0x3f ; ret
0x0000000000433b3a : shr eax, 0xe ; and eax, 0x3fc00 ; pop rbx ; ret
0x0000000000433b19 : shr eax, 6 ; and eax, 0x3fffc00 ; pop rbx ; ret
0x000000000043b34c : shr ebx, cl ; ret
0x00000000004755bc : shr ecx, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000475541 : shr ecx, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000475510 : shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000436f7c : shr ecx, cl ; ret
0x00000000004626b3 : shr edx, 2 ; sub eax, edx ; ret
0x00000000004755bb : shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000475540 : shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x000000000047550f : shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000474dff : shr rax, 0x3f ; ret
0x00000000004626b2 : shr rdx, 2 ; sub eax, edx ; ret
0x0000000000433866 : sldt word ptr [rax] ; pop rbx ; lea rax, qword ptr [r9 + 1] ; pop rbp ; ret
0x00000000004a21c5 : sldt word ptr [rax] ; ret 0xf
0x0000000000410643 : stc ; adc dword ptr [rbx], ebp ; add byte ptr [rax + 0x39], cl ; ret 0xb76
0x00000000004974ca : stc ; call qword ptr [rax + 0x10fff938]
0x00000000004974c2 : stc ; call qword ptr [rax + 0x10fff939]
0x00000000004974ba : stc ; call qword ptr [rax + 0x10fff93a]
0x00000000004974b2 : stc ; call qword ptr [rax + 0x10fff93b]
0x00000000004974aa : stc ; call qword ptr [rax + 0x10fff93c]
0x000000000049719a : stc ; call qword ptr [rax + 0x20fff918]
0x000000000049748e : stc ; call qword ptr [rax + 0x20fff941]
0x0000000000497276 : stc ; call qword ptr [rax + 0x20fff944]
0x00000000004970aa : stc ; call qword ptr [rax]
0x0000000000497322 : stc ; call qword ptr [rdx + 0x22fff946]
0x0000000000497342 : stc ; call qword ptr [rdx]
0x00000000004972be : stc ; call qword ptr [rsi + 0x26fff943]
0x00000000004bad22 : stc ; call qword ptr [rsi]
0x00000000004970d2 : stc ; call rax
0x00000000004bae82 : stc ; call rdi
0x0000000000497332 : stc ; call rdx
0x00000000004972ce : stc ; call rsi
0x00000000004973fa : stc ; call rsp
0x00000000004b4b9c : stc ; cmc ; jmp qword ptr [rdx]
0x000000000048fbfd : stc ; dec dword ptr [rax - 0x7d] ; ret
0x000000000049711a : stc ; inc dword ptr [rax + 0x10fff919] ; or al, 0xf9 ; call rax
0x000000000049714e : stc ; inc dword ptr [rax + 0x13] ; stc ; call qword ptr [rax]
0x000000000049749a : stc ; inc dword ptr [rax + 0x40] ; stc ; jmp rax
0x0000000000497282 : stc ; inc dword ptr [rax + 0x43] ; stc ; call rax
0x00000000004970c2 : stc ; inc dword ptr [rax + 0xe] ; stc ; jmp qword ptr [rax]
0x0000000000497166 : stc ; inc dword ptr [rax + 0xf] ; stc ; jmp qword ptr [rax]
0x000000000049724a : stc ; inc dword ptr [rax - 0x2f0006fd] ; add al, 0xf9 ; jmp qword ptr [rax]
0x0000000000497116 : stc ; inc dword ptr [rax - 0x7f0006e9] ; sbb ecx, edi ; call qword ptr [rax]
0x00000000004970ca : stc ; inc dword ptr [rax] ; adc bh, cl ; jmp rax
0x00000000004970e6 : stc ; inc dword ptr [rax] ; adc cl, bh ; jmp rax
0x000000000049716e : stc ; inc dword ptr [rax] ; adc edi, ecx ; call rax
0x000000000049785a : stc ; inc dword ptr [rax] ; popfq ; stc ; call qword ptr [rax]
0x000000000049787e : stc ; inc dword ptr [rax] ; sahf ; stc ; jmp qword ptr [rax]
0x000000000049748a : stc ; inc dword ptr [rax] ; stc ; call qword ptr [rax + 0x20fff941]
0x0000000000497272 : stc ; inc dword ptr [rax] ; stc ; call qword ptr [rax + 0x20fff944]
0x00000000004977de : stc ; inc dword ptr [rax] ; xchg eax, edi ; stc ; call qword ptr [rax]
0x000000000049779e : stc ; inc dword ptr [rax] ; xchg eax, esi ; stc ; call qword ptr [rax]
0x000000000049732e : stc ; inc dword ptr [rdx + 0x45] ; stc ; call rdx
0x00000000004972ca : stc ; inc dword ptr [rsi + 0x42] ; stc ; call rsi
0x00000000004972ba : stc ; inc dword ptr [rsi] ; stc ; call qword ptr [rsi + 0x26fff943]
0x00000000004973f6 : stc ; inc dword ptr [rsp + rax*2 - 7] ; call rsp
0x0000000000497206 : stc ; inc eax ; add ecx, edi ; call qword ptr [rax]
0x0000000000497876 : stc ; inc eax ; popfq ; stc ; jmp rax
0x0000000000497852 : stc ; inc eax ; pushfq ; stc ; jmp rax
0x0000000000497896 : stc ; inc eax ; sahf ; stc ; jmp rax
0x0000000000497826 : stc ; inc eax ; wait ; stc ; call rax
0x00000000004977ce : stc ; inc eax ; xchg eax, esi ; stc ; call rax
0x0000000000410353 : stc ; je 0x410195 ; ret
0x0000000000421352 : stc ; je 0x42131e ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000004839a2 : stc ; je 0x48396e ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000004976ce : stc ; jmp qword ptr [rax + 0x10fff937]
0x00000000004976c6 : stc ; jmp qword ptr [rax + 0x20fff938]
0x00000000004976be : stc ; jmp qword ptr [rax + 0x20fff939]
0x00000000004976b6 : stc ; jmp qword ptr [rax + 0x20fff93a]
0x00000000004976ae : stc ; jmp qword ptr [rax + 0x20fff93b]
0x00000000004974a2 : stc ; jmp qword ptr [rax + 0x20fff93d]
0x00000000004970c6 : stc ; jmp qword ptr [rax]
0x000000000049731e : stc ; jmp qword ptr [rdx]
0x00000000004972c2 : stc ; jmp qword ptr [rsi]
0x00000000004970ce : stc ; jmp rax
0x000000000048d779 : stc ; jmp rcx
0x0000000000497356 : stc ; jmp rdx
0x00000000004972b2 : stc ; jmp rsi
0x00000000004aed64 : stc ; jnp 0x4aed23 ; ret
0x000000000045955b : stc ; mov al, 0xff ; call qword ptr [rax + 0x8c28348]
0x0000000000428a98 : stc ; mov dword ptr [rdi - 4], ecx ; ret
0x0000000000437e7e : stc ; nop ; xor eax, eax ; leave ; ret
0x000000000047513e : stc ; pop r15 ; ret
0x0000000000497496 : stc ; push qword ptr [rax + 0x40fff940] ; stc ; jmp rax
0x000000000049727e : stc ; push qword ptr [rax + 0x40fff943] ; stc ; call rax
0x0000000000497822 : stc ; push qword ptr [rax - 0x3f000665] ; wait ; stc ; call rax
0x00000000004977ca : stc ; push qword ptr [rax - 0x3f00066a] ; xchg eax, esi ; stc ; call rax
0x00000000004970a6 : stc ; push qword ptr [rax] ; adc cl, bh ; call qword ptr [rax]
0x00000000004976a2 : stc ; push qword ptr [rax] ; cmp eax, 0x3cb0fff9 ; stc ; jmp qword ptr [rax]
0x000000000049732a : stc ; push qword ptr [rdx + 0x42fff945] ; stc ; call rdx
0x00000000004972c6 : stc ; push qword ptr [rsi + 0x46fff942] ; stc ; call rsi
0x00000000004973f2 : stc ; push qword ptr [rsp + rax*2 + 0x4444fff9] ; stc ; call rsp
0x000000000049779a : stc ; push rax ; stc ; inc dword ptr [rax] ; xchg eax, esi ; stc ; call qword ptr [rax]
0x0000000000497832 : stc ; push rax ; wait ; stc ; call qword ptr [rax]
0x0000000000497802 : stc ; push rax ; xchg eax, edi ; stc ; call qword ptr [rax]
0x00000000004977da : stc ; push rax ; xchg eax, esi ; stc ; inc dword ptr [rax] ; xchg eax, edi ; stc ; call qword ptr [rax]
0x00000000004aca90 : stc ; ret
0x00000000004b947c : stc ; sbb edi, eax ; jmp qword ptr [rdx]
0x000000000046f974 : std ; and al, 0xf ; xchg eax, esp ; ret 0xc031
0x00000000004b2e2a : std ; call qword ptr [rax - 0x3d]
0x00000000004b222a : std ; call qword ptr [rax]
0x00000000004b2e46 : std ; call qword ptr [rbx + rax*8 - 0x3c1e0003]
0x00000000004bff6a : std ; call qword ptr [rbx]
0x00000000004b28c6 : std ; call qword ptr [rcx]
0x00000000004b28e6 : std ; call qword ptr [rdi]
0x00000000004b2dd2 : std ; call qword ptr [rdx + rax*8 - 3]
0x00000000004b2236 : std ; call rax
0x00000000004b2e16 : std ; call rcx
0x00000000004b3672 : std ; call rdi
0x00000000004b29da : std ; call rdx
0x00000000004b2a32 : std ; call rsp
0x00000000004971fd : std ; clc ; jmp qword ptr [rax]
0x00000000004b21f9 : std ; cld ; inc dword ptr [rax - 1] ; cld ; jmp qword ptr [rax]
0x00000000004b2e82 : std ; dec dword ptr [rax + 0x8fffdd8] ; fdivr st(5) ; call rax
0x000000000043596c : std ; dec dword ptr [rax - 0x75] ; jge 0x435978 ; call rbx
0x0000000000435c1f : std ; dec dword ptr [rax - 0x75] ; jge 0x435c2b ; call rbx
0x0000000000446982 : std ; dec dword ptr [rax - 0x77] ; ret
0x00000000004b2e86 : std ; dec dword ptr [rax] ; fdivr st(5) ; call rax
0x000000000043582a : std ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000435c2d : std ; dec dword ptr [rcx - 0x75] ; cmp al, 0x24 ; call rbx
0x0000000000435837 : std ; dec dword ptr [rcx - 0x75] ; jge 0x435843 ; call rbx
0x000000000043595e : std ; dec dword ptr [rcx - 0x75] ; jge 0x43596a ; call rbx
0x0000000000435aa1 : std ; dec dword ptr [rcx - 0x75] ; jge 0x435aad ; call rbx
0x0000000000435c11 : std ; dec dword ptr [rcx - 0x75] ; jge 0x435c1d ; call rbx
0x00000000004b221a : std ; inc dword ptr [rax + 0xe] ; std ; jmp qword ptr [rax]
0x00000000004b2222 : std ; inc dword ptr [rax] ; adc bh, ch ; jmp rax
0x00000000004b2202 : std ; inc dword ptr [rax] ; add edi, ebp ; jmp rax
0x00000000004b2e42 : std ; inc dword ptr [rbp + rdi*4 - 0x3c6b0003] ; std ; jmp rcx
0x00000000004b2a42 : std ; inc dword ptr [rcx + rax*8 - 0x3f1b0003] ; std ; jmp rsp
0x00000000004b2a8a : std ; inc dword ptr [rdx + rax*8] ; std ; inc dword ptr [rdx + rax*8] ; std ; jmp rsp
0x00000000004b2a72 : std ; inc dword ptr [rdx + rax*8] ; std ; jmp rsp
0x00000000004b2e26 : std ; inc dword ptr [rdx - 0x3d] ; std ; call qword ptr [rax - 0x3d]
0x00000000004b2e12 : std ; inc ebx ; ret
0x00000000004b2bce : std ; inc esp ; ret
0x00000000004745ee : std ; jbe 0x4745fb ; ret
0x00000000004b221e : std ; jmp qword ptr [rax]
0x00000000004b28e2 : std ; jmp qword ptr [rcx + 0x17fffdb1]
0x00000000004bddaa : std ; jmp qword ptr [rdi]
0x00000000004b6226 : std ; jmp qword ptr [rdx]
0x00000000004b28c2 : std ; jmp qword ptr [rsi + 0x11fffdaf]
0x00000000004b2206 : std ; jmp rax
0x00000000004b2976 : std ; jmp rbx
0x00000000004b2e4a : std ; jmp rcx
0x00000000004b2a86 : std ; jmp rsp
0x00000000004b296e : std ; lcall ptr [rcx - 0x61000251] ; scasd eax, dword ptr [rdi] ; std ; jmp rbx
0x00000000004b29f6 : std ; ljmp ptr [rdx] ; mov edi, 0xbb20fffd ; std ; jmp qword ptr [rax]
0x00000000004282bb : std ; mov word ptr [rdi - 2], cx ; ret
0x0000000000443c62 : std ; or eax, 0x83489074 ; ret
0x00000000004b2e0e : std ; push qword ptr [rbx - 0x3c00023d] ; ret
0x00000000004b2e1a : std ; push qword ptr [rbx] ; ret
0x00000000004b2dce : std ; push qword ptr [rcx + rax*8 - 3] ; call qword ptr [rdx + rax*8 - 3]
0x00000000004b2c52 : std ; push qword ptr [rcx + rax*8 - 3] ; call rsp
0x00000000004b2a6e : std ; push qword ptr [rcx + rax*8 - 3] ; inc dword ptr [rdx + rax*8] ; std ; jmp rsp
0x00000000004b2bca : std ; push qword ptr [rcx + rax*8] ; std ; inc esp ; ret
0x00000000004b2e02 : std ; push qword ptr [rsi + 0x5afffdc4] ; ret 0xfffd
0x00000000004b2aae : std ; push qword ptr [rsp + rax*8 - 0x3b1b0003] ; std ; jmp rsp
0x00000000004b29f2 : std ; push rbp ; mov edi, 0xbf2afffd ; std ; jmp qword ptr [rax]
0x00000000004b2e4e : std ; push rdx ; ret
0x000000000043596b : std ; std ; dec dword ptr [rax - 0x75] ; jge 0x435979 ; call rbx
0x0000000000435950 : std ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x000000000043595d : std ; std ; dec dword ptr [rcx - 0x75] ; jge 0x43596b ; call rbx
0x0000000000416761 : sti ; adc al, 0x77 ; sub ecx, dword ptr [rcx - 0x7d] ; ret
0x0000000000416944 : sti ; add al, 0x77 ; or dword ptr [rcx - 0x7d], ecx ; ret
0x0000000000490f41 : sti ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x3948
0x0000000000477228 : sti ; add cl, byte ptr [rcx + 0x29] ; ret
0x00000000004bde22 : sti ; call qword ptr [rax]
0x00000000004bd742 : sti ; call qword ptr [rbx]
0x00000000004be2c2 : sti ; call qword ptr [rdx]
0x00000000004bd412 : sti ; call rdx
0x00000000004bd82a : sti ; call rsi
0x00000000004bb534 : sti ; cli ; jmp qword ptr [rdx]
0x000000000040e0eb : sti ; je 0x40e0ff ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004bdc4a : sti ; jmp qword ptr [rdx]
0x00000000004be132 : sti ; jmp rbx
0x0000000000428698 : sti ; mov dword ptr [rdi - 4], ecx ; ret
0x00000000004aeeea : sti ; ret
0x000000000047c2c7 : sti ; ret 0xffbf
0x0000000000435b34 : sti ; std ; dec dword ptr [rcx - 0x75] ; call rbx
0x0000000000491bb5 : sti ; test eax, eax ; jne 0x491bc6 ; pop rbx ; ret
0x0000000000444c87 : sti ; test rax, rax ; je 0x444c95 ; call rax
0x0000000000496e2d : stosb byte ptr [rdi], al ; clc ; call qword ptr [rax - 0x1f000755]
0x00000000004ba221 : stosb byte ptr [rdi], al ; clc ; call qword ptr [rcx]
0x00000000004af3c4 : stosb byte ptr [rdi], al ; cli ; ret 0xac65
0x0000000000469277 : stosb byte ptr [rdi], al ; test eax, 0x850f004a ; ret
0x00000000004b6cce : stosd dword ptr [rdi], eax ; add eax, 0xd1cfff6 ; pop rax ; loop 0x4b6cd5 ; jmp qword ptr [rdx]
0x000000000048aba9 : stosd dword ptr [rdi], eax ; call rbx
0x0000000000496e31 : stosd dword ptr [rdi], eax ; clc ; jmp rax
0x0000000000415179 : stosd dword ptr [rdi], eax ; mov rsi, qword ptr [rsp + 0x18] ; pop rdx ; pop rbx ; pop rbp ; jmp rax
0x00000000004b04cc : stosd dword ptr [rdi], eax ; ret
0x00000000004b08b1 : sub ah, ah ; mov bh, 6 ; movsd dword ptr [rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000401018 : sub al, 0 ; add ebx, esi ; ret
0x0000000000400e0f : sub al, 0 ; pop r12 ; ret
0x00000000004b83a4 : sub al, 0x54 ; add byte ptr [rax], al ; cwde ; xchg bh, dh ; jmp qword ptr [rbx]
0x00000000004ba994 : sub al, 0x77 ; add byte ptr [rax], al ; ret
0x0000000000438051 : sub al, 0x88 ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000425823 : sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004b62fc : sub al, 0xa5 ; cmc ; jmp qword ptr [rdx]
0x00000000004bc98c : sub al, 0xb0 ; cli ; jmp qword ptr [rdx]
0x00000000004beba4 : sub al, 0xbc ; add byte ptr [rax], al ; call 0x114be800
0x00000000004769ac : sub al, 0xd5 ; and bh, dl ; add byte ptr [rax + 1], cl ; ret 0x8b48
0x0000000000441614 : sub al, 0xeb ; ret 0x8948
0x000000000048fbfc : sub al, 0xf9 ; dec dword ptr [rax - 0x7d] ; ret
0x00000000004b2265 : sub al, 0xfd ; call rax
0x00000000004ac970 : sub al, bl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi], ch ; ret
0x000000000041503c : sub al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000416101 : sub al, byte ptr [rax] ; test rax, rax ; je 0x416111 ; call rax
0x0000000000451cea : sub al, byte ptr [rbx - 0x1df43] ; call qword ptr [rax]
0x0000000000496d01 : sub bh, al ; inc dword ptr [rax] ; sub edi, eax ; call rax
0x00000000004b29f8 : sub bh, byte ptr [rdi - 0x44df0003] ; std ; jmp qword ptr [rax]
0x0000000000491c36 : sub byte ptr [r11 - 0x17], bl ; ret 0xb6e3
0x000000000048af43 : sub byte ptr [rax + 0x39], cl ; ret
0x0000000000473fba : sub byte ptr [rax + 0x63], cl ; ret
0x000000000043415a : sub byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x00000000004640c6 : sub byte ptr [rax - 0x73], cl ; je 0x4640f5 ; call rbx
0x000000000041419b : sub byte ptr [rax - 0x77], cl ; and cl, bpl ; ret 0xfff4
0x0000000000434c8b : sub byte ptr [rax], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000043798d : sub byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000437cdf : sub byte ptr [rax], al ; cmp rdx, rax ; jne 0x437cc8 ; ret
0x0000000000438ffa : sub byte ptr [rax], al ; pop rbx ; ret
0x000000000043a275 : sub byte ptr [rax], al ; ret
0x0000000000438fd4 : sub byte ptr [rax], al ; test eax, eax ; je 0x438fe6 ; ret
0x00000000004355f5 : sub byte ptr [rax], al ; test rax, rax ; je 0x435606 ; ret
0x0000000000406e4b : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000040a82d : sub byte ptr [rbx + 0x5d], bl ; ret
0x0000000000465b31 : sub byte ptr [rbx + 0x5d], r11b ; pop r12 ; pop r13 ; ret
0x0000000000491c37 : sub byte ptr [rbx - 0x17], bl ; ret 0xb6e3
0x0000000000438fb3 : sub byte ptr [rbx - 0x26], dh ; mov eax, 1 ; ret
0x0000000000438fb2 : sub byte ptr [rbx - 0x26], sil ; mov eax, 1 ; ret
0x000000000040341e : sub byte ptr [rbx], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004132d2 : sub byte ptr [rcx + rcx*4 + 0x62], cl ; and byte ptr [rax - 0x77], cl ; ret 0x8b48
0x0000000000415d52 : sub byte ptr [rcx + rcx*4 - 0x19], cl ; call rax
0x0000000000474ee5 : sub byte ptr [rcx - 0x3b76b310], cl ; mov rbp, r9 ; jmp rdx
0x000000000046bbe0 : sub byte ptr [rcx - 0x77], al ; ret 0x8341
0x0000000000460db7 : sub byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x0000000000496e3c : sub byte ptr [rdi - 0x4f2f0008], 0xf8 ; jmp qword ptr [rax]
0x000000000047f06b : sub byte ptr [rdi], cl ; mov dh, 0xc0 ; neg eax ; ret
0x000000000044388c : sub ch, byte ptr [rax + rax + 0x48] ; test eax, eax ; je 0x44389e ; call rax
0x000000000048845e : sub cl, al ; call 0x490aad89
0x000000000048897d : sub cl, al ; call 0x490ab2a8
0x0000000000469e15 : sub dh, dh ; ret 0xf04
0x0000000000467c19 : sub dword ptr [rax - 0x77], ecx ; loope 0x467bac ; ret 0xf631
0x00000000004b591d : sub dword ptr [rax], eax ; add byte ptr [rax], dl ; test dh, ch ; jmp qword ptr [rcx]
0x00000000004268e7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4268fd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000426a37 : sub dword ptr [rdi + 0x10], ebx ; jb 0x426a4d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000426b87 : sub dword ptr [rdi + 0x10], ebx ; jb 0x426b9d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000426cd7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x426ced ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000426e27 : sub dword ptr [rdi + 0x10], ebx ; jb 0x426e3d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000426f77 : sub dword ptr [rdi + 0x10], ebx ; jb 0x426f8d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004270c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4270dd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000427217 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42722d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000427367 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42737d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004274b7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4274cd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000427607 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42761d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000427757 : sub dword ptr [rdi + 0x10], ebx ; jb 0x42776d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004278a7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x4278bd ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000004279f7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x427a0d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000427b47 : sub dword ptr [rdi + 0x10], ebx ; jb 0x427b5d ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000048e152 : sub dword ptr [rdi + 0x23], esp ; add byte ptr [rax], cl ; ret
0x0000000000426843 : sub dword ptr [rdi - 0x10], ebp ; jmp r9
0x000000000042683f : sub dword ptr [rdi - 0x20], esp ; movaps xmmword ptr [rdi - 0x10], xmm5 ; jmp r9
0x00000000004268ed : sub dword ptr [rdi], esp ; jmp r9
0x0000000000426006 : sub dword ptr [rip - 0xcfffffe], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret
0x00000000004b2269 : sub eax, 0x1780fffd ; std ; jmp rax
0x0000000000496d11 : sub eax, 0x2e40fff8 ; clc ; call qword ptr [rax]
0x00000000004135d2 : sub eax, 0x448d48fe ; ret
0x0000000000435a9f : sub eax, 0x49fffdfc ; mov edi, dword ptr [rbp] ; call rbx
0x0000000000468256 : sub eax, 0x62058948 ; ret
0x0000000000443234 : sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000433614 : sub eax, 1 ; ret
0x0000000000474ca6 : sub eax, dword ptr [0] ; ret
0x000000000040f568 : sub eax, dword ptr [r8] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004b5ad5 : sub eax, dword ptr [rax] ; add byte ptr [rax - 0x75], cl ; cmc ; call qword ptr [rdi]
0x000000000040f569 : sub eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004b5b05 : sub eax, dword ptr [rax] ; add byte ptr [rax], bh ; mov ebp, dr0 ; call qword ptr [rcx]
0x000000000040f504 : sub eax, dword ptr [rax] ; add dword ptr [rip + 0x2b41f7], 1 ; ret
0x000000000041005d : sub eax, dword ptr [rax] ; add ebx, esi ; ret
0x000000000040d325 : sub eax, dword ptr [rax] ; jne 0x40f594 ; ret
0x000000000040f540 : sub eax, dword ptr [rax] ; jne 0x40f7bd ; ret
0x0000000000410ae8 : sub eax, dword ptr [rax] ; jne 0x417273 ; ret
0x000000000040f485 : sub eax, dword ptr [rax] ; ret
0x00000000004111e3 : sub eax, dword ptr [rax] ; test rdx, rdx ; je 0x4111f3 ; call rdx
0x0000000000401bde : sub eax, dword ptr [rax] ; xor eax, eax ; ret
0x000000000040205f : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000487853 : sub eax, dword ptr [rcx + r8*4] ; je 0x487837 ; ret
0x0000000000487854 : sub eax, dword ptr [rcx + rax*4] ; je 0x487836 ; ret
0x000000000040ff4e : sub eax, dword ptr [rdi + 0x18] ; ret
0x0000000000433cbc : sub eax, dword ptr [rdx + rcx*4] ; je 0x433ca6 ; ret
0x000000000040f183 : sub eax, dword ptr [rsi + 0x10] ; ret
0x00000000004100f8 : sub eax, dword ptr ss:[rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000004766e1 : sub eax, eax ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x00000000004b6f14 : sub eax, ebp ; cmc ; jmp qword ptr [rdx]
0x000000000040e4b1 : sub eax, ebp ; pop r13 ; pop r14 ; ret
0x0000000000463f4b : sub eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000046417a : sub eax, ebp ; pop rbp ; pop r12 ; ret
0x000000000040ebf9 : sub eax, ecx ; lea eax, dword ptr [r8 - 1] ; ret
0x0000000000418f4c : sub eax, ecx ; ret
0x00000000004b9981 : sub eax, edi ; call qword ptr [rax]
0x000000000041a041 : sub eax, edi ; ret
0x000000000046df19 : sub eax, edx ; mov qword ptr [rdi + 0x308], rax ; ret
0x000000000040f1ab : sub eax, edx ; ret
0x0000000000474e8f : sub eax, edx ; sar eax, 0x10 ; ret
0x0000000000474dfd : sub eax, edx ; shr rax, 0x3f ; ret
0x0000000000460f6a : sub eax, esi ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004620ce : sub eax, esi ; pop r14 ; pop r15 ; ret
0x000000000040bdb9 : sub eax, esp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000474a61 : sub ebp, dword ptr [rax + rax + 0x48] ; add esp, 0x58 ; ret
0x000000000047ef27 : sub ebp, dword ptr [rax + rax + 0x48] ; add esp, 8 ; ret
0x00000000004af15e : sub ebp, eax ; fcomp qword ptr [rdi - 0x4a] ; ret 0x474c
0x00000000004b225d : sub ebp, edi ; call rax
0x00000000004adbf5 : sub ebx, dword ptr [rbx - 0xb] ; pop rbx ; and dword ptr [rsi + rbp*2 - 0x7a], edi ; lahf ; ret 0x871e
0x0000000000411bb7 : sub ecx, dword ptr [rax + 0x39] ; ret
0x0000000000416764 : sub ecx, dword ptr [rcx - 0x7d] ; ret
0x00000000004b64a6 : sub ecx, dword ptr [rip + 0xd1cfff6] ; mov dh, 0xa8 ; cmc ; jmp qword ptr [rdx]
0x00000000004390bc : sub ecx, eax ; shl ecx, 3 ; pop rbx ; shl eax, cl ; pop rbp ; ret
0x0000000000496d05 : sub edi, eax ; call rax
0x000000000040f1b0 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000040f1a5 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000041c6a4 : sub edx, eax ; jbe 0x41c6e7 ; add rax, rdi ; ret
0x000000000041c6b4 : sub edx, eax ; jbe 0x41c6e9 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000041c6c4 : sub edx, eax ; jbe 0x41c6e9 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000041c6d4 : sub edx, eax ; jbe 0x41c6e9 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000473c71 : sub edx, eax ; mov eax, edx ; ret
0x0000000000473c34 : sub edx, ecx ; mov eax, edx ; ret
0x0000000000474e4d : sub edx, ecx ; not eax ; and eax, edx ; ret
0x000000000040b692 : sub edx, esi ; mov rdi, rbx ; call rax
0x000000000040055b : sub esi, edx ; add edx, ecx ; cmp esi, ecx ; cmovge eax, edx ; jmp 0x400539
0x0000000000463c5e : sub esp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004941d9 : sub esp, 8 ; add rsp, 8 ; ret
0x000000000040ebf8 : sub r8, rcx ; lea eax, dword ptr [r8 - 1] ; ret
0x0000000000433613 : sub rax, 1 ; ret
0x0000000000474ca5 : sub rax, qword ptr [0] ; ret
0x000000000040ff4d : sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000474ca4 : sub rax, qword ptr fs:[0] ; ret
0x000000000040bdb8 : sub rax, r12 ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000040e4b0 : sub rax, r13 ; pop r13 ; pop r14 ; ret
0x0000000000460f69 : sub rax, r14 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000004620cd : sub rax, r14 ; pop r14 ; pop r15 ; ret
0x0000000000464179 : sub rax, rbp ; pop rbp ; pop r12 ; ret
0x000000000041a040 : sub rax, rdi ; ret
0x0000000000474dfc : sub rax, rdx ; shr rax, 0x3f ; ret
0x000000000041c6a3 : sub rdx, rax ; jbe 0x41c6e8 ; add rax, rdi ; ret
0x000000000040b691 : sub rdx, rsi ; mov rdi, rbx ; call rax
0x0000000000463c5d : sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004941d8 : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000437aa7 : syscall ; pop rdx ; pop rsi ; ret
0x00000000004648e5 : syscall ; ret
0x000000000044ca94 : test ah, bh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffe8
0x000000000040e899 : test al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000048fe03 : test al, 0 ; add byte ptr [rax], al ; ret
0x00000000004b96e8 : test al, 0x16 ; clc ; call rdx
0x00000000004bd828 : test al, 0x3c ; sti ; call rsi
0x00000000004b48b8 : test al, 0x51 ; cmc ; jmp rsp
0x00000000004ae4b7 : test al, 0x97 ; xchg eax, esp ; ret
0x00000000004b7908 : test al, 0xdb ; cmc ; call qword ptr [rcx]
0x00000000004b6fec : test al, 0xea ; cmc ; jmp qword ptr [rdx]
0x00000000004b63d5 : test al, 0xf5 ; jmp qword ptr [rdx]
0x0000000000412b9e : test al, al ; add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000424c3a : test al, al ; jne 0x424c28 ; xor eax, eax ; sub eax, ecx ; ret
0x00000000004b2a44 : test al, cl ; std ; jmp rsp
0x0000000000453381 : test al, dl ; jmp 0x453385
0x00000000004be2a9 : test bh, bl ; call qword ptr [rax]
0x00000000004be2c1 : test bh, bl ; call qword ptr [rdx]
0x0000000000457531 : test byte ptr [rax + rax - 0x76b40000], ah ; ret 0x894c
0x0000000000488471 : test byte ptr [rax + rbp*8], ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000488ea3 : test byte ptr [rax + rbx*8], ah ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000043ad80 : test byte ptr [rax - 0x39], cl ; ret
0x0000000000442c96 : test byte ptr [rax - 0x75], 5 ; ret 0x2815
0x0000000000490382 : test byte ptr [rax - 0x77], 0xdf ; call r15
0x000000000043647e : test byte ptr [rax - 0x77], 0xef ; call rbx
0x00000000004bb43d : test byte ptr [rax], al ; add al, dh ; cli ; call qword ptr [rdx]
0x00000000004bb3ad : test byte ptr [rax], al ; add byte ptr [rax + 0x3e], al ; cli ; jmp rcx
0x000000000043195a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x0000000000430d9a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000040f4aa : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000040f46a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000433aea : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000040ea9a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000043179a : test byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000046a98b : test byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4101
0x000000000043ac65 : test byte ptr [rbp + rcx*4 + 0x2c], cl ; ret
0x00000000004b2e44 : test byte ptr [rbp - 0x3c6b0003], bh ; std ; jmp rcx
0x00000000004b2e24 : test byte ptr [rbp - 0x3cbd0003], bh ; std ; call qword ptr [rax - 0x3d]
0x000000000047edea : test byte ptr [rbx + 0x24585f3d], 0 ; jmp rax
0x000000000048acf9 : test byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000044cb00 : test byte ptr [rbx], cl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x39], cl ; ret 0xffe8
0x000000000041bbde : test byte ptr [rcx + rax - 0x7cb80000], dl ; ret 0xe901
0x0000000000438a0f : test byte ptr [rcx + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0x4801
0x0000000000475d64 : test byte ptr [rcx + rcx*4 - 9], 0xe8 ; ret
0x00000000004788c6 : test byte ptr [rcx - 0x47], 0x40 ; add byte ptr [rax], al ; add byte ptr [rcx - 0x77], cl ; ret 0x894c
0x00000000004192c6 : test byte ptr [rcx], 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004be754 : test byte ptr [rcx], al ; cld ; jmp qword ptr [rdx]
0x0000000000462aa4 : test byte ptr [rdi + 0x48000000], dl ; bsf eax, edx ; ret
0x00000000004560ae : test byte ptr [rdi - 0x1600002f], al ; pop rdx ; ret
0x0000000000435b4a : test byte ptr [rdi], 0x84 ; ret 0
0x0000000000476fd1 : test byte ptr [rdi], 0x84 ; ret 0x15
0x000000000040b4b2 : test byte ptr [rdi], 0x95 ; ret 0x8445
0x00000000004548d8 : test byte ptr [rdi], 0x9f ; ret 0x9529
0x000000000047b2ab : test byte ptr [rdx + rax], bl ; add byte ptr [rax - 0x39], cl ; ret
0x000000000043f723 : test byte ptr [rdx], 0 ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000463204 : test byte ptr [rdx], al ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000400d07 : test byte ptr [rip + 0x5b000001], dl ; pop rbp ; pop r12 ; ret
0x00000000004b63ce : test byte ptr [rip + 0xd1cfff6], 0x4b ; test al, 0xf5 ; jmp qword ptr [rdx]
0x000000000047079c : test byte ptr [rip - 0x428], al ; add dword ptr [rax - 0x7d], ecx ; ret 0x4101
0x00000000004588ea : test byte ptr [rsi], bl ; ret 0xffff
0x0000000000433b02 : test ch, 0xf0 ; je 0x433afb ; movzx eax, cl ; pop rbx ; ret
0x000000000043329f : test cl, cl ; jne 0x433294 ; ret
0x000000000043334f : test cl, cl ; jne 0x433344 ; ret
0x000000000043360f : test cl, cl ; jne 0x433608 ; sub rax, 1 ; ret
0x0000000000433b2a : test dh, 0xf0 ; je 0x433af9 ; movzx eax, dl ; pop rbx ; ret
0x0000000000433b2a : test dh, 0xf0 ; je 0x433afb ; movzx eax, dl ; pop rbx ; ret
0x0000000000473391 : test dh, bh ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret 0x2b49
0x000000000046d361 : test dh, bh ; add eax, dword ptr [rax] ; add byte ptr [rcx - 0x77], cl ; ret 0x8d48
0x0000000000413846 : test dh, bl ; or byte ptr [rax], al ; add byte ptr [rcx - 0xa], al ; ret 0xf01
0x00000000004699e8 : test dh, bl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004b5921 : test dh, ch ; jmp qword ptr [rcx]
0x00000000004b524d : test dh, ch ; jmp qword ptr [rdx]
0x000000000043f722 : test dh, dh ; add al, byte ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret
0x000000000043c295 : test dh, dh ; mov eax, 0xffffffff ; cmovns eax, edx ; ret
0x00000000004317e4 : test dl, 0x40 ; jne 0x4317a9 ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000431812 : test dl, 4 ; jne 0x4317a9 ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000043bcbd : test dl, ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000406ed2 : test dl, dl ; jne 0x406eb4 ; ret
0x00000000004334bf : test dl, dl ; jne 0x4334b8 ; lea rax, qword ptr [rcx - 1] ; ret
0x000000000048a21b : test dword ptr [rax + 0x39], 0x430f48c2 ; ret 0x8348
0x000000000041d289 : test dword ptr [rax + 0x48fffffb], edi ; mov eax, edi ; ret
0x000000000044a4c4 : test dword ptr [rax - 0x14000006], eax ; xor dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x0000000000451904 : test dword ptr [rax - 0x7c000002], eax ; ret 0x8908
0x000000000044a07f : test dword ptr [rax - 0x7c000005], esi ; ret 0x8908
0x000000000044a0ef : test dword ptr [rax - 0x7c000005], esi ; ret 0x8910
0x0000000000401a42 : test dword ptr [rax - 9], 0xaf0f48f3 ; ret
0x0000000000473392 : test dword ptr [rax], 0x89480000 ; ret 0x2b49
0x000000000045a499 : test dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xb848
0x00000000004728ea : test dword ptr [rax], eax ; or al, 0 ; add bl, dh ; ret
0x0000000000422c2f : test dword ptr [rbp - 0xc000004], esp ; ret
0x000000000041549d : test dword ptr [rbx + 0x48000021], edi ; mov eax, ebx ; pop rbx ; ret
0x0000000000425b07 : test dword ptr [rbx + 7], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000425f56 : test dword ptr [rbx + rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000046d362 : test dword ptr [rbx], 0x89490000 ; ret 0x8d48
0x000000000041c61a : test dword ptr [rcx + 0x48000000], esi ; xor eax, eax ; ret
0x000000000041cfa0 : test dword ptr [rcx + 0x48fffffe], esp ; mov eax, edi ; ret
0x0000000000425add : test dword ptr [rcx + 7], esi ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004259ed : test dword ptr [rcx + 8], esp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000004258fd : test dword ptr [rcx + 9], edx ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000459421 : test dword ptr [rcx], ebp ; ret
0x000000000041d18a : test dword ptr [rdi + 0x48fffffc], esi ; mov eax, edi ; ret
0x000000000044b605 : test dword ptr [rdi - 0x16000004], ebp ; scasd eax, dword ptr [rdi] ; ret
0x0000000000422a45 : test dword ptr [rdi - 0xc000002], ecx ; ret
0x0000000000410aeb : test dword ptr [rdx + 0x67], edi ; add byte ptr [rax], al ; ret
0x000000000040f543 : test dword ptr [rdx + rax], ebp ; add bl, dh ; ret
0x0000000000425822 : test dword ptr [rdx + rcx], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000455fbb : test dword ptr [rdx], ebp ; fcos ; dec dword ptr [rax - 0x39] ; ret 0xffc0
0x00000000004574be : test dword ptr [rdx], ebp ; mov ah, 0xff ; dec dword ptr [rax - 0x39] ; ret 0xffc0
0x000000000040d328 : test dword ptr [rsi + 0x22], ebx ; add byte ptr [rax], al ; ret
0x0000000000433022 : test dword ptr [rsi + 1], ebp ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000422d2e : test dword ptr [rsi - 0xc000005], esp ; ret
0x000000000043a205 : test dword ptr [rsi], 0x8b480000 ; jnp 0x43a22d ; call rax
0x0000000000425d28 : test dword ptr [rsi], esp ; add eax, 0xc0310000 ; ret
0x000000000045a498 : test dword ptr fs:[rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0xb848
0x00000000004a7969 : test eax, 0x44 ; add byte ptr [rax], al ; ret 0x44
0x0000000000437323 : test eax, 0x48fffde3 ; mov edi, dword ptr [rbx] ; call r12
0x00000000004b01a0 : test eax, 0x7d4c8c5d ; ret 0xd8f
0x0000000000428fa6 : test eax, 0x7f0f41f3 ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x0000000000469278 : test eax, 0x850f004a ; ret
0x0000000000401008 : test eax, eax ; je 0x40101c ; mov edi, 0x4b2f78 ; call rax
0x000000000040104d : test eax, eax ; je 0x401061 ; mov edi, 0x6c0ef0 ; call rax
0x0000000000402d07 : test eax, eax ; je 0x402d1b ; mov edi, 0x6c3140 ; call rax
0x0000000000403431 : test eax, eax ; je 0x40344c ; mov edi, 0x6c3140 ; call rax
0x00000000004036e1 : test eax, eax ; je 0x4036f5 ; mov edi, 0x6c31a0 ; call rax
0x0000000000416104 : test eax, eax ; je 0x41610e ; call rax
0x0000000000419cd3 : test eax, eax ; je 0x419cdf ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000433da6 : test eax, eax ; je 0x433dba ; mov edi, 0x6c42a0 ; call rax
0x0000000000433ed2 : test eax, eax ; je 0x433ee6 ; mov edi, 0x6c42a0 ; call rax
0x00000000004355f8 : test eax, eax ; je 0x435603 ; ret
0x0000000000438e41 : test eax, eax ; je 0x438e55 ; mov edi, 0x6c21e0 ; call rax
0x0000000000438fd6 : test eax, eax ; je 0x438fe4 ; ret
0x00000000004394c6 : test eax, eax ; je 0x4394d9 ; mov eax, 0x6c5000 ; ret
0x000000000044375f : test eax, eax ; je 0x443773 ; mov edi, 0x6c42a0 ; call rax
0x0000000000443784 : test eax, eax ; je 0x443798 ; mov edi, 0x6c42a0 ; call rax
0x0000000000443890 : test eax, eax ; je 0x44389a ; call rax
0x00000000004438ef : test eax, eax ; je 0x443903 ; mov edi, 0x6c42a0 ; call rax
0x00000000004439f6 : test eax, eax ; je 0x443a0a ; mov edi, 0x6c42a0 ; call rax
0x0000000000443b70 : test eax, eax ; je 0x443b7a ; call rax
0x0000000000443bfc : test eax, eax ; je 0x443c10 ; mov edi, 0x6c42a0 ; call rax
0x0000000000443cdb : test eax, eax ; je 0x443cf6 ; mov edi, 0x6c42a0 ; call rax
0x0000000000444c89 : test eax, eax ; je 0x444c93 ; call rax
0x0000000000467ccc : test eax, eax ; je 0x467cd6 ; call rax
0x0000000000467ed1 : test eax, eax ; je 0x467edf ; call rax
0x000000000046ce90 : test eax, eax ; je 0x46cbf3 ; call rax
0x000000000046cc4b : test eax, eax ; je 0x46cc55 ; call rax
0x000000000046d284 : test eax, eax ; je 0x46d298 ; mov rdi, qword ptr [rsp + 0x30] ; call rax
0x000000000046df82 : test eax, eax ; je 0x46df96 ; mov edi, 0x6c21a0 ; call rax
0x0000000000471bcc : test eax, eax ; je 0x471be0 ; mov edi, 0x6c21e0 ; call rax
0x0000000000471c50 : test eax, eax ; je 0x471c64 ; mov edi, 0x6c21e0 ; call rax
0x0000000000471d15 : test eax, eax ; je 0x471d29 ; mov edi, 0x6c21e0 ; call rax
0x000000000047305a : test eax, eax ; je 0x47306e ; mov edi, 0x6c21a0 ; call rax
0x000000000047355d : test eax, eax ; je 0x473571 ; mov edi, 0x6c21e0 ; call rax
0x0000000000474af9 : test eax, eax ; je 0x474ace ; mov edi, 0x6c21e0 ; call rax
0x0000000000474c4a : test eax, eax ; je 0x474c5e ; mov edi, 0x6c21e0 ; call rax
0x000000000047f150 : test eax, eax ; je 0x47f161 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000048b14d : test eax, eax ; je 0x48b161 ; mov edi, 0x6c21e0 ; call rax
0x000000000048b363 : test eax, eax ; je 0x48b377 ; mov edi, 0x6c21e0 ; call rax
0x000000000048cef0 : test eax, eax ; je 0x48cf04 ; mov edi, 0x6c21e0 ; call rax
0x000000000048cf9a : test eax, eax ; je 0x48cfae ; mov edi, 0x6c21e0 ; call rax
0x0000000000492438 : test eax, eax ; je 0x49244c ; mov edi, 0x6c21a0 ; call rax
0x00000000004924f9 : test eax, eax ; je 0x49250d ; mov edi, 0x6c21a0 ; call rax
0x000000000040f164 : test eax, eax ; jne 0x40f15d ; ret
0x000000000041c657 : test eax, eax ; jne 0x41c6b7 ; xor rax, rax ; ret
0x0000000000437a7f : test eax, eax ; jne 0x437a7b ; pop rdx ; pop r10 ; ret
0x0000000000464519 : test eax, eax ; jne 0x4644d8 ; nop dword ptr [rax] ; ret
0x0000000000468621 : test eax, eax ; jne 0x46868c ; mov rax, r9 ; ret
0x0000000000491bb6 : test eax, eax ; jne 0x491bc5 ; pop rbx ; ret
0x0000000000491dc2 : test eax, eax ; jne 0x491dd5 ; ret
0x000000000046e54a : test eax, eax ; js 0x46e555 ; pop rbx ; ret
0x000000000047e87b : test eax, eax ; js 0x47e88d ; ret
0x00000000004ba5d4 : test eax, edx ; clc ; jmp qword ptr [rdx]
0x000000000041c580 : test ebp, ebx ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret 0xc085
0x00000000004154c5 : test ebx, eax ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; call qword ptr [rax]
0x0000000000402c50 : test ebx, ebx ; je 0x402c6b ; mov edi, 0x6c42a0 ; call rbx
0x000000000043b349 : test ebx, ebx ; jne 0x43b325 ; jmp 0x43b317
0x000000000047eb94 : test ebx, ebx ; jne 0x47eba8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004925c3 : test ebx, ebx ; jne 0x4925b5 ; pop rbx ; ret
0x00000000004927ef : test ebx, ebx ; jne 0x4927e6 ; pop rbx ; ret
0x00000000004317d2 : test ebx, ecx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x00000000004317df : test ebx, esp ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x000000000048dfce : test edx, eax ; add byte ptr [rax], al ; add cl, ch ; ret 0xfff7
0x00000000004170b3 : test edx, edi ; je 0x4170c6 ; pop rbx ; ret
0x000000000043793b : test edx, edx ; cmovne eax, edx ; ret
0x00000000004111e6 : test edx, edx ; je 0x4111f0 ; call rdx
0x0000000000419ec9 : test edx, edx ; je 0x419ed7 ; bsf eax, edx ; ret
0x0000000000419ec9 : test edx, edx ; je 0x419ed8 ; bsf eax, edx ; ret
0x0000000000419f72 : test edx, edx ; je 0x419f87 ; bsf rax, rdx ; ret
0x0000000000419f72 : test edx, edx ; je 0x419f88 ; bsf rax, rdx ; ret
0x0000000000419f16 : test edx, edx ; je 0x419f98 ; bsf rax, rdx ; ret
0x0000000000462b11 : test edx, edx ; je 0x462b37 ; bsf rax, rdx ; ret
0x0000000000462b11 : test edx, edx ; je 0x462b38 ; bsf rax, rdx ; ret
0x0000000000467e51 : test edx, edx ; je 0x467e5f ; call rdx
0x0000000000493a8d : test edx, edx ; je 0x493a9c ; call rdx
0x000000000040dbef : test edx, edx ; jne 0x40dbe5 ; ret
0x000000000046153f : test edx, edx ; jne 0x461535 ; ret
0x000000000046455a : test edx, edx ; jne 0x464555 ; ret
0x0000000000400ecb : test edx, edx ; jns 0x400db2 ; jmp 0x400ea0
0x00000000004317c5 : test edx, esi ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x00000000004b5295 : test esi, ebp ; jmp qword ptr [rdx]
0x0000000000443220 : test esi, esi ; je 0x4431ee ; pop rbx ; ret
0x0000000000462a01 : test esi, esi ; jne 0x462a10 ; xor rax, rax ; ret
0x0000000000419cd2 : test r8d, r8d ; je 0x419ce0 ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000464518 : test r8d, r8d ; jne 0x4644d9 ; nop dword ptr [rax] ; ret
0x0000000000468620 : test r8d, r8d ; jne 0x46868d ; mov rax, r9 ; ret
0x0000000000416103 : test rax, rax ; je 0x41610f ; call rax
0x00000000004355f7 : test rax, rax ; je 0x435604 ; ret
0x000000000044388f : test rax, rax ; je 0x44389b ; call rax
0x0000000000443b6f : test rax, rax ; je 0x443b7b ; call rax
0x0000000000444c88 : test rax, rax ; je 0x444c94 ; call rax
0x0000000000467ccb : test rax, rax ; je 0x467cd7 ; call rax
0x0000000000467ed0 : test rax, rax ; je 0x467ee0 ; call rax
0x000000000046ce8f : test rax, rax ; je 0x46cbf4 ; call rax
0x000000000046cc4a : test rax, rax ; je 0x46cc56 ; call rax
0x000000000047f14f : test rax, rax ; je 0x47f162 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000040f163 : test rax, rax ; jne 0x40f15e ; ret
0x000000000043b348 : test rbx, rbx ; jne 0x43b326 ; jmp 0x43b318
0x000000000047eb93 : test rbx, rbx ; jne 0x47eba9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004925c2 : test rbx, rbx ; jne 0x4925b6 ; pop rbx ; ret
0x00000000004927ee : test rbx, rbx ; jne 0x4927e7 ; pop rbx ; ret
0x00000000004170b2 : test rdx, rdi ; je 0x4170c7 ; pop rbx ; ret
0x00000000004111e5 : test rdx, rdx ; je 0x4111f1 ; call rdx
0x0000000000419f71 : test rdx, rdx ; je 0x419f88 ; bsf rax, rdx ; ret
0x0000000000419f71 : test rdx, rdx ; je 0x419f89 ; bsf rax, rdx ; ret
0x0000000000419f15 : test rdx, rdx ; je 0x419f99 ; bsf rax, rdx ; ret
0x0000000000462b10 : test rdx, rdx ; je 0x462b38 ; bsf rax, rdx ; ret
0x0000000000462b10 : test rdx, rdx ; je 0x462b39 ; bsf rax, rdx ; ret
0x0000000000467e50 : test rdx, rdx ; je 0x467e60 ; call rdx
0x0000000000493a8c : test rdx, rdx ; je 0x493a9d ; call rdx
0x000000000040dbee : test rdx, rdx ; jne 0x40dbe6 ; ret
0x000000000046153e : test rdx, rdx ; jne 0x461536 ; ret
0x0000000000462a00 : test rsi, rsi ; jne 0x462a11 ; xor rax, rax ; ret
0x000000000040d007 : vminsd xmm8, xmm4, qword ptr [rcx + 0x5c] ; ret
0x0000000000421351 : vpcmpeqb xmm0, xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000004657ca : wait ; add al, 0 ; add byte ptr [rdi + rcx - 0x49], al ; ret 0x8d42
0x0000000000496e09 : wait ; clc ; inc dword ptr [rax - 0x63] ; clc ; jmp rax
0x00000000004b575d : wait ; cmc ; jmp qword ptr [rdx]
0x00000000004aca18 : wait ; ret
0x00000000004b93ec : wait ; sbb edi, eax ; jmp qword ptr [rdx]
0x0000000000497835 : wait ; stc ; call qword ptr [rax]
0x0000000000497829 : wait ; stc ; call rax
0x0000000000497825 : wait ; stc ; inc eax ; wait ; stc ; call rax
0x00000000004bacbc : wait ; stc ; jmp qword ptr [rdx]
0x000000000049782d : wait ; stc ; jmp rax
0x0000000000497831 : wait ; stc ; push rax ; wait ; stc ; call qword ptr [rax]
0x00000000004ba587 : xabort -1 ; sbb al, 0xd ; jbe 0x4ba558 ; clc ; jmp qword ptr [rdx]
0x00000000004ba5cf : xabort -1 ; sbb al, 0xd ; test eax, edx ; clc ; jmp qword ptr [rdx]
0x0000000000419adf : xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x00000000004205ff : xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004196cf : xchg ah, ch ; add eax, 0x83480000 ; ret 0xeb10
0x00000000004191db : xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000444e4b : xchg al, bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret 0x8b41
0x00000000004199eb : xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004bc564 : xchg ax, di ; cli ; jmp qword ptr [rdx]
0x000000000042224c : xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x0000000000421a6c : xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x0000000000421e5c : xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042167c : xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000048513d : xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004b83a9 : xchg bh, dh ; jmp qword ptr [rbx]
0x0000000000483c41 : xchg bl, cl ; adc eax, 0x83480000 ; ret 0xe910
0x0000000000484e41 : xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000484541 : xchg bl, cl ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000484841 : xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000483f39 : xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042115f : xchg byte ptr [rax + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042093f : xchg byte ptr [rax + rcx - 0x7cb80000], bl ; ret 0xe910
0x000000000041945f : xchg byte ptr [rax + rcx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000042011f : xchg byte ptr [rax + rdx - 0x7cb80000], bh ; ret 0xe910
0x000000000041979f : xchg byte ptr [rax - 0x7cb80000], bl ; ret 0xeb10
0x000000000045c507 : xchg byte ptr [rax - 0x7d], cl ; ret
0x0000000000419abb : xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042181b : xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000419b8b : xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000420c7f : xchg byte ptr [rbp + rax], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042045f : xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041fc3f : xchg byte ptr [rbp + rdx - 0x7cb80000], bl ; ret 0xe910
0x0000000000420e1f : xchg byte ptr [rbx + rax - 0x7cb80000], bh ; ret 0xe910
0x000000000041993f : xchg byte ptr [rbx + rax], bh ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000041912f : xchg byte ptr [rbx + rcx - 0x7cb80000], cl ; ret 0xeb10
0x000000000046657b : xchg byte ptr [rcx], al ; add byte ptr [rax + 0x39], cl ; ret
0x000000000041952f : xchg byte ptr [rdi + rax - 0x7cb80000], cl ; ret 0xeb10
0x0000000000421d0c : xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042152c : xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000046ccd4 : xchg byte ptr [rdi], bl ; add dword ptr [rax], eax ; add byte ptr [rax - 0x77], cl ; ret
0x000000000042263c : xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000419a0f : xchg byte ptr [rdx + rax - 0x7cb80000], ch ; ret 0xeb10
0x00000000004191ff : xchg byte ptr [rdx + rcx - 0x7cb80000], bh ; ret 0xeb10
0x000000000041ff7f : xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004192a1 : xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000045c2d9 : xchg byte ptr [rdx], cl ; jmp rdx
0x00000000004195ff : xchg byte ptr [rsi + rax - 0x7cb80000], bh ; ret 0xeb10
0x00000000004841e6 : xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004200b5 : xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000420db5 : xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004850e6 : xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004847e6 : xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004844e6 : xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x00000000004208d5 : xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000421c0d : xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000483ede : xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x000000000042253d : xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000041986f : xchg byte ptr [rsp + rax], cl ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x0000000000482f6f : xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000482d8f : xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000483767 : xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004b53fd : xchg ch, dh ; jmp qword ptr [rdx]
0x0000000000482687 : xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x0000000000483587 : xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004210f5 : xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x00000000004203f5 : xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000041ff15 : xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0x4910
0x0000000000420c15 : xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x0000000000497004 : xchg dh, ch ; clc ; call qword ptr [rsi]
0x0000000000421d5d : xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x000000000042157d : xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret 0xe910
0x00000000004192c5 : xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xeb10
0x000000000043a704 : xchg dword ptr [rbp + rcx*4 + 0x74], ecx ; ret
0x0000000000457c0e : xchg dword ptr [rbx - 0x77000000], esp ; ret 0x348
0x0000000000412798 : xchg dword ptr [rbx - 0x9fffffb], ebp ; ret
0x0000000000458f13 : xchg dword ptr [rbx], esi ; add al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004ade6c : xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x000000000048f442 : xchg dword ptr [rcx + rax - 8], ecx ; jmp rax
0x00000000004be79c : xchg dword ptr [rcx], eax ; cld ; jmp qword ptr [rdx]
0x00000000004525e0 : xchg dword ptr [rcx], ebx ; xor al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000457a31 : xchg dword ptr [rdi - 0x77000000], esp ; ret 0x348
0x0000000000437a7d : xchg dword ptr [rdi], eax ; test eax, eax ; jne 0x437a7d ; pop rdx ; pop r10 ; ret
0x000000000045a010 : xchg dword ptr [rdx], ecx ; jmp rdx
0x00000000004ae00b : xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x00000000004822c8 : xchg eax, ebp ; adc eax, 0x83480000 ; ret 0xe910
0x0000000000456688 : xchg eax, ebp ; or al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000400739 : xchg eax, ebp ; ret
0x000000000047714f : xchg eax, ebp ; ret 0x2948
0x0000000000460029 : xchg eax, ebp ; ret 0x5389
0x000000000040ad73 : xchg eax, ebp ; ret 0x60e9
0x0000000000404376 : xchg eax, ebp ; ret 0x81e9
0x000000000041336b : xchg eax, ebp ; ret 0x8348
0x0000000000410243 : xchg eax, ebp ; ret 0x8441
0x000000000040b4b4 : xchg eax, ebp ; ret 0x8445
0x000000000041493d : xchg eax, ebp ; ret 0x948
0x0000000000403945 : xchg eax, ebp ; ret 0x953d
0x0000000000476bd5 : xchg eax, ebp ; ret 0xb60f
0x0000000000464c22 : xchg eax, ebp ; ret 0xc031
0x000000000043826d : xchg eax, ebp ; ret 0xd009
0x0000000000488064 : xchg eax, ebp ; ret 0xd138
0x0000000000403ffc : xchg eax, ebp ; ret 0xd284
0x0000000000476d9f : xchg eax, ebp ; ret 0xd349
0x000000000046482c : xchg eax, ebp ; ret 0xd7e9
0x0000000000408b17 : xchg eax, ebp ; ret 0xdaf7
0x0000000000476ce4 : xchg eax, ebp ; ret 0xe083
0x0000000000439011 : xchg eax, ebp ; ret 0xe1eb
0x0000000000468de7 : xchg eax, ebp ; ret 0xe74
0x0000000000464c9b : xchg eax, ebp ; ret 0xf748
0x0000000000464698 : xchg eax, ebp ; ret 0xf883
0x000000000045ba14 : xchg eax, ebp ; shr dh, 0xff ; dec dword ptr [rcx + 0x39] ; ret 0x850f
0x0000000000469eac : xchg eax, ebx ; add al, 0 ; add byte ptr [rax - 0x7d], cl ; ret
0x000000000040e2f2 : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax - 0x75], cl ; jmp rax
0x00000000004bc315 : xchg eax, ebx ; add byte ptr [rax], al ; call 0xffffffffd14bbd9f
0x0000000000424c70 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x0000000000496df5 : xchg eax, ebx ; clc ; jmp qword ptr [rax]
0x0000000000413b59 : xchg eax, ebx ; in eax, 0x2a ; add byte ptr [rax - 0x77], cl ; ret 0x58b
0x0000000000430c5c : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000004263f2 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000004a8a10 : xchg eax, ebx ; mov esi, 0x45 ; add byte ptr [rax], al ; pushfq ; ret 0x45
0x0000000000459339 : xchg eax, ebx ; ret
0x00000000004668e5 : xchg eax, ebx ; ret 0x25
0x000000000040ae76 : xchg eax, ebx ; ret 0x3948
0x000000000044583f : xchg eax, ebx ; ret 0x3949
0x0000000000445b27 : xchg eax, ebx ; ret 0x8348
0x00000000004b9476 : xchg eax, ebx ; sbb eax, 0xd1cfff8 ; stc ; sbb edi, eax ; jmp qword ptr [rdx]
0x000000000040c7af : xchg eax, ecx ; add byte ptr [rax], 0 ; add byte ptr [rax - 0x77], cl ; ret 0xffb8
0x0000000000421201 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000041f92f : xchg eax, ecx ; sub eax, edx ; ret
0x000000000045a2c6 : xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rbx - 0x110f43], al ; call qword ptr [rax]
0x000000000045aab2 : xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rbx - 0x116343], al ; call qword ptr [rax]
0x00000000004bc715 : xchg eax, edi ; add byte ptr [rax], al ; cwde ; mov dr1, edx ; jmp rbx
0x00000000004bc51d : xchg eax, edi ; cli ; jmp qword ptr [rdx]
0x00000000004b55ad : xchg eax, edi ; cmc ; jmp qword ptr [rdx]
0x00000000004aca10 : xchg eax, edi ; ret
0x0000000000437d5d : xchg eax, edi ; ror byte ptr [rdi], 0x92 ; ret 0xd029
0x00000000004977e1 : xchg eax, edi ; stc ; call qword ptr [rax]
0x00000000004977fd : xchg eax, edi ; stc ; call rax
0x0000000000497801 : xchg eax, edi ; stc ; push rax ; xchg eax, edi ; stc ; call qword ptr [rax]
0x00000000004b563c : xchg eax, edi ; xchg eax, edi ; cmc ; jmp qword ptr [rdx]
0x00000000004ae4b8 : xchg eax, edi ; xchg eax, esp ; ret
0x00000000004b9f29 : xchg eax, edx ; clc ; call qword ptr [rdx]
0x00000000004763ea : xchg eax, edx ; idiv edi ; dec ecx ; ret
0x00000000004afd7d : xchg eax, edx ; jae 0x4afd5a ; push rsi ; pop rdx ; je 0x4afd4f ; ret 0xacfc
0x00000000004744b0 : xchg eax, edx ; ret 0x4a
0x0000000000437830 : xchg eax, edx ; ret 0x970f
0x0000000000437d60 : xchg eax, edx ; ret 0xd029
0x00000000004ade6f : xchg eax, edx ; ret 0xf869
0x0000000000497324 : xchg eax, edx ; stc ; jmp qword ptr [rdx]
0x00000000004b9541 : xchg eax, edx ; std ; call rsp
0x0000000000419cd7 : xchg eax, edx ; sub eax, edx ; ret
0x0000000000451052 : xchg eax, edx ; xor esp, dword ptr [rdi] ; add byte ptr [rbp + 0x5c], dh ; mov eax, edx ; pop rbx ; ret
0x0000000000424f70 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000042a7b7 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7f], cl ; ret 0x80
0x00000000004b5f09 : xchg eax, esi ; cmc ; jmp qword ptr [rax]
0x00000000004b54d5 : xchg eax, esi ; cmc ; jmp qword ptr [rdx]
0x00000000004b6d1c : xchg eax, esi ; jrcxz 0x4b6d17 ; jmp qword ptr [rdx]
0x000000000042502d : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000424f8b : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x000000000046853e : xchg eax, esi ; ret 0x394c
0x000000000041023c : xchg eax, esi ; ret 0x8348
0x00000000004b070c : xchg eax, esi ; ret 0xcd11
0x0000000000424fdc : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000457a4c : xchg eax, esi ; sar edi, cl ; dec dword ptr [rax - 0x7d] ; ret 0xeb08
0x00000000004977a1 : xchg eax, esi ; stc ; call qword ptr [rax]
0x00000000004977d1 : xchg eax, esi ; stc ; call rax
0x00000000004977dd : xchg eax, esi ; stc ; inc dword ptr [rax] ; xchg eax, edi ; stc ; call qword ptr [rax]
0x00000000004977cd : xchg eax, esi ; stc ; inc eax ; xchg eax, esi ; stc ; call rax
0x00000000004977a5 : xchg eax, esi ; stc ; jmp qword ptr [rax]
0x00000000004972c0 : xchg eax, esi ; stc ; jmp qword ptr [rsi]
0x00000000004977d5 : xchg eax, esi ; stc ; jmp rax
0x0000000000434b38 : xchg eax, esp ; add byte ptr [rax], r8b ; ret
0x000000000041bbdf : xchg eax, esp ; add dword ptr [rax], eax ; add byte ptr [rax - 0x7d], cl ; ret 0xe901
0x0000000000409441 : xchg eax, esp ; add dword ptr [rax], eax ; mov rdi, r13 ; call 0x4156d8
0x000000000043b178 : xchg eax, esp ; add eax, dword ptr [rax] ; mov rdi, rbx ; call r14
0x000000000044f626 : xchg eax, esp ; and al, 0x2c ; add dword ptr [rax], eax ; add byte ptr [rcx - 0x77], cl ; ret
0x000000000047e3cb : xchg eax, esp ; and al, 0x84 ; sbb eax, dword ptr [rax] ; add byte ptr [rcx], cl ; ret 0x840f
0x000000000043ddfe : xchg eax, esp ; and al, 0xa0 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000478993 : xchg eax, esp ; and al, 0xb0 ; add byte ptr [rax], al ; add byte ptr [rax - 0x77], cl ; ret
0x00000000004b091f : xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x4b08b0 ; ret 0x48f
0x000000000040037f : xchg eax, esp ; ret
0x000000000041245b : xchg eax, esp ; ret 0x1589
0x0000000000464b91 : xchg eax, esp ; ret 0x2b3c
0x000000000046c8aa : xchg eax, esp ; ret 0x5385
0x00000000004882f1 : xchg eax, esp ; ret 0x543a
0x000000000048823a : xchg eax, esp ; ret 0x5c88
0x00000000004059a3 : xchg eax, esp ; ret 0x70e9
0x000000000047ee6a : xchg eax, esp ; ret 0x950f
0x00000000004126b9 : xchg eax, esp ; ret 0xa0e9
0x00000000004028b8 : xchg eax, esp ; ret 0xb60f
0x000000000040188d : xchg eax, esp ; ret 0xc031
0x0000000000469563 : xchg eax, esp ; ret 0xc283
0x000000000045867f : xchg eax, esp ; ret 0xd189
0x0000000000447d86 : xchg eax, esp ; ret 0xd284
0x00000000004090bc : xchg eax, esp ; ret 0xdaf7
0x000000000046817f : xchg eax, esp ; ror byte ptr [rax - 0x7d], 0xc4 ; movzx rax, al ; ret
0x00000000004b2a40 : xchg eax, esp ; sar ebp, -1 ; test al, cl ; std ; jmp rsp
0x000000000046642d : xchg ebp, ebp ; and eax, 0xc8d4800 ; ret 0x840f
0x0000000000450c8e : xchg ebp, esi ; add byte ptr [rax], al ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004aca50 : xchg ebx, eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; add ah, al ; ret
0x00000000004b5f08 : xchg rax, rsi ; cmc ; jmp qword ptr [rax]
0x00000000004769af : xlatb ; add byte ptr [rax + 1], cl ; ret 0x8b48
0x00000000004a5029 : xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x00000000004262cc : xlatb ; add r9, r11 ; jmp r9
0x0000000000434141 : xlatb ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000040661c : xlatb ; call 0x4228d3
0x0000000000496f55 : xlatb ; clc ; call qword ptr [rax]
0x00000000004b2279 : xlatb ; cld ; call rax
0x00000000004b692d : xlatb ; cmc ; jmp qword ptr [rdx]
0x00000000004170b4 : xlatb ; je 0x4170c5 ; pop rbx ; ret
0x00000000004aeee3 : xlatb ; jo 0x4aef5f ; mov ebp, 0xfb67d10d ; ret
0x00000000004472b2 : xlatb ; mov byte ptr [rsi], al ; jne 0x447298 ; mov rax, rsi ; ret
0x0000000000417a19 : xlatb ; ret
0x0000000000419eef : xlatb ; ret 0x4166
0x00000000004b0386 : xlatb ; ret 0x4e27
0x0000000000462de7 : xlatb ; ret 0x94c
0x000000000041c47f : xlatb ; ret 0xc085
0x0000000000417a10 : xlatb ; ret 0xc148
0x0000000000423401 : xlatb ; rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret 0xc085
0x0000000000431786 : xlatb ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000418ee6 : xlatb ; sal bh, 1 ; ret 0x8000
0x0000000000418da6 : xlatb ; sal bh, 1 ; ret 0xc000
0x0000000000418c66 : xlatb ; sal bh, 1 ; ret 0xe000
0x0000000000418b26 : xlatb ; sal bh, 1 ; ret 0xf000
0x00000000004189e6 : xlatb ; sal bh, 1 ; ret 0xf800
0x00000000004188a6 : xlatb ; sal bh, 1 ; ret 0xfc00
0x0000000000418766 : xlatb ; sal bh, 1 ; ret 0xfe00
0x0000000000418626 : xlatb ; sal bh, 1 ; ret 0xff00
0x00000000004184e6 : xlatb ; sal bh, 1 ; ret 0xff80
0x00000000004183a6 : xlatb ; sal bh, 1 ; ret 0xffc0
0x0000000000418266 : xlatb ; sal bh, 1 ; ret 0xffe0
0x0000000000418126 : xlatb ; sal bh, 1 ; ret 0xfff0
0x0000000000417fe6 : xlatb ; sal bh, 1 ; ret 0xfff8
0x0000000000417ea6 : xlatb ; sal bh, 1 ; ret 0xfffc
0x0000000000417d66 : xlatb ; sal bh, 1 ; ret 0xfffe
0x0000000000431782 : xlatb ; shl byte ptr [rsi + 0xf], 0xd7 ; ror dword ptr [rcx], cl ; ret 0xe074
0x0000000000462d85 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000462d96 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x00000000004152b5 : xor al, 0x18 ; pop rbx ; ret
0x00000000004ade6a : xor al, 0x19 ; xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret 0xf869
0x000000000041579c : xor al, 0x24 ; jmp rax
0x0000000000489134 : xor al, 0x25 ; rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; mov eax, esi ; ret
0x0000000000434b98 : xor al, 0x46 ; add byte ptr [rax], al ; ret
0x00000000004b80ac : xor al, 0x51 ; add byte ptr [rax], al ; add byte ptr [rsi - 0xa], dh ; call qword ptr [rax]
0x0000000000401358 : xor al, 0x70 ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000004bb3ac : xor al, 0x84 ; add byte ptr [rax], al ; cli ; jmp rcx
0x00000000004bb9ac : xor al, 0x8a ; add byte ptr [rax], al ; push rbx ; cli ; call rcx
0x00000000004b66ec : xor al, 0xb7 ; cmc ; jmp qword ptr [rdx]
0x00000000004b2bcc : xor al, 0xc1 ; std ; inc esp ; ret
0x00000000004b2bc8 : xor al, 0xc1 ; std ; push qword ptr [rcx + rax*8] ; std ; inc esp ; ret
0x00000000004af04a : xor al, 0xd8 ; ret
0x00000000004b3a5d : xor al, 0xf5 ; jmp qword ptr [rdx]
0x0000000000492602 : xor al, bh ; dec dword ptr [rax - 0x77] ; fucompi st(0) ; ret
0x00000000004ac980 : xor al, bl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi], dh ; ret
0x00000000004525e2 : xor al, byte ptr [rax] ; add byte ptr [rax - 0x7d], cl ; ret
0x00000000004b9a39 : xor bh, al ; jmp qword ptr [rdx]
0x000000000041c6dc : xor bl, al ; nop ; xor rax, rax ; ret
0x000000000041c59d : xor byte ptr [r14 + 0xf], r12b ; xlatb ; ret
0x00000000004093e0 : xor byte ptr [rax + 0x29], cl ; ret
0x000000000047cbcc : xor byte ptr [rax + 0x29], cl ; ret 0x2948
0x0000000000492384 : xor byte ptr [rax + 0x39], cl ; ret
0x0000000000417a3f : xor byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000417921 : xor byte ptr [rax + 0xf], cl ; ret 0x90c3
0x0000000000419def : xor byte ptr [rax - 0x77], cl ; add cl, byte ptr [rax - 0x7d] ; ret 0x4808
0x00000000004643fd : xor byte ptr [rax - 0x77], cl ; ret 0x294c
0x000000000045f561 : xor byte ptr [rax - 0x77], cl ; ret 0xee83
0x000000000043d9f3 : xor byte ptr [rax - 0x77], cl ; sbb bl, ch ; ret 0x1f0f
0x000000000044160d : xor byte ptr [rax - 0x77], cl ; sbb byte ptr [rbx - 0x14d3dbbc], cl ; ret 0x8948
0x00000000004404d5 : xor byte ptr [rax - 0x77], cl ; sbb byte ptr [rbx - 0x14dbdbbc], cl ; ret 0x8948
0x0000000000493143 : xor byte ptr [rax - 0x7b], cl ; push qword ptr [rdi + rbx - 0x18] ; ret 0xfff7
0x0000000000490ad4 : xor byte ptr [rax - 0x7b], cl ; ret 0x840f
0x0000000000456d9a : xor byte ptr [rax - 0x7d], cl ; ret
0x00000000004b4e80 : xor byte ptr [rax - 0xb], dh ; jmp rax
0x00000000004b6065 : xor byte ptr [rax], al ; add al, cl ; pushfq ; cmc ; call qword ptr [rsi]
0x00000000004079f3 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000433bcc : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000004622b1 : xor byte ptr [rax], al ; je 0x4622c8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000004747b1 : xor byte ptr [rax], al ; jne 0x4747c8 ; add rsp, 0x48 ; ret
0x00000000004970a8 : xor byte ptr [rax], dl ; stc ; call qword ptr [rax]
0x0000000000491ecb : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000004343e3 : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000004b7707 : xor byte ptr [rbx + 0xade0206], al ; ret
0x000000000041d1eb : xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x000000000040ebae : xor byte ptr [rbx - 0x198a0008], al ; pop rbx ; ret
0x0000000000456a8c : xor byte ptr [rcx + 0xf], al ; mov dh, 0x45 ; add byte ptr [rax - 0x7d], cl ; ret
0x0000000000413b88 : xor byte ptr [rcx + rcx*4 + 0x5c], al ; and al, 0x28 ; call rax
0x00000000004642c6 : xor byte ptr [rcx + rcx*4 - 0x19], cl ; call rbx
0x0000000000416e7c : xor byte ptr [rcx + rcx*4 - 0x20], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000409526 : xor byte ptr [rcx - 0x77], cl ; ret 0xb941
0x00000000004528ab : xor byte ptr [rcx - 0x7d], cl ; ret 0x4101
0x0000000000451c62 : xor byte ptr [rcx - 0x7d], cl ; ret 0x4401
0x000000000045250b : xor byte ptr [rcx - 0x7d], cl ; ret 0xe901
0x00000000004b3740 : xor byte ptr [rdi], dl ; cmc ; call qword ptr [rax]
0x0000000000496d00 : xor byte ptr [rdx], ch ; clc ; inc dword ptr [rax] ; sub edi, eax ; call rax
0x00000000004976a4 : xor byte ptr [rip + 0x3cb0fff9], bh ; stc ; jmp qword ptr [rax]
0x0000000000424d1f : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret 0x830f
0x0000000000462d4c : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000041c59e : xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000496e38 : xor byte ptr [rsi - 0x507f0008], ch ; clc ; call rax
0x00000000004b70c4 : xor ch, 0xf5 ; jmp qword ptr [rdx]
0x0000000000496f8c : xor ch, bl ; clc ; call rax
0x00000000004bb05c : xor ch, byte ptr [rdx - 7] ; jmp qword ptr [rdx]
0x0000000000487f4b : xor cl, al ; call 0x490aa876
0x0000000000487a16 : xor cl, byte ptr [rax - 0x77] ; ret 0xc148
0x0000000000493c16 : xor cl, byte ptr [rax] ; and eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000412459 : xor cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x1589
0x0000000000478220 : xor cl, ch ; ret 0xfff0
0x0000000000497098 : xor cl, dh ; clc ; call rax
0x000000000044a4ca : xor dword ptr [rax - 0x7d], ecx ; ret 0x4801
0x000000000041535a : xor dword ptr [rax - 0x7d], ecx ; ret 0x4810
0x00000000004b614d : xor dword ptr [rax], eax ; add al, dh ; popfq ; cmc ; call qword ptr [rdx]
0x00000000004a8628 : xor dword ptr [rbp + 0x45], 0 ; add byte ptr [rbx], al ; ret 0x45
0x0000000000434e57 : xor dword ptr [rbx + rax*2], 0 ; ret
0x00000000004975e1 : xor eax, 0x3d54fff9 ; stc ; call rsp
0x00000000004974a1 : xor eax, 0x3da0fff9 ; stc ; jmp qword ptr [rax]
0x00000000004680a0 : xor eax, 0x70c48348 ; pop rbx ; ret
0x000000000046d684 : xor eax, 0x8b480000 ; mov r9b, r13b ; ret
0x00000000004079f0 : xor eax, dword ptr [0x30] ; call rax
0x000000000049079a : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000416aee : xor eax, eax ; add rsp, 0x18 ; ret
0x0000000000474856 : xor eax, eax ; add rsp, 0x58 ; ret
0x000000000047492f : xor eax, eax ; add rsp, 0x78 ; ret
0x0000000000415123 : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000415e10 : xor eax, eax ; add rsp, 8 ; ret
0x0000000000460f57 : xor eax, eax ; call r12
0x0000000000471489 : xor eax, eax ; cmp rdx, 0xff ; cmovne rax, rdx ; ret
0x0000000000437a57 : xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x000000000046825e : xor eax, eax ; cmp rsi, rdx ; ja 0x468278 ; ret
0x000000000048ea23 : xor eax, eax ; jmp 0x48e4ce
0x0000000000437e80 : xor eax, eax ; leave ; ret
0x000000000040f205 : xor eax, eax ; mov qword ptr [rdx + 8], rcx ; ret
0x000000000046452c : xor eax, eax ; nop ; ret
0x000000000040654a : xor eax, eax ; pop r12 ; ret
0x000000000043b1ed : xor eax, eax ; pop r14 ; ret
0x0000000000437dff : xor eax, eax ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x0000000000446afd : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000407c0d : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000419e7c : xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000040b7cc : xor eax, eax ; pop rbx ; ret
0x0000000000401be0 : xor eax, eax ; ret
0x0000000000424c3e : xor eax, eax ; sub eax, ecx ; ret
0x0000000000433b28 : xor eax, eax ; test dh, 0xf0 ; je 0x433afb ; movzx eax, dl ; pop rbx ; ret
0x00000000004b950c : xor ebx, dword ptr [rax + rdi*8] ; jmp qword ptr [rdx]
0x0000000000491d70 : xor ebx, ebx ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000475911 : xor ecx, dword ptr [rax + 0x39] ; ret
0x0000000000467a1e : xor ecx, ecx ; jmp 0x4679e8
0x000000000043a0e0 : xor edx, edx ; add eax, 2 ; mov dword ptr [rsp], eax ; call rbx
0x000000000043900c : xor edx, edx ; cmp ebx, eax ; setne dl ; jmp 0x438ffc
0x000000000040e749 : xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000048d053 : xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x000000000047ebbc : xor edx, edx ; pop rbx ; div rbp ; pop rbp ; pop r12 ; ret
0x0000000000470da4 : xor edx, edx ; pop rbx ; mov eax, edx ; pop rbp ; ret
0x00000000004152b1 : xor esi, edx ; mov byte ptr [rax + rbx], sil ; pop rbx ; ret
0x0000000000403a49 : xor esi, esi ; call rax
0x0000000000404c17 : xor esi, esi ; jmp 0x403c2c
0x0000000000401cf5 : xor esi, esi ; mov edi, 1 ; call rax
0x000000000047ede9 : xor esi, esi ; mov edi, dword ptr [rip + 0x24585f] ; jmp rax
0x00000000004364a2 : xor esi, esi ; mov rdi, r12 ; call rbx
0x00000000004364c7 : xor esi, esi ; mov rdi, r13 ; call rbx
0x00000000004364eb : xor esi, esi ; mov rdi, r14 ; call rbx
0x000000000043650b : xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000043647d : xor esi, esi ; mov rdi, rbp ; call rbx
0x0000000000434ad7 : xor esp, 0x46 ; add byte ptr [rax], al ; ret
0x0000000000451053 : xor esp, dword ptr [rdi] ; add byte ptr [rbp + 0x5c], dh ; mov eax, edx ; pop rbx ; ret
0x0000000000460f56 : xor r8d, r8d ; call r12
0x00000000004079ef : xor rax, qword ptr [0x30] ; call rax
0x00000000004079ee : xor rax, qword ptr fs:[0x30] ; call rax
0x000000000041c61f : xor rax, rax ; ret

Unique gadgets found: 9248
